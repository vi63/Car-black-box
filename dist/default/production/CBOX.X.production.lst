

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jun 13 19:35:36 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64   000000                     
    65                           ; Version 2.20
    66                           ; Generated 12/02/2020 GMT
    67                           ; 
    68                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F4580 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99   000000                     
   100                           	psect	idataCOMRAM
   101   0009AE                     __pidataCOMRAM:
   102                           	callstack 0
   103                           
   104                           ;initializer for _count
   105   0009AE  01                 	db	1
   106                           
   107                           ;initializer for _axis
   108   0009AF  01                 	db	1
   109                           
   110                           ;initializer for _lap
   111   0009B0  01                 	db	1
   112                           
   113                           ;initializer for read_switches@once
   114   0009B1  01                 	db	1
   115                           
   116                           	psect	idataBANK0
   117   000AB4                     __pidataBANK0:
   118                           	callstack 0
   119                           
   120                           ;initializer for _gear
   121   000AB4  F0                 	db	low STR_16
   122   000AB5  2F                 	db	high STR_16
   123   000AB6  F6                 	db	low STR_17
   124   000AB7  2F                 	db	high STR_17
   125   000AB8  ED                 	db	low STR_18
   126   000AB9  2F                 	db	high STR_18
   127   000ABA  E1                 	db	low STR_19
   128   000ABB  2F                 	db	high STR_19
   129   000ABC  E4                 	db	low STR_20
   130   000ABD  2F                 	db	high STR_20
   131   000ABE  E7                 	db	low STR_21
   132   000ABF  2F                 	db	high STR_21
   133   000AC0  EA                 	db	low STR_22
   134   000AC1  2F                 	db	high STR_22
   135                           
   136                           ;initializer for _vmenu
   137   000AC2  BD                 	db	low STR_7
   138   000AC3  2F                 	db	high STR_7
   139   000AC4  72                 	db	low STR_8
   140   000AC5  2F                 	db	high STR_8
   141   000AC6  A1                 	db	low STR_9
   142   000AC7  2F                 	db	high STR_9
   143   000AC8  B4                 	db	low STR_10
   144   000AC9  2F                 	db	high STR_10
   145   000ACA  17                 	db	low STR_11
   146   000ACB  2F                 	db	high STR_11
   147                           
   148                           ;initializer for _original
   149   000ACC  31                 	db	49
   150   000ACD  31                 	db	49
   151   000ACE  31                 	db	49
   152   000ACF  30                 	db	48
   153   000AD0  00                 	db	0
   154                           
   155                           ;initializer for download_log@index
   156   000AD1  01                 	db	1
   157   000000                     _RCREG	set	4014
   158   000000                     _TXREG	set	4013
   159   000000                     _SPBRG	set	4015
   160   000000                     _SSPADD	set	4040
   161   000000                     _SSPCON1	set	4038
   162   000000                     _TRISC	set	3988
   163   000000                     _ADRESL	set	4035
   164   000000                     _ADRESH	set	4036
   165   000000                     _ACKSTAT	set	32302
   166   000000                     _CKE	set	32318
   167   000000                     _TRISD7	set	31919
   168   000000                     _RBPU	set	32655
   169   000000                     _VCFG1	set	32269
   170   000000                     _GODONE	set	32273
   171   000000                     _TRISD	set	3989
   172   000000                     _PORTBbits	set	3969
   173   000000                     _ADCON1	set	4033
   174   000000                     _ADCON0	set	4034
   175   000000                     _RCIF	set	31989
   176   000000                     _TXIF	set	31988
   177   000000                     _CREN	set	32092
   178   000000                     _TRISC6	set	31910
   179   000000                     _TRISC7	set	31911
   180   000000                     _ACKEN	set	32300
   181   000000                     _ACKDT	set	32301
   182   000000                     _RCEN	set	32299
   183   000000                     _RSEN	set	32297
   184   000000                     _PEN	set	32298
   185   000000                     _SEN	set	32296
   186   000000                     _SMP	set	32319
   187   000000                     _TRISC4	set	31908
   188   000000                     _TRISC3	set	31907
   189   000000                     _RD7	set	31775
   190   000000                     _RC0	set	31760
   191   000000                     _RC2	set	31762
   192   000000                     _GO	set	32273
   193   000000                     _ADON	set	32272
   194   000000                     _VCFG0	set	32268
   195   000000                     _ADCS2	set	32258
   196   000000                     _ADCS1	set	32257
   197   000000                     _ADCS0	set	32256
   198   000000                     _ACQT0	set	32259
   199   000000                     _ACQT1	set	32260
   200   000000                     _ACQT2	set	32261
   201   000000                     _PORTB	set	3969
   202   000000                     _TRISB	set	3987
   203   000000                     _ADFM	set	32263
   204   000000                     _PORTD	set	3971
   205   000000                     _RC1	set	31761
   206   000000                     _RCIE	set	31981
   207   000000                     _SSPIF	set	31987
   208   000000                     _SSPBUF	set	4041
   209   000000                     _BCLIF	set	32011
   210   000000                     _SPEN	set	32095
   211   000000                     _BRGH	set	32098
   212                           
   213                           	psect	mediumconst
   214   002EA8                     __pmediumconst:
   215                           	callstack 0
   216   002EA8  00                 	db	0
   217   002EA9                     STR_12:
   218   002EA9  44                 	db	68	;'D'
   219   002EAA  6F                 	db	111	;'o'
   220   002EAB  77                 	db	119	;'w'
   221   002EAC  6E                 	db	110	;'n'
   222   002EAD  6C                 	db	108	;'l'
   223   002EAE  6F                 	db	111	;'o'
   224   002EAF  61                 	db	97	;'a'
   225   002EB0  64                 	db	100	;'d'
   226   002EB1  65                 	db	101	;'e'
   227   002EB2  64                 	db	100	;'d'
   228   002EB3  20                 	db	32
   229   002EB4  53                 	db	83	;'S'
   230   002EB5  75                 	db	117	;'u'
   231   002EB6  63                 	db	99	;'c'
   232   002EB7  63                 	db	99	;'c'
   233   002EB8  65                 	db	101	;'e'
   234   002EB9  73                 	db	115	;'s'
   235   002EBA  73                 	db	115	;'s'
   236   002EBB  66                 	db	102	;'f'
   237   002EBC  75                 	db	117	;'u'
   238   002EBD  6C                 	db	108	;'l'
   239   002EBE  21                 	db	33
   240   002EBF  00                 	db	0
   241   002EC0                     STR_1:
   242   002EC0  45                 	db	69	;'E'
   243   002EC1  6E                 	db	110	;'n'
   244   002EC2  74                 	db	116	;'t'
   245   002EC3  65                 	db	101	;'e'
   246   002EC4  72                 	db	114	;'r'
   247   002EC5  20                 	db	32
   248   002EC6  4E                 	db	78	;'N'
   249   002EC7  65                 	db	101	;'e'
   250   002EC8  77                 	db	119	;'w'
   251   002EC9  20                 	db	32
   252   002ECA  50                 	db	80	;'P'
   253   002ECB  61                 	db	97	;'a'
   254   002ECC  73                 	db	115	;'s'
   255   002ECD  73                 	db	115	;'s'
   256   002ECE  77                 	db	119	;'w'
   257   002ECF  6F                 	db	111	;'o'
   258   002ED0  72                 	db	114	;'r'
   259   002ED1  64                 	db	100	;'d'
   260   002ED2  00                 	db	0
   261   002ED3                     STR_29:
   262   002ED3  20                 	db	32
   263   002ED4  20                 	db	32
   264   002ED5  20                 	db	32
   265   002ED6  20                 	db	32
   266   002ED7  53                 	db	83	;'S'
   267   002ED8  55                 	db	85	;'U'
   268   002ED9  43                 	db	67	;'C'
   269   002EDA  43                 	db	67	;'C'
   270   002EDB  45                 	db	69	;'E'
   271   002EDC  53                 	db	83	;'S'
   272   002EDD  53                 	db	83	;'S'
   273   002EDE  20                 	db	32
   274   002EDF  20                 	db	32
   275   002EE0  20                 	db	32
   276   002EE1  20                 	db	32
   277   002EE2  20                 	db	32
   278   002EE3  00                 	db	0
   279   002EE4                     STR_26:
   280   002EE4  20                 	db	32
   281   002EE5  20                 	db	32
   282   002EE6  20                 	db	32
   283   002EE7  20                 	db	32
   284   002EE8  53                 	db	83	;'S'
   285   002EE9  45                 	db	69	;'E'
   286   002EEA  54                 	db	84	;'T'
   287   002EEB  20                 	db	32
   288   002EEC  54                 	db	84	;'T'
   289   002EED  49                 	db	73	;'I'
   290   002EEE  4D                 	db	77	;'M'
   291   002EEF  45                 	db	69	;'E'
   292   002EF0  20                 	db	32
   293   002EF1  20                 	db	32
   294   002EF2  20                 	db	32
   295   002EF3  20                 	db	32
   296   002EF4  00                 	db	0
   297   002EF5                     STR_2:
   298   002EF5  43                 	db	67	;'C'
   299   002EF6  6F                 	db	111	;'o'
   300   002EF7  6E                 	db	110	;'n'
   301   002EF8  66                 	db	102	;'f'
   302   002EF9  69                 	db	105	;'i'
   303   002EFA  72                 	db	114	;'r'
   304   002EFB  6D                 	db	109	;'m'
   305   002EFC  20                 	db	32
   306   002EFD  50                 	db	80	;'P'
   307   002EFE  61                 	db	97	;'a'
   308   002EFF  73                 	db	115	;'s'
   309   002F00  73                 	db	115	;'s'
   310   002F01  77                 	db	119	;'w'
   311   002F02  6F                 	db	111	;'o'
   312   002F03  72                 	db	114	;'r'
   313   002F04  64                 	db	100	;'d'
   314   002F05  00                 	db	0
   315   002F06                     STR_5:
   316   002F06  50                 	db	80	;'P'
   317   002F07  61                 	db	97	;'a'
   318   002F08  73                 	db	115	;'s'
   319   002F09  73                 	db	115	;'s'
   320   002F0A  77                 	db	119	;'w'
   321   002F0B  6F                 	db	111	;'o'
   322   002F0C  72                 	db	114	;'r'
   323   002F0D  64                 	db	100	;'d'
   324   002F0E  73                 	db	115	;'s'
   325   002F0F  20                 	db	32
   326   002F10  44                 	db	68	;'D'
   327   002F11  6F                 	db	111	;'o'
   328   002F12  20                 	db	32
   329   002F13  4E                 	db	78	;'N'
   330   002F14  6F                 	db	111	;'o'
   331   002F15  74                 	db	116	;'t'
   332   002F16  00                 	db	0
   333   002F17                     STR_11:
   334   002F17  43                 	db	67	;'C'
   335   002F18  68                 	db	104	;'h'
   336   002F19  61                 	db	97	;'a'
   337   002F1A  6E                 	db	110	;'n'
   338   002F1B  67                 	db	103	;'g'
   339   002F1C  65                 	db	101	;'e'
   340   002F1D  20                 	db	32
   341   002F1E  70                 	db	112	;'p'
   342   002F1F  61                 	db	97	;'a'
   343   002F20  73                 	db	115	;'s'
   344   002F21  73                 	db	115	;'s'
   345   002F22  77                 	db	119	;'w'
   346   002F23  6F                 	db	111	;'o'
   347   002F24  72                 	db	114	;'r'
   348   002F25  64                 	db	100	;'d'
   349   002F26  00                 	db	0
   350   002F27                     STR_3:
   351   002F27  43                 	db	67	;'C'
   352   002F28  68                 	db	104	;'h'
   353   002F29  61                 	db	97	;'a'
   354   002F2A  6E                 	db	110	;'n'
   355   002F2B  67                 	db	103	;'g'
   356   002F2C  65                 	db	101	;'e'
   357   002F2D  20                 	db	32
   358   002F2E  50                 	db	80	;'P'
   359   002F2F  61                 	db	97	;'a'
   360   002F30  73                 	db	115	;'s'
   361   002F31  73                 	db	115	;'s'
   362   002F32  77                 	db	119	;'w'
   363   002F33  6F                 	db	111	;'o'
   364   002F34  72                 	db	114	;'r'
   365   002F35  64                 	db	100	;'d'
   366   002F36  00                 	db	0
   367   002F37                     STR_30:
   368   002F37  45                 	db	69	;'E'
   369   002F38  6E                 	db	110	;'n'
   370   002F39  74                 	db	116	;'t'
   371   002F3A  65                 	db	101	;'e'
   372   002F3B  72                 	db	114	;'r'
   373   002F3C  20                 	db	32
   374   002F3D  50                 	db	80	;'P'
   375   002F3E  61                 	db	97	;'a'
   376   002F3F  73                 	db	115	;'s'
   377   002F40  73                 	db	115	;'s'
   378   002F41  77                 	db	119	;'w'
   379   002F42  6F                 	db	111	;'o'
   380   002F43  72                 	db	114	;'r'
   381   002F44  64                 	db	100	;'d'
   382   002F45  00                 	db	0
   383   002F46                     STR_32:
   384   002F46  57                 	db	87	;'W'
   385   002F47  72                 	db	114	;'r'
   386   002F48  6F                 	db	111	;'o'
   387   002F49  6E                 	db	110	;'n'
   388   002F4A  67                 	db	103	;'g'
   389   002F4B  20                 	db	32
   390   002F4C  70                 	db	112	;'p'
   391   002F4D  61                 	db	97	;'a'
   392   002F4E  73                 	db	115	;'s'
   393   002F4F  73                 	db	115	;'s'
   394   002F50  77                 	db	119	;'w'
   395   002F51  6F                 	db	111	;'o'
   396   002F52  72                 	db	114	;'r'
   397   002F53  64                 	db	100	;'d'
   398   002F54  00                 	db	0
   399   002F55                     STR_15:
   400   002F55  4C                 	db	76	;'L'
   401   002F56  6F                 	db	111	;'o'
   402   002F57  67                 	db	103	;'g'
   403   002F58  73                 	db	115	;'s'
   404   002F59  20                 	db	32
   405   002F5A  43                 	db	67	;'C'
   406   002F5B  6C                 	db	108	;'l'
   407   002F5C  65                 	db	101	;'e'
   408   002F5D  61                 	db	97	;'a'
   409   002F5E  72                 	db	114	;'r'
   410   002F5F  65                 	db	101	;'e'
   411   002F60  64                 	db	100	;'d'
   412   002F61  21                 	db	33
   413   002F62  21                 	db	33
   414   002F63  00                 	db	0
   415   002F64                     STR_33:
   416   002F64  41                 	db	65	;'A'
   417   002F65  74                 	db	116	;'t'
   418   002F66  74                 	db	116	;'t'
   419   002F67  65                 	db	101	;'e'
   420   002F68  6D                 	db	109	;'m'
   421   002F69  70                 	db	112	;'p'
   422   002F6A  74                 	db	116	;'t'
   423   002F6B  73                 	db	115	;'s'
   424   002F6C  20                 	db	32
   425   002F6D  4C                 	db	76	;'L'
   426   002F6E  65                 	db	101	;'e'
   427   002F6F  66                 	db	102	;'f'
   428   002F70  74                 	db	116	;'t'
   429   002F71  00                 	db	0
   430   002F72                     STR_8:
   431   002F72  44                 	db	68	;'D'
   432   002F73  6F                 	db	111	;'o'
   433   002F74  77                 	db	119	;'w'
   434   002F75  6E                 	db	110	;'n'
   435   002F76  6C                 	db	108	;'l'
   436   002F77  6F                 	db	111	;'o'
   437   002F78  61                 	db	97	;'a'
   438   002F79  64                 	db	100	;'d'
   439   002F7A  20                 	db	32
   440   002F7B  6C                 	db	108	;'l'
   441   002F7C  6F                 	db	111	;'o'
   442   002F7D  67                 	db	103	;'g'
   443   002F7E  00                 	db	0
   444   002F7F                     STR_4:
   445   002F7F  53                 	db	83	;'S'
   446   002F80  75                 	db	117	;'u'
   447   002F81  63                 	db	99	;'c'
   448   002F82  63                 	db	99	;'c'
   449   002F83  65                 	db	101	;'e'
   450   002F84  73                 	db	115	;'s'
   451   002F85  73                 	db	115	;'s'
   452   002F86  66                 	db	102	;'f'
   453   002F87  75                 	db	117	;'u'
   454   002F88  6C                 	db	108	;'l'
   455   002F89  21                 	db	33
   456   002F8A  21                 	db	33
   457   002F8B  00                 	db	0
   458   002F8C                     STR_31:
   459   002F8C  53                 	db	83	;'S'
   460   002F8D  75                 	db	117	;'u'
   461   002F8E  63                 	db	99	;'c'
   462   002F8F  63                 	db	99	;'c'
   463   002F90  65                 	db	101	;'e'
   464   002F91  73                 	db	115	;'s'
   465   002F92  73                 	db	115	;'s'
   466   002F93  66                 	db	102	;'f'
   467   002F94  75                 	db	117	;'u'
   468   002F95  6C                 	db	108	;'l'
   469   002F96  00                 	db	0
   470   002F97                     STR_36:
   471   002F97  56                 	db	86	;'V'
   472   002F98  49                 	db	73	;'I'
   473   002F99  45                 	db	69	;'E'
   474   002F9A  57                 	db	87	;'W'
   475   002F9B  20                 	db	32
   476   002F9C  4C                 	db	76	;'L'
   477   002F9D  4F                 	db	79	;'O'
   478   002F9E  47                 	db	71	;'G'
   479   002F9F  53                 	db	83	;'S'
   480   002FA0  00                 	db	0
   481   002FA1                     STR_9:
   482   002FA1  43                 	db	67	;'C'
   483   002FA2  6C                 	db	108	;'l'
   484   002FA3  65                 	db	101	;'e'
   485   002FA4  61                 	db	97	;'a'
   486   002FA5  72                 	db	114	;'r'
   487   002FA6  20                 	db	32
   488   002FA7  6C                 	db	108	;'l'
   489   002FA8  6F                 	db	111	;'o'
   490   002FA9  67                 	db	103	;'g'
   491   002FAA  00                 	db	0
   492   002FAB                     STR_35:
   493   002FAB  73                 	db	115	;'s'
   494   002FAC  65                 	db	101	;'e'
   495   002FAD  63                 	db	99	;'c'
   496   002FAE  20                 	db	32
   497   002FAF  6C                 	db	108	;'l'
   498   002FB0  65                 	db	101	;'e'
   499   002FB1  66                 	db	102	;'f'
   500   002FB2  74                 	db	116	;'t'
   501   002FB3  00                 	db	0
   502   002FB4                     STR_10:
   503   002FB4  53                 	db	83	;'S'
   504   002FB5  65                 	db	101	;'e'
   505   002FB6  74                 	db	116	;'t'
   506   002FB7  20                 	db	32
   507   002FB8  74                 	db	116	;'t'
   508   002FB9  69                 	db	105	;'i'
   509   002FBA  6D                 	db	109	;'m'
   510   002FBB  65                 	db	101	;'e'
   511   002FBC  00                 	db	0
   512   002FBD                     STR_7:
   513   002FBD  56                 	db	86	;'V'
   514   002FBE  69                 	db	105	;'i'
   515   002FBF  65                 	db	101	;'e'
   516   002FC0  77                 	db	119	;'w'
   517   002FC1  20                 	db	32
   518   002FC2  6C                 	db	108	;'l'
   519   002FC3  6F                 	db	111	;'o'
   520   002FC4  67                 	db	103	;'g'
   521   002FC5  00                 	db	0
   522   002FC6                     STR_37:
   523   002FC6  28                 	db	40
   524   002FC7  45                 	db	69	;'E'
   525   002FC8  6D                 	db	109	;'m'
   526   002FC9  70                 	db	112	;'p'
   527   002FCA  74                 	db	116	;'t'
   528   002FCB  79                 	db	121	;'y'
   529   002FCC  29                 	db	41
   530   002FCD  00                 	db	0
   531   002FCE                     STR_34:
   532   002FCE  62                 	db	98	;'b'
   533   002FCF  6C                 	db	108	;'l'
   534   002FD0  6F                 	db	111	;'o'
   535   002FD1  63                 	db	99	;'c'
   536   002FD2  6B                 	db	107	;'k'
   537   002FD3  65                 	db	101	;'e'
   538   002FD4  64                 	db	100	;'d'
   539   002FD5  00                 	db	0
   540   002FD6                     STR_6:
   541   002FD6  4D                 	db	77	;'M'
   542   002FD7  61                 	db	97	;'a'
   543   002FD8  74                 	db	116	;'t'
   544   002FD9  63                 	db	99	;'c'
   545   002FDA  68                 	db	104	;'h'
   546   002FDB  00                 	db	0
   547   002FDC                     STR_23:
   548   002FDC  54                 	db	84	;'T'
   549   002FDD  49                 	db	73	;'I'
   550   002FDE  4D                 	db	77	;'M'
   551   002FDF  45                 	db	69	;'E'
   552   002FE0  00                 	db	0
   553   002FE1                     STR_19:
   554   002FE1  47                 	db	71	;'G'
   555   002FE2  31                 	db	49	;'1'
   556   002FE3  00                 	db	0
   557   002FE4                     STR_20:
   558   002FE4  47                 	db	71	;'G'
   559   002FE5  32                 	db	50	;'2'
   560   002FE6  00                 	db	0
   561   002FE7                     STR_21:
   562   002FE7  47                 	db	71	;'G'
   563   002FE8  33                 	db	51	;'3'
   564   002FE9  00                 	db	0
   565   002FEA                     STR_22:
   566   002FEA  2D                 	db	45
   567   002FEB  43                 	db	67	;'C'
   568   002FEC  00                 	db	0
   569   002FED                     STR_18:
   570   002FED  47                 	db	71	;'G'
   571   002FEE  4E                 	db	78	;'N'
   572   002FEF  00                 	db	0
   573   002FF0                     STR_16:
   574   002FF0  4F                 	db	79	;'O'
   575   002FF1  4E                 	db	78	;'N'
   576   002FF2  00                 	db	0
   577   002FF3                     STR_25:
   578   002FF3  53                 	db	83	;'S'
   579   002FF4  50                 	db	80	;'P'
   580   002FF5  00                 	db	0
   581   002FF6                     STR_17:
   582   002FF6  47                 	db	71	;'G'
   583   002FF7  52                 	db	82	;'R'
   584   002FF8  00                 	db	0
   585   002FF9                     STR_24:
   586   002FF9  45                 	db	69	;'E'
   587   002FFA  56                 	db	86	;'V'
   588   002FFB  00                 	db	0
   589   002FFC                     STR_13:
   590   002FFC  0A                 	db	10
   591   002FFD  0D                 	db	13
   592   002FFE  00                 	db	0
   593   002FFF  00                 	db	0	; dummy byte at the end
   594   000000                     
   595                           ; #config settings
   596                           
   597                           	psect	cinit
   598   000CF8                     __pcinit:
   599                           	callstack 0
   600   000CF8                     start_initialization:
   601                           	callstack 0
   602   000CF8                     __initialization:
   603                           	callstack 0
   604                           
   605                           ; Initialize objects allocated to BANK0 (30 bytes)
   606                           ; load TBLPTR registers with __pidataBANK0
   607   000CF8  0EB4               	movlw	low __pidataBANK0
   608   000CFA  6EF6               	movwf	tblptrl,c
   609   000CFC  0E0A               	movlw	high __pidataBANK0
   610   000CFE  6EF7               	movwf	tblptrh,c
   611   000D00  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   612   000D02  6EF8               	movwf	tblptru,c
   613   000D04  EE00  F060         	lfsr	0,__pdataBANK0
   614   000D08  EE10 F01E          	lfsr	1,30
   615   000D0C                     copy_data0:
   616   000D0C  0009               	tblrd		*+
   617   000D0E  CFF5 FFEE          	movff	tablat,postinc0
   618   000D12  50E5               	movf	postdec1,w,c
   619   000D14  50E1               	movf	fsr1l,w,c
   620   000D16  E1FA               	bnz	copy_data0
   621                           
   622                           ; Initialize objects allocated to COMRAM (4 bytes)
   623                           ; load TBLPTR registers with __pidataCOMRAM
   624   000D18  0EAE               	movlw	low __pidataCOMRAM
   625   000D1A  6EF6               	movwf	tblptrl,c
   626   000D1C  0E09               	movlw	high __pidataCOMRAM
   627   000D1E  6EF7               	movwf	tblptrh,c
   628   000D20  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   629   000D22  6EF8               	movwf	tblptru,c
   630   000D24  EE00  F05B         	lfsr	0,__pdataCOMRAM
   631   000D28  EE10 F004          	lfsr	1,4
   632   000D2C                     copy_data1:
   633   000D2C  0009               	tblrd		*+
   634   000D2E  CFF5 FFEE          	movff	tablat,postinc0
   635   000D32  50E5               	movf	postdec1,w,c
   636   000D34  50E1               	movf	fsr1l,w,c
   637   000D36  E1FA               	bnz	copy_data1
   638                           
   639                           ; Clear objects allocated to BANK0 (27 bytes)
   640   000D38  EE00  F07E         	lfsr	0,__pbssBANK0
   641   000D3C  0E1B               	movlw	27
   642   000D3E                     clear_0:
   643   000D3E  6AEE               	clrf	postinc0,c
   644   000D40  06E8               	decf	wreg,f,c
   645   000D42  E1FD               	bnz	clear_0
   646                           
   647                           ; Clear objects allocated to COMRAM (30 bytes)
   648   000D44  EE00  F03D         	lfsr	0,__pbssCOMRAM
   649   000D48  0E1E               	movlw	30
   650   000D4A                     clear_1:
   651   000D4A  6AEE               	clrf	postinc0,c
   652   000D4C  06E8               	decf	wreg,f,c
   653   000D4E  E1FD               	bnz	clear_1
   654   000D50                     end_of_initialization:
   655                           	callstack 0
   656   000D50                     __end_of__initialization:
   657                           	callstack 0
   658   000D50  0E00               	movlw	low (__Lmediumconst shr (0+16))
   659   000D52  6EF8               	movwf	tblptru,c
   660   000D54  0100               	movlb	0
   661   000D56  EF42  F00C         	goto	_main	;jump to C main() function
   662                           
   663                           	psect	bssCOMRAM
   664   00003D                     __pbssCOMRAM:
   665                           	callstack 0
   666   00003D                     _adc_v:
   667                           	callstack 0
   668   00003D                     	ds	4
   669   000041                     _flick:
   670                           	callstack 0
   671   000041                     	ds	2
   672   000043                     _long_press_S6:
   673                           	callstack 0
   674   000043                     	ds	2
   675   000045                     _long_press_S5:
   676                           	callstack 0
   677   000045                     	ds	2
   678   000047                     _field_flag:
   679                           	callstack 0
   680   000047                     	ds	2
   681   000049                     _i:
   682                           	callstack 0
   683   000049                     	ds	2
   684   00004B                     read_switches@key:
   685                           	callstack 0
   686   00004B                     	ds	1
   687   00004C                     _clear_f:
   688                           	callstack 0
   689   00004C                     	ds	1
   690   00004D                     _m1:
   691                           	callstack 0
   692   00004D                     	ds	1
   693   00004E                     _h1:
   694                           	callstack 0
   695   00004E                     	ds	1
   696   00004F                     _key:
   697                           	callstack 0
   698   00004F                     	ds	1
   699   000050                     _menu_f:
   700                           	callstack 0
   701   000050                     	ds	1
   702   000051                     _main_f:
   703                           	callstack 0
   704   000051                     	ds	1
   705   000052                     _time:
   706                           	callstack 0
   707   000052                     	ds	9
   708                           
   709                           	psect	dataCOMRAM
   710   00005B                     __pdataCOMRAM:
   711                           	callstack 0
   712   00005B                     _count:
   713                           	callstack 0
   714   00005B                     	ds	1
   715   00005C                     _axis:
   716                           	callstack 0
   717   00005C                     	ds	1
   718   00005D                     _lap:
   719                           	callstack 0
   720   00005D                     	ds	1
   721   00005E                     read_switches@once:
   722                           	callstack 0
   723   00005E                     	ds	1
   724                           
   725                           	psect	bssBANK0
   726   00007E                     __pbssBANK0:
   727                           	callstack 0
   728   00007E                     _arr1:
   729                           	callstack 0
   730   00007E                     	ds	11
   731   000089                     _arr:
   732                           	callstack 0
   733   000089                     	ds	10
   734   000093                     _clock_reg:
   735                           	callstack 0
   736   000093                     	ds	3
   737   000096                     _value:
   738                           	callstack 0
   739   000096                     	ds	2
   740   000098                     _s1:
   741                           	callstack 0
   742   000098                     	ds	1
   743                           
   744                           	psect	dataBANK0
   745   000060                     __pdataBANK0:
   746                           	callstack 0
   747   000060                     _gear:
   748                           	callstack 0
   749   000060                     	ds	14
   750   00006E                     _vmenu:
   751                           	callstack 0
   752   00006E                     	ds	10
   753   000078                     _original:
   754                           	callstack 0
   755   000078                     	ds	5
   756   00007D                     download_log@index:
   757                           	callstack 0
   758   00007D                     	ds	1
   759                           
   760                           	psect	cstackCOMRAM
   761   000001                     __pcstackCOMRAM:
   762                           	callstack 0
   763   000001                     ?_strcmp:
   764                           	callstack 0
   765   000001                     ?_read_adc:
   766                           	callstack 0
   767   000001                     ?___awdiv:
   768                           	callstack 0
   769   000001                     ?___aldiv:
   770                           	callstack 0
   771   000001                     read_switches@detection_type:
   772                           	callstack 0
   773   000001                     clcd_write@control_bit:
   774                           	callstack 0
   775   000001                     i2c_write@data:
   776                           	callstack 0
   777   000001                     putch@byte:
   778                           	callstack 0
   779   000001                     ___awdiv@dividend:
   780                           	callstack 0
   781   000001                     strcmp@l:
   782                           	callstack 0
   783   000001                     ___aldiv@dividend:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x0
   787   000001                     	ds	1
   788   000002                     clcd_write@byte:
   789                           	callstack 0
   790   000002                     write_ds1307@data:
   791                           	callstack 0
   792   000002                     read_ds1307@address:
   793                           	callstack 0
   794   000002                     write_ext_eeprom@data:
   795                           	callstack 0
   796   000002                     read_ext_eeprom@address:
   797                           	callstack 0
   798   000002                     puts@s:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x1
   802   000002                     	ds	1
   803   000003                     ??_read_adc:
   804   000003                     write_ds1307@address:
   805                           	callstack 0
   806   000003                     read_ds1307@data:
   807                           	callstack 0
   808   000003                     read_ext_eeprom@data:
   809                           	callstack 0
   810   000003                     clcd_print@data:
   811                           	callstack 0
   812   000003                     write_ext_eeprom@i:
   813                           	callstack 0
   814   000003                     ___awdiv@divisor:
   815                           	callstack 0
   816   000003                     strcmp@r:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x2
   820   000003                     	ds	1
   821   000004                     init_ds1307@dummy:
   822                           	callstack 0
   823   000004                     save_time_to_RTC@temp:
   824                           	callstack 0
   825   000004                     download_log@j:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x3
   829   000004                     	ds	1
   830   000005                     ??_strcmp:
   831   000005                     clcd_print@addr:
   832                           	callstack 0
   833   000005                     write_ext_eeprom@address:
   834                           	callstack 0
   835   000005                     ___awdiv@counter:
   836                           	callstack 0
   837   000005                     read_adc@reg_val:
   838                           	callstack 0
   839   000005                     ___aldiv@divisor:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x4
   843   000005                     	ds	1
   844   000006                     clear_log@key:
   845                           	callstack 0
   846   000006                     ___awdiv@sign:
   847                           	callstack 0
   848   000006                     download_log@k:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x5
   852   000006                     	ds	1
   853   000007                     read_adc@channel:
   854                           	callstack 0
   855   000007                     clear_log@t:
   856                           	callstack 0
   857   000007                     ___awdiv@quotient:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x6
   861   000007                     	ds	2
   862   000009                     ?___awmod:
   863                           	callstack 0
   864   000009                     ___aldiv@counter:
   865                           	callstack 0
   866   000009                     clear_log@long_press_detected:
   867                           	callstack 0
   868   000009                     ___awmod@dividend:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x8
   872   000009                     	ds	1
   873   00000A                     ___aldiv@sign:
   874                           	callstack 0
   875                           
   876                           ; 1 bytes @ 0x9
   877   00000A                     	ds	1
   878   00000B                     ___awmod@divisor:
   879                           	callstack 0
   880   00000B                     ___aldiv@quotient:
   881                           	callstack 0
   882                           
   883                           ; 4 bytes @ 0xA
   884   00000B                     	ds	2
   885   00000D                     ___awmod@counter:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0xC
   889   00000D                     	ds	1
   890   00000E                     ___awmod@sign:
   891                           	callstack 0
   892                           
   893                           ; 1 bytes @ 0xD
   894   00000E                     	ds	1
   895   00000F                     ?___almod:
   896                           	callstack 0
   897   00000F                     clcd_putch@addr:
   898                           	callstack 0
   899   00000F                     ___almod@dividend:
   900                           	callstack 0
   901                           
   902                           ; 4 bytes @ 0xE
   903   00000F                     	ds	1
   904   000010                     clcd_putch@data:
   905                           	callstack 0
   906                           
   907                           ; 1 bytes @ 0xF
   908   000010                     	ds	1
   909   000011                     ??_setpassword:
   910   000011                     ??_change_pass:
   911   000011                     menu@prev_key:
   912                           	callstack 0
   913   000011                     view_log@s:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x10
   917   000011                     	ds	1
   918   000012                     menu@blink:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x11
   922   000012                     	ds	1
   923   000013                     ___almod@divisor:
   924                           	callstack 0
   925   000013                     view_log@readdata:
   926                           	callstack 0
   927                           
   928                           ; 10 bytes @ 0x12
   929   000013                     	ds	1
   930   000014                     menu@delay:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x13
   934   000014                     	ds	1
   935   000015                     change_pass@confirm_password:
   936                           	callstack 0
   937   000015                     setpassword@trail:
   938                           	callstack 0
   939                           
   940                           ; 5 bytes @ 0x14
   941   000015                     	ds	1
   942   000016                     menu@key:
   943                           	callstack 0
   944                           
   945                           ; 1 bytes @ 0x15
   946   000016                     	ds	1
   947   000017                     ___almod@counter:
   948                           	callstack 0
   949   000017                     menu@s:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x16
   953   000017                     	ds	1
   954   000018                     ___almod@sign:
   955                           	callstack 0
   956                           
   957                           ; 1 bytes @ 0x17
   958   000018                     	ds	1
   959   000019                     ??_store_event:
   960   000019                     menu@i:
   961                           	callstack 0
   962   000019                     speed@r:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x18
   966   000019                     	ds	1
   967   00001A                     change_pass@k:
   968                           	callstack 0
   969   00001A                     setpassword@count:
   970                           	callstack 0
   971                           
   972                           ; 4 bytes @ 0x19
   973   00001A                     	ds	1
   974   00001B                     store_event@i:
   975                           	callstack 0
   976                           
   977                           ; 1 bytes @ 0x1A
   978   00001B                     	ds	1
   979   00001C                     ??_settime:
   980   00001C                     dashboard@key:
   981                           	callstack 0
   982                           
   983                           ; 1 bytes @ 0x1B
   984   00001C                     	ds	1
   985   00001D                     view_log@prev_key:
   986                           	callstack 0
   987                           
   988                           ; 1 bytes @ 0x1C
   989   00001D                     	ds	1
   990   00001E                     settime@wait:
   991                           	callstack 0
   992   00001E                     view_log@delay:
   993                           	callstack 0
   994   00001E                     change_pass@k_176:
   995                           	callstack 0
   996   00001E                     setpassword@k:
   997                           	callstack 0
   998                           
   999                           ; 4 bytes @ 0x1D
  1000   00001E                     	ds	2
  1001   000020                     settime@key:
  1002                           	callstack 0
  1003   000020                     view_log@k:
  1004                           	callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x1F
  1007   000020                     	ds	1
  1008   000021                     settime@hour:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x20
  1012   000021                     	ds	1
  1013   000022                     view_log@key:
  1014                           	callstack 0
  1015   000022                     setpassword@i_523:
  1016                           	callstack 0
  1017   000022                     change_pass@new_password:
  1018                           	callstack 0
  1019                           
  1020                           ; 5 bytes @ 0x21
  1021   000022                     	ds	1
  1022   000023                     settime@minute:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x22
  1026   000023                     	ds	2
  1027   000025                     settime@second:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x24
  1031   000025                     	ds	1
  1032   000026                     setpassword@delay:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0x25
  1036   000026                     	ds	1
  1037   000027                     change_pass@pwd_flag:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x26
  1041   000027                     	ds	2
  1042   000029                     change_pass@p:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x28
  1046   000029                     	ds	1
  1047   00002A                     setpassword@i_528:
  1048                           	callstack 0
  1049                           
  1050                           ; 4 bytes @ 0x29
  1051   00002A                     	ds	1
  1052   00002B                     change_pass@key:
  1053                           	callstack 0
  1054                           
  1055                           ; 1 bytes @ 0x2A
  1056   00002B                     	ds	1
  1057   00002C                     change_pass@wait:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x2B
  1061   00002C                     	ds	2
  1062   00002E                     setpassword@key:
  1063                           	callstack 0
  1064                           
  1065                           ; 1 bytes @ 0x2D
  1066   00002E                     	ds	1
  1067   00002F                     setpassword@attempt:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x2E
  1071   00002F                     	ds	1
  1072   000030                     change_pass@i:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x2F
  1076   000030                     	ds	1
  1077   000031                     setpassword@wait:
  1078                           	callstack 0
  1079                           
  1080                           ; 4 bytes @ 0x30
  1081   000031                     	ds	4
  1082   000035                     setpassword@sec:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x34
  1086   000035                     	ds	2
  1087   000037                     setpassword@j:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x36
  1091   000037                     	ds	2
  1092   000039                     setpassword@i:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x38
  1096   000039                     	ds	2
  1097   00003B                     main@i:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x3A
  1101   00003B                     	ds	2
  1102                           
  1103 ;;
  1104 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1105 ;;
  1106 ;; *************** function _main *****************
  1107 ;; Defined at:
  1108 ;;		line 38 in file "main.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  i               2   58[COMRAM] int 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1122 ;;      Params:         0       0       0       0       0       0       0
  1123 ;;      Locals:         2       0       0       0       0       0       0
  1124 ;;      Temps:          0       0       0       0       0       0       0
  1125 ;;      Totals:         2       0       0       0       0       0       0
  1126 ;;Total ram usage:        2 bytes
  1127 ;; Hardware stack levels required when called: 6
  1128 ;; This function calls:
  1129 ;;		_change_pass
  1130 ;;		_clcd_write
  1131 ;;		_clear_log
  1132 ;;		_dashboard
  1133 ;;		_download_log
  1134 ;;		_inti_config
  1135 ;;		_menu
  1136 ;;		_read_switches
  1137 ;;		_setpassword
  1138 ;;		_settime
  1139 ;;		_view_log
  1140 ;;		_write_ext_eeprom
  1141 ;; This function is called by:
  1142 ;;		Startup code after reset
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text0
  1147   001884                     __ptext0:
  1148                           	callstack 0
  1149   001884                     _main:
  1150                           	callstack 25
  1151   001884                     
  1152                           ;main.c: 40:     inti_config();;main.c: 40:     inti_config();
  1153   001884  EC3E  F005         	call	_inti_config	;wreg free
  1154   001888                     
  1155                           ;main.c: 43:     for (int i = 0; i < 4; i++);main.c: 43:     for (int i = 0; i < 4; i++)
  1156   001888  0E00               	movlw	0
  1157   00188A  6E3C               	movwf	(main@i+1)^0,c
  1158   00188C  0E00               	movlw	0
  1159   00188E  6E3B               	movwf	main@i^0,c
  1160   001890                     l4156:
  1161                           
  1162                           ;main.c: 44:         write_ext_eeprom(i, original[i]);;main.c: 44:         write_ext_eep
      +                          rom(i, original[i]);
  1163   001890  0E78               	movlw	low _original
  1164   001892  243B               	addwf	main@i^0,w,c
  1165   001894  6ED9               	movwf	fsr2l,c
  1166   001896  0E00               	movlw	high _original
  1167   001898  203C               	addwfc	(main@i+1)^0,w,c
  1168   00189A  6EDA               	movwf	fsr2h,c
  1169   00189C  50DF               	movf	indf2,w,c
  1170   00189E  6E02               	movwf	write_ext_eeprom@data^0,c
  1171   0018A0  503B               	movf	main@i^0,w,c
  1172   0018A2  EC0B  F006         	call	_write_ext_eeprom
  1173   0018A6  4A3B               	infsnz	main@i^0,f,c
  1174   0018A8  2A3C               	incf	(main@i+1)^0,f,c
  1175   0018AA  BE3C               	btfsc	(main@i+1)^0,7,c
  1176   0018AC  EF61  F00C         	goto	u3621
  1177   0018B0  503C               	movf	(main@i+1)^0,w,c
  1178   0018B2  E109               	bnz	u3620
  1179   0018B4  0E04               	movlw	4
  1180   0018B6  5C3B               	subwf	main@i^0,w,c
  1181   0018B8  A0D8               	btfss	status,0,c
  1182   0018BA  EF61  F00C         	goto	u3621
  1183   0018BE  EF63  F00C         	goto	u3620
  1184   0018C2                     u3621:
  1185   0018C2  EF48  F00C         	goto	l4156
  1186   0018C6                     u3620:
  1187   0018C6                     l4162:
  1188                           
  1189                           ;main.c: 48:     {;main.c: 48:     {;main.c: 49:         key = read_switches(1);;main.c:
      +                           49:         key = read_switches(1);
  1190   0018C6  0E01               	movlw	1
  1191   0018C8  EC19  F007         	call	_read_switches
  1192   0018CC  6E4F               	movwf	_key^0,c
  1193   0018CE                     
  1194                           ;main.c: 52:         if (main_f == 0);main.c: 52:         if (main_f == 0)
  1195   0018CE  5051               	movf	_main_f^0,w,c
  1196   0018D0  A4D8               	btfss	status,2,c
  1197   0018D2  EF6D  F00C         	goto	u3631
  1198   0018D6  EF6F  F00C         	goto	u3630
  1199   0018DA                     u3631:
  1200   0018DA  EF79  F00C         	goto	l4170
  1201   0018DE                     u3630:
  1202   0018DE                     
  1203                           ;main.c: 53:         {;main.c: 53:         {;main.c: 54:             clcd_write(0x01, 0)
      +                          ;;main.c: 54:             clcd_write(0x01, 0);
  1204   0018DE  0E00               	movlw	0
  1205   0018E0  6E01               	movwf	clcd_write@control_bit^0,c
  1206   0018E2  0E01               	movlw	1
  1207   0018E4  ECEE  F005         	call	_clcd_write
  1208   0018E8                     
  1209                           ;main.c: 55:             dashboard(key);;main.c: 55:             dashboard(key);
  1210   0018E8  504F               	movf	_key^0,w,c
  1211   0018EA  EC90  F00B         	call	_dashboard
  1212                           
  1213                           ;main.c: 56:         };main.c: 56:         }
  1214   0018EE  EF63  F00C         	goto	l4162
  1215   0018F2                     l4170:
  1216   0018F2  0451               	decf	_main_f^0,w,c
  1217   0018F4  A4D8               	btfss	status,2,c
  1218   0018F6  EF7F  F00C         	goto	u3641
  1219   0018FA  EF81  F00C         	goto	u3640
  1220   0018FE                     u3641:
  1221   0018FE  EF86  F00C         	goto	l4174
  1222   001902                     u3640:
  1223   001902                     
  1224                           ;main.c: 58:         {;main.c: 58:         {;main.c: 59:             setpassword(key);;m
      +                          ain.c: 59:             setpassword(key);
  1225   001902  504F               	movf	_key^0,w,c
  1226   001904  EC4D  F012         	call	_setpassword
  1227                           
  1228                           ;main.c: 60:         };main.c: 60:         }
  1229   001908  EF63  F00C         	goto	l4162
  1230   00190C                     l4174:
  1231   00190C  0E02               	movlw	2
  1232   00190E  1851               	xorwf	_main_f^0,w,c
  1233   001910  A4D8               	btfss	status,2,c
  1234   001912  EF8D  F00C         	goto	u3651
  1235   001916  EF8F  F00C         	goto	u3650
  1236   00191A                     u3651:
  1237   00191A  EFA7  F00C         	goto	l4180
  1238   00191E                     u3650:
  1239   00191E                     
  1240                           ;main.c: 62:         {;main.c: 62:         {;main.c: 64:             h1 = (((time[0] - 4
      +                          8) * 10) + (time[1] - 48));;main.c: 64:             h1 = (((time[0] - 48) * 10) + (time[
      +                          1] - 48));
  1241   00191E  5052               	movf	_time^0,w,c
  1242   001920  0D0A               	mullw	10
  1243   001922  50F3               	movf	243,w,c
  1244   001924  2453               	addwf	(_time+1)^0,w,c
  1245   001926  0FF0               	addlw	240
  1246   001928  6E4E               	movwf	_h1^0,c
  1247                           
  1248                           ;main.c: 65:             m1 = (((time[3] - 48) * 10) + (time[4] - 48));;main.c: 65:     
      +                                  m1 = (((time[3] - 48) * 10) + (time[4] - 48));
  1249   00192A  5055               	movf	(_time+3)^0,w,c
  1250   00192C  0D0A               	mullw	10
  1251   00192E  50F3               	movf	243,w,c
  1252   001930  2456               	addwf	(_time+4)^0,w,c
  1253   001932  0FF0               	addlw	240
  1254   001934  6E4D               	movwf	_m1^0,c
  1255                           
  1256                           ;main.c: 66:             s1 = (((time[6] - 48) * 10) + (time[7] - 48));;main.c: 66:     
      +                                  s1 = (((time[6] - 48) * 10) + (time[7] - 48));
  1257   001936  5058               	movf	(_time+6)^0,w,c
  1258   001938  0D0A               	mullw	10
  1259   00193A  50F3               	movf	243,w,c
  1260   00193C  2459               	addwf	(_time+7)^0,w,c
  1261   00193E  0FF0               	addlw	240
  1262   001940  0100               	movlb	0	; () banked
  1263   001942  6F98               	movwf	_s1& (0+255),b
  1264   001944                     
  1265                           ; BSR set to: 0
  1266                           ;main.c: 67:             menu(key);;main.c: 67:             menu(key);
  1267   001944  504F               	movf	_key^0,w,c
  1268   001946  ECFE  F00D         	call	_menu
  1269                           
  1270                           ;main.c: 68:         };main.c: 68:         }
  1271   00194A  EF63  F00C         	goto	l4162
  1272   00194E                     l4180:
  1273   00194E  0E03               	movlw	3
  1274   001950  1851               	xorwf	_main_f^0,w,c
  1275   001952  A4D8               	btfss	status,2,c
  1276   001954  EFAE  F00C         	goto	u3661
  1277   001958  EFB0  F00C         	goto	u3660
  1278   00195C                     u3661:
  1279   00195C  EF63  F00C         	goto	l4162
  1280   001960                     u3660:
  1281   001960                     
  1282                           ;main.c: 70:         {;main.c: 70:         {;main.c: 72:             if (menu_f == 0);ma
      +                          in.c: 72:             if (menu_f == 0)
  1283   001960  5050               	movf	_menu_f^0,w,c
  1284   001962  A4D8               	btfss	status,2,c
  1285   001964  EFB6  F00C         	goto	u3671
  1286   001968  EFB8  F00C         	goto	u3670
  1287   00196C                     u3671:
  1288   00196C  EFBD  F00C         	goto	l4186
  1289   001970                     u3670:
  1290   001970                     
  1291                           ;main.c: 73:             {;main.c: 73:             {;main.c: 74:                 view_lo
      +                          g(key);;main.c: 74:                 view_log(key);
  1292   001970  504F               	movf	_key^0,w,c
  1293   001972  ECF8  F00C         	call	_view_log
  1294                           
  1295                           ;main.c: 75:             };main.c: 75:             }
  1296   001976  EF63  F00C         	goto	l4162
  1297   00197A                     l4186:
  1298   00197A  0450               	decf	_menu_f^0,w,c
  1299   00197C  A4D8               	btfss	status,2,c
  1300   00197E  EFC3  F00C         	goto	u3681
  1301   001982  EFC5  F00C         	goto	u3680
  1302   001986                     u3681:
  1303   001986  EFCA  F00C         	goto	l4190
  1304   00198A                     u3680:
  1305   00198A                     
  1306                           ;main.c: 77:             {;main.c: 77:             {;main.c: 78:                 downloa
      +                          d_log(key);;main.c: 78:                 download_log(key);
  1307   00198A  504F               	movf	_key^0,w,c
  1308   00198C  EC6D  F009         	call	_download_log
  1309                           
  1310                           ;main.c: 79:             };main.c: 79:             }
  1311   001990  EF63  F00C         	goto	l4162
  1312   001994                     l4190:
  1313   001994  0E02               	movlw	2
  1314   001996  1850               	xorwf	_menu_f^0,w,c
  1315   001998  A4D8               	btfss	status,2,c
  1316   00199A  EFD1  F00C         	goto	u3691
  1317   00199E  EFD3  F00C         	goto	u3690
  1318   0019A2                     u3691:
  1319   0019A2  EFD8  F00C         	goto	l4194
  1320   0019A6                     u3690:
  1321   0019A6                     
  1322                           ;main.c: 81:             {;main.c: 81:             {;main.c: 82:                 clear_l
      +                          og(key);;main.c: 82:                 clear_log(key);
  1323   0019A6  504F               	movf	_key^0,w,c
  1324   0019A8  EC97  F007         	call	_clear_log
  1325                           
  1326                           ;main.c: 83:             };main.c: 83:             }
  1327   0019AC  EF63  F00C         	goto	l4162
  1328   0019B0                     l4194:
  1329   0019B0  0E03               	movlw	3
  1330   0019B2  1850               	xorwf	_menu_f^0,w,c
  1331   0019B4  A4D8               	btfss	status,2,c
  1332   0019B6  EFDF  F00C         	goto	u3701
  1333   0019BA  EFE1  F00C         	goto	u3700
  1334   0019BE                     u3701:
  1335   0019BE  EFE6  F00C         	goto	l4198
  1336   0019C2                     u3700:
  1337   0019C2                     
  1338                           ;main.c: 85:             {;main.c: 85:             {;main.c: 86:                 settime
      +                          (key);;main.c: 86:                 settime(key);
  1339   0019C2  504F               	movf	_key^0,w,c
  1340   0019C4  ECAA  F014         	call	_settime
  1341                           
  1342                           ;main.c: 87:             };main.c: 87:             }
  1343   0019C8  EF63  F00C         	goto	l4162
  1344   0019CC                     l4198:
  1345   0019CC  0E04               	movlw	4
  1346   0019CE  1850               	xorwf	_menu_f^0,w,c
  1347   0019D0  A4D8               	btfss	status,2,c
  1348   0019D2  EFED  F00C         	goto	u3711
  1349   0019D6  EFEF  F00C         	goto	u3710
  1350   0019DA                     u3711:
  1351   0019DA  EFF4  F00C         	goto	l73
  1352   0019DE                     u3710:
  1353   0019DE                     
  1354                           ;main.c: 89:             {;main.c: 89:             {;main.c: 90:                 change_
      +                          pass(key);;main.c: 90:                 change_pass(key);
  1355   0019DE  504F               	movf	_key^0,w,c
  1356   0019E0  EC1D  F010         	call	_change_pass
  1357   0019E4  EF63  F00C         	goto	l4162
  1358   0019E8                     l73:
  1359   0019E8  EF63  F00C         	goto	l4162
  1360   0019EC  EF00  F000         	goto	start
  1361   0019F0                     __end_of_main:
  1362                           	callstack 0
  1363                           
  1364 ;; *************** function _view_log *****************
  1365 ;; Defined at:
  1366 ;;		line 15 in file "view_log.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  key             1    wreg     unsigned char 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  key             1   33[COMRAM] unsigned char 
  1371 ;;  k               2   31[COMRAM] int 
  1372 ;;  readdata       10   18[COMRAM] unsigned char [10]
  1373 ;;  delay           2   29[COMRAM] int 
  1374 ;;  s               2   16[COMRAM] int 
  1375 ;;  i               2    0        int 
  1376 ;;  prev_key        1   28[COMRAM] unsigned char 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1386 ;;      Params:         0       0       0       0       0       0       0
  1387 ;;      Locals:        18       0       0       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0       0       0
  1389 ;;      Totals:        18       0       0       0       0       0       0
  1390 ;;Total ram usage:       18 bytes
  1391 ;; Hardware stack levels used: 1
  1392 ;; Hardware stack levels required when called: 4
  1393 ;; This function calls:
  1394 ;;		_clcd_print
  1395 ;;		_clcd_putch
  1396 ;;		_clcd_write
  1397 ;;		_read_ext_eeprom
  1398 ;;		_read_switches
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text1
  1405   0019F0                     __ptext1:
  1406                           	callstack 0
  1407   0019F0                     _view_log:
  1408                           	callstack 26
  1409   0019F0                     
  1410                           ;view_log.c: 18:     int s = 0;;view_log.c: 18:     int s = 0;
  1411   0019F0  0E00               	movlw	0
  1412   0019F2  6E12               	movwf	(view_log@s+1)^0,c
  1413   0019F4  0E00               	movlw	0
  1414   0019F6  6E11               	movwf	view_log@s^0,c
  1415                           
  1416                           ;view_log.c: 19:     char prev_key;;view_log.c: 19:     char prev_key;;view_log.c: 20:  
      +                             int delay = 0;;view_log.c: 20:     int delay = 0;
  1417   0019F8  0E00               	movlw	0
  1418   0019FA  6E1F               	movwf	(view_log@delay+1)^0,c
  1419   0019FC  0E00               	movlw	0
  1420   0019FE  6E1E               	movwf	view_log@delay^0,c
  1421   001A00                     
  1422                           ;view_log.c: 23:     clcd_write(0x01, 0);;view_log.c: 23:     clcd_write(0x01, 0);
  1423   001A00  0E00               	movlw	0
  1424   001A02  6E01               	movwf	clcd_write@control_bit^0,c
  1425   001A04  0E01               	movlw	1
  1426   001A06  ECEE  F005         	call	_clcd_write
  1427   001A0A                     
  1428                           ;view_log.c: 24:     clcd_print("VIEW LOGS", (0x80 + (3)));;view_log.c: 24:     clcd_pri
      +                          nt("VIEW LOGS", (0x80 + (3)));
  1429   001A0A  0E97               	movlw	low STR_36
  1430   001A0C  6E03               	movwf	clcd_print@data^0,c
  1431   001A0E  0E2F               	movlw	high STR_36
  1432   001A10  6E04               	movwf	(clcd_print@data+1)^0,c
  1433   001A12  0E83               	movlw	131
  1434   001A14  6E05               	movwf	clcd_print@addr^0,c
  1435   001A16  ECAD  F006         	call	_clcd_print	;wreg free
  1436   001A1A                     l3688:
  1437                           
  1438                           ;view_log.c: 27:     {;view_log.c: 27:     {;view_log.c: 29:         key = read_switches
      +                          (0);;view_log.c: 29:         key = read_switches(0);
  1439   001A1A  0E00               	movlw	0
  1440   001A1C  EC19  F007         	call	_read_switches
  1441   001A20  6E22               	movwf	view_log@key^0,c
  1442   001A22                     
  1443                           ;view_log.c: 32:         if (key != 0xFF);view_log.c: 32:         if (key != 0xFF)
  1444   001A22  2822               	incf	view_log@key^0,w,c
  1445   001A24  B4D8               	btfsc	status,2,c
  1446   001A26  EF17  F00D         	goto	u3061
  1447   001A2A  EF19  F00D         	goto	u3060
  1448   001A2E                     u3061:
  1449   001A2E  EF34  F00D         	goto	l3702
  1450   001A32                     u3060:
  1451   001A32                     
  1452                           ;view_log.c: 33:         {;view_log.c: 33:         {;view_log.c: 34:             prev_ke
      +                          y = key;;view_log.c: 34:             prev_key = key;
  1453   001A32  C022  F01D         	movff	view_log@key,view_log@prev_key
  1454   001A36                     
  1455                           ;view_log.c: 35:             delay++;;view_log.c: 35:             delay++;
  1456   001A36  4A1E               	infsnz	view_log@delay^0,f,c
  1457   001A38  2A1F               	incf	(view_log@delay+1)^0,f,c
  1458   001A3A                     
  1459                           ;view_log.c: 37:             if (delay > 200);view_log.c: 37:             if (delay > 20
      +                          0)
  1460   001A3A  BE1F               	btfsc	(view_log@delay+1)^0,7,c
  1461   001A3C  EF29  F00D         	goto	u3071
  1462   001A40  501F               	movf	(view_log@delay+1)^0,w,c
  1463   001A42  E109               	bnz	u3070
  1464   001A44  0EC9               	movlw	201
  1465   001A46  5C1E               	subwf	view_log@delay^0,w,c
  1466   001A48  A0D8               	btfss	status,0,c
  1467   001A4A  EF29  F00D         	goto	u3071
  1468   001A4E  EF2B  F00D         	goto	u3070
  1469   001A52                     u3071:
  1470   001A52  EF30  F00D         	goto	l3700
  1471   001A56                     u3070:
  1472   001A56                     
  1473                           ;view_log.c: 38:                 key = key + 10;;view_log.c: 38:                 key = k
      +                          ey + 10;
  1474   001A56  5022               	movf	view_log@key^0,w,c
  1475   001A58  0F0A               	addlw	10
  1476   001A5A  6E22               	movwf	view_log@key^0,c
  1477   001A5C  EF57  F00D         	goto	l3712
  1478   001A60                     l3700:
  1479                           
  1480                           ;view_log.c: 40:                 key = 0;;view_log.c: 40:                 key = 0;
  1481   001A60  0E00               	movlw	0
  1482   001A62  6E22               	movwf	view_log@key^0,c
  1483   001A64  EF57  F00D         	goto	l3712
  1484   001A68                     l3702:
  1485   001A68  BE1F               	btfsc	(view_log@delay+1)^0,7,c
  1486   001A6A  EF42  F00D         	goto	u3080
  1487   001A6E  501F               	movf	(view_log@delay+1)^0,w,c
  1488   001A70  E107               	bnz	u3081
  1489   001A72  0EC8               	movlw	200
  1490   001A74  5C1E               	subwf	view_log@delay^0,w,c
  1491   001A76  B0D8               	btfsc	status,0,c
  1492   001A78  EF40  F00D         	goto	u3081
  1493   001A7C  EF42  F00D         	goto	u3080
  1494   001A80                     u3081:
  1495   001A80  EF53  F00D         	goto	l3710
  1496   001A84                     u3080:
  1497   001A84  501E               	movf	view_log@delay^0,w,c
  1498   001A86  101F               	iorwf	(view_log@delay+1)^0,w,c
  1499   001A88  B4D8               	btfsc	status,2,c
  1500   001A8A  EF49  F00D         	goto	u3091
  1501   001A8E  EF4B  F00D         	goto	u3090
  1502   001A92                     u3091:
  1503   001A92  EF53  F00D         	goto	l3710
  1504   001A96                     u3090:
  1505   001A96                     
  1506                           ;view_log.c: 44:         {;view_log.c: 44:         {;view_log.c: 45:             delay =
      +                           0;;view_log.c: 45:             delay = 0;
  1507   001A96  0E00               	movlw	0
  1508   001A98  6E1F               	movwf	(view_log@delay+1)^0,c
  1509   001A9A  0E00               	movlw	0
  1510   001A9C  6E1E               	movwf	view_log@delay^0,c
  1511   001A9E                     
  1512                           ;view_log.c: 46:             key = prev_key;;view_log.c: 46:             key = prev_key;
  1513   001A9E  C01D  F022         	movff	view_log@prev_key,view_log@key
  1514                           
  1515                           ;view_log.c: 47:         };view_log.c: 47:         }
  1516   001AA2  EF57  F00D         	goto	l3712
  1517   001AA6                     l3710:
  1518                           
  1519                           ;view_log.c: 49:         {;view_log.c: 49:         {;view_log.c: 50:             delay =
      +                           0;;view_log.c: 50:             delay = 0;
  1520   001AA6  0E00               	movlw	0
  1521   001AA8  6E1F               	movwf	(view_log@delay+1)^0,c
  1522   001AAA  0E00               	movlw	0
  1523   001AAC  6E1E               	movwf	view_log@delay^0,c
  1524   001AAE                     l3712:
  1525                           
  1526                           ;view_log.c: 53:         char readdata[10];;view_log.c: 53:         char readdata[10];;v
      +                          iew_log.c: 57:         if (axis >= 10);view_log.c: 57:         if (axis >= 10)
  1527   001AAE  0E09               	movlw	9
  1528   001AB0  645C               	cpfsgt	_axis^0,c
  1529   001AB2  EF5D  F00D         	goto	u3101
  1530   001AB6  EF5F  F00D         	goto	u3100
  1531   001ABA                     u3101:
  1532   001ABA  EF63  F00D         	goto	l730
  1533   001ABE                     u3100:
  1534   001ABE                     
  1535                           ;view_log.c: 58:         {;view_log.c: 58:         {;view_log.c: 59:             axis = 
      +                          1;;view_log.c: 59:             axis = 1;
  1536   001ABE  0E01               	movlw	1
  1537   001AC0  6E5C               	movwf	_axis^0,c
  1538                           
  1539                           ;view_log.c: 60:             count = 1;;view_log.c: 60:             count = 1;
  1540   001AC2  0E01               	movlw	1
  1541   001AC4  6E5B               	movwf	_count^0,c
  1542   001AC6                     l730:
  1543                           
  1544                           ;view_log.c: 64:         if (clear_f);view_log.c: 64:         if (clear_f)
  1545   001AC6  504C               	movf	_clear_f^0,w,c
  1546   001AC8  B4D8               	btfsc	status,2,c
  1547   001ACA  EF69  F00D         	goto	u3111
  1548   001ACE  EF6B  F00D         	goto	u3110
  1549   001AD2                     u3111:
  1550   001AD2  EF75  F00D         	goto	l3718
  1551   001AD6                     u3110:
  1552   001AD6                     
  1553                           ;view_log.c: 65:         {;view_log.c: 65:         {;view_log.c: 66:             clcd_pr
      +                          int("(Empty)", (0xC0 + (3)));;view_log.c: 66:             clcd_print("(Empty)", (0xC0 + 
      +                          (3)));
  1554   001AD6  0EC6               	movlw	low STR_37
  1555   001AD8  6E03               	movwf	clcd_print@data^0,c
  1556   001ADA  0E2F               	movlw	high STR_37
  1557   001ADC  6E04               	movwf	(clcd_print@data+1)^0,c
  1558   001ADE  0EC3               	movlw	195
  1559   001AE0  6E05               	movwf	clcd_print@addr^0,c
  1560   001AE2  ECAD  F006         	call	_clcd_print	;wreg free
  1561                           
  1562                           ;view_log.c: 67:         };view_log.c: 67:         }
  1563   001AE6  EFE2  F00D         	goto	l3760
  1564   001AEA                     l3718:
  1565                           
  1566                           ;view_log.c: 69:         {;view_log.c: 69:         {;view_log.c: 71:             for (in
      +                          t k = 0; k < 10; k++);view_log.c: 71:             for (int k = 0; k < 10; k++)
  1567   001AEA  0E00               	movlw	0
  1568   001AEC  6E21               	movwf	(view_log@k+1)^0,c
  1569   001AEE  0E00               	movlw	0
  1570   001AF0  6E20               	movwf	view_log@k^0,c
  1571   001AF2                     l3724:
  1572                           
  1573                           ;view_log.c: 72:                 readdata[k] = read_ext_eeprom((axis * 10) + k);;view_lo
      +                          g.c: 72:                 readdata[k] = read_ext_eeprom((axis * 10) + k);
  1574   001AF2  0E13               	movlw	low view_log@readdata
  1575   001AF4  2420               	addwf	view_log@k^0,w,c
  1576   001AF6  6ED9               	movwf	fsr2l,c
  1577   001AF8  0E00               	movlw	high view_log@readdata
  1578   001AFA  2021               	addwfc	(view_log@k+1)^0,w,c
  1579   001AFC  6EDA               	movwf	fsr2h,c
  1580   001AFE  505C               	movf	_axis^0,w,c
  1581   001B00  0D0A               	mullw	10
  1582   001B02  50F3               	movf	243,w,c
  1583   001B04  2420               	addwf	view_log@k^0,w,c
  1584   001B06  EC8E  F005         	call	_read_ext_eeprom
  1585   001B0A  6EDF               	movwf	indf2,c
  1586   001B0C  4A20               	infsnz	view_log@k^0,f,c
  1587   001B0E  2A21               	incf	(view_log@k+1)^0,f,c
  1588   001B10  BE21               	btfsc	(view_log@k+1)^0,7,c
  1589   001B12  EF94  F00D         	goto	u3121
  1590   001B16  5021               	movf	(view_log@k+1)^0,w,c
  1591   001B18  E109               	bnz	u3120
  1592   001B1A  0E0A               	movlw	10
  1593   001B1C  5C20               	subwf	view_log@k^0,w,c
  1594   001B1E  A0D8               	btfss	status,0,c
  1595   001B20  EF94  F00D         	goto	u3121
  1596   001B24  EF96  F00D         	goto	u3120
  1597   001B28                     u3121:
  1598   001B28  EF79  F00D         	goto	l3724
  1599   001B2C                     u3120:
  1600   001B2C                     
  1601                           ;view_log.c: 75:             clcd_putch(count + '0', (0xC0 + (0)));;view_log.c: 75:     
      +                                  clcd_putch(count + '0', (0xC0 + (0)));
  1602   001B2C  0EC0               	movlw	192
  1603   001B2E  6E0F               	movwf	clcd_putch@addr^0,c
  1604   001B30  505B               	movf	_count^0,w,c
  1605   001B32  0F30               	addlw	48
  1606   001B34  EC32  F005         	call	_clcd_putch
  1607   001B38                     
  1608                           ;view_log.c: 76:             clcd_putch(readdata[0], (0xC0 + (2)));;view_log.c: 76:     
      +                                  clcd_putch(readdata[0], (0xC0 + (2)));
  1609   001B38  0EC2               	movlw	194
  1610   001B3A  6E0F               	movwf	clcd_putch@addr^0,c
  1611   001B3C  5013               	movf	view_log@readdata^0,w,c
  1612   001B3E  EC32  F005         	call	_clcd_putch
  1613   001B42                     
  1614                           ;view_log.c: 77:             clcd_putch(readdata[1], (0xC0 + (3)));;view_log.c: 77:     
      +                                  clcd_putch(readdata[1], (0xC0 + (3)));
  1615   001B42  0EC3               	movlw	195
  1616   001B44  6E0F               	movwf	clcd_putch@addr^0,c
  1617   001B46  5014               	movf	(view_log@readdata+1)^0,w,c
  1618   001B48  EC32  F005         	call	_clcd_putch
  1619   001B4C                     
  1620                           ;view_log.c: 78:             clcd_putch(':', (0xC0 + (4)));;view_log.c: 78:             
      +                          clcd_putch(':', (0xC0 + (4)));
  1621   001B4C  0EC4               	movlw	196
  1622   001B4E  6E0F               	movwf	clcd_putch@addr^0,c
  1623   001B50  0E3A               	movlw	58
  1624   001B52  EC32  F005         	call	_clcd_putch
  1625   001B56                     
  1626                           ;view_log.c: 79:             clcd_putch(readdata[2], (0xC0 + (5)));;view_log.c: 79:     
      +                                  clcd_putch(readdata[2], (0xC0 + (5)));
  1627   001B56  0EC5               	movlw	197
  1628   001B58  6E0F               	movwf	clcd_putch@addr^0,c
  1629   001B5A  5015               	movf	(view_log@readdata+2)^0,w,c
  1630   001B5C  EC32  F005         	call	_clcd_putch
  1631   001B60                     
  1632                           ;view_log.c: 80:             clcd_putch(readdata[3], (0xC0 + (6)));;view_log.c: 80:     
      +                                  clcd_putch(readdata[3], (0xC0 + (6)));
  1633   001B60  0EC6               	movlw	198
  1634   001B62  6E0F               	movwf	clcd_putch@addr^0,c
  1635   001B64  5016               	movf	(view_log@readdata+3)^0,w,c
  1636   001B66  EC32  F005         	call	_clcd_putch
  1637   001B6A                     
  1638                           ;view_log.c: 81:             clcd_putch(':', (0xC0 + (7)));;view_log.c: 81:             
      +                          clcd_putch(':', (0xC0 + (7)));
  1639   001B6A  0EC7               	movlw	199
  1640   001B6C  6E0F               	movwf	clcd_putch@addr^0,c
  1641   001B6E  0E3A               	movlw	58
  1642   001B70  EC32  F005         	call	_clcd_putch
  1643   001B74                     
  1644                           ;view_log.c: 82:             clcd_putch(readdata[4], (0xC0 + (8)));;view_log.c: 82:     
      +                                  clcd_putch(readdata[4], (0xC0 + (8)));
  1645   001B74  0EC8               	movlw	200
  1646   001B76  6E0F               	movwf	clcd_putch@addr^0,c
  1647   001B78  5017               	movf	(view_log@readdata+4)^0,w,c
  1648   001B7A  EC32  F005         	call	_clcd_putch
  1649   001B7E                     
  1650                           ;view_log.c: 83:             clcd_putch(readdata[5], (0xC0 + (9)));;view_log.c: 83:     
      +                                  clcd_putch(readdata[5], (0xC0 + (9)));
  1651   001B7E  0EC9               	movlw	201
  1652   001B80  6E0F               	movwf	clcd_putch@addr^0,c
  1653   001B82  5018               	movf	(view_log@readdata+5)^0,w,c
  1654   001B84  EC32  F005         	call	_clcd_putch
  1655   001B88                     
  1656                           ;view_log.c: 84:             clcd_putch(' ', (0xC0 + (10)));;view_log.c: 84:            
      +                           clcd_putch(' ', (0xC0 + (10)));
  1657   001B88  0ECA               	movlw	202
  1658   001B8A  6E0F               	movwf	clcd_putch@addr^0,c
  1659   001B8C  0E20               	movlw	32
  1660   001B8E  EC32  F005         	call	_clcd_putch
  1661   001B92                     
  1662                           ;view_log.c: 85:             clcd_putch(readdata[6], (0xC0 + (11)));;view_log.c: 85:    
      +                                   clcd_putch(readdata[6], (0xC0 + (11)));
  1663   001B92  0ECB               	movlw	203
  1664   001B94  6E0F               	movwf	clcd_putch@addr^0,c
  1665   001B96  5019               	movf	(view_log@readdata+6)^0,w,c
  1666   001B98  EC32  F005         	call	_clcd_putch
  1667   001B9C                     
  1668                           ;view_log.c: 86:             clcd_putch(readdata[7], (0xC0 + (12)));;view_log.c: 86:    
      +                                   clcd_putch(readdata[7], (0xC0 + (12)));
  1669   001B9C  0ECC               	movlw	204
  1670   001B9E  6E0F               	movwf	clcd_putch@addr^0,c
  1671   001BA0  501A               	movf	(view_log@readdata+7)^0,w,c
  1672   001BA2  EC32  F005         	call	_clcd_putch
  1673   001BA6                     
  1674                           ;view_log.c: 87:             clcd_putch(' ', (0xC0 + (13)));;view_log.c: 87:            
      +                           clcd_putch(' ', (0xC0 + (13)));
  1675   001BA6  0ECD               	movlw	205
  1676   001BA8  6E0F               	movwf	clcd_putch@addr^0,c
  1677   001BAA  0E20               	movlw	32
  1678   001BAC  EC32  F005         	call	_clcd_putch
  1679   001BB0                     
  1680                           ;view_log.c: 88:             clcd_putch(readdata[8], (0xC0 + (14)));;view_log.c: 88:    
      +                                   clcd_putch(readdata[8], (0xC0 + (14)));
  1681   001BB0  0ECE               	movlw	206
  1682   001BB2  6E0F               	movwf	clcd_putch@addr^0,c
  1683   001BB4  501B               	movf	(view_log@readdata+8)^0,w,c
  1684   001BB6  EC32  F005         	call	_clcd_putch
  1685   001BBA                     
  1686                           ;view_log.c: 89:             clcd_putch(readdata[9], (0xC0 + (15)));;view_log.c: 89:    
      +                                   clcd_putch(readdata[9], (0xC0 + (15)));
  1687   001BBA  0ECF               	movlw	207
  1688   001BBC  6E0F               	movwf	clcd_putch@addr^0,c
  1689   001BBE  501C               	movf	(view_log@readdata+9)^0,w,c
  1690   001BC0  EC32  F005         	call	_clcd_putch
  1691   001BC4                     l3760:
  1692                           
  1693                           ;view_log.c: 93:         if (key == 6);view_log.c: 93:         if (key == 6)
  1694   001BC4  0E06               	movlw	6
  1695   001BC6  1822               	xorwf	view_log@key^0,w,c
  1696   001BC8  A4D8               	btfss	status,2,c
  1697   001BCA  EFE9  F00D         	goto	u3131
  1698   001BCE  EFEB  F00D         	goto	u3130
  1699   001BD2                     u3131:
  1700   001BD2  EFED  F00D         	goto	l3764
  1701   001BD6                     u3130:
  1702   001BD6                     
  1703                           ;view_log.c: 94:         {;view_log.c: 94:         {;view_log.c: 95:             axis++;
      +                          ;view_log.c: 95:             axis++;
  1704   001BD6  2A5C               	incf	_axis^0,f,c
  1705                           
  1706                           ;view_log.c: 96:             count++;;view_log.c: 96:             count++;
  1707   001BD8  2A5B               	incf	_count^0,f,c
  1708   001BDA                     l3764:
  1709                           
  1710                           ;view_log.c: 100:         if (key == 16);view_log.c: 100:         if (key == 16)
  1711   001BDA  0E10               	movlw	16
  1712   001BDC  1822               	xorwf	view_log@key^0,w,c
  1713   001BDE  A4D8               	btfss	status,2,c
  1714   001BE0  EFF4  F00D         	goto	u3141
  1715   001BE4  EFF6  F00D         	goto	u3140
  1716   001BE8                     u3141:
  1717   001BE8  EF0D  F00D         	goto	l3688
  1718   001BEC                     u3140:
  1719   001BEC                     
  1720                           ;view_log.c: 101:         {;view_log.c: 101:         {;view_log.c: 103:             clcd
      +                          _write(0x01, 0);;view_log.c: 103:             clcd_write(0x01, 0);
  1721   001BEC  0E00               	movlw	0
  1722   001BEE  6E01               	movwf	clcd_write@control_bit^0,c
  1723   001BF0  0E01               	movlw	1
  1724   001BF2  ECEE  F005         	call	_clcd_write
  1725   001BF6                     
  1726                           ;view_log.c: 104:             main_f = 2;;view_log.c: 104:             main_f = 2;
  1727   001BF6  0E02               	movlw	2
  1728   001BF8  6E51               	movwf	_main_f^0,c
  1729   001BFA  0012               	return		;funcret
  1730   001BFC                     __end_of_view_log:
  1731                           	callstack 0
  1732                           
  1733 ;; *************** function _settime *****************
  1734 ;; Defined at:
  1735 ;;		line 18 in file "set_time.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  key             1    wreg     unsigned char 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  key             1   31[COMRAM] unsigned char 
  1740 ;;  wait            2   29[COMRAM] int 
  1741 ;;  second          2   36[COMRAM] int 
  1742 ;;  minute          2   34[COMRAM] int 
  1743 ;;  hour            2   32[COMRAM] int 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1753 ;;      Params:         0       0       0       0       0       0       0
  1754 ;;      Locals:         9       0       0       0       0       0       0
  1755 ;;      Temps:          2       0       0       0       0       0       0
  1756 ;;      Totals:        11       0       0       0       0       0       0
  1757 ;;Total ram usage:       11 bytes
  1758 ;; Hardware stack levels used: 1
  1759 ;; Hardware stack levels required when called: 4
  1760 ;; This function calls:
  1761 ;;		___awdiv
  1762 ;;		___awmod
  1763 ;;		_clcd_print
  1764 ;;		_clcd_putch
  1765 ;;		_clcd_write
  1766 ;;		_read_switches
  1767 ;;		_save_time_to_RTC
  1768 ;;		_store_event
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text2
  1775   002954                     __ptext2:
  1776                           	callstack 0
  1777   002954                     _settime:
  1778                           	callstack 26
  1779   002954                     
  1780                           ;set_time.c: 18: void settime(char key);set_time.c: 18: void settime(char key);set_time.
      +                          c: 19: {;set_time.c: 19: {;set_time.c: 20:     clcd_print("    SET TIME    ", (0x80 + (0
      +                          )));;set_time.c: 20:     clcd_print("    SET TIME    ", (0x80 + (0)));
  1781   002954  0EE4               	movlw	low STR_26
  1782   002956  6E03               	movwf	clcd_print@data^0,c
  1783   002958  0E2E               	movlw	high STR_26
  1784   00295A  6E04               	movwf	(clcd_print@data+1)^0,c
  1785   00295C  0E80               	movlw	128
  1786   00295E  6E05               	movwf	clcd_print@addr^0,c
  1787   002960  ECAD  F006         	call	_clcd_print	;wreg free
  1788   002964                     
  1789                           ;set_time.c: 23:     int hour = (time[0]-48)*10+(time[1]-48);;set_time.c: 23:     int ho
      +                          ur = (time[0]-48)*10+(time[1]-48);
  1790   002964  5052               	movf	_time^0,w,c
  1791   002966  0D0A               	mullw	10
  1792   002968  CFF3 F01C          	movff	prodl,??_settime
  1793   00296C  CFF4 F01D          	movff	prodh,??_settime+1
  1794   002970  5053               	movf	(_time+1)^0,w,c
  1795   002972  261C               	addwf	??_settime^0,f,c
  1796   002974  0E00               	movlw	0
  1797   002976  221D               	addwfc	(??_settime+1)^0,f,c
  1798   002978  0EF0               	movlw	240
  1799   00297A  241C               	addwf	??_settime^0,w,c
  1800   00297C  6E21               	movwf	settime@hour^0,c
  1801   00297E  0EFD               	movlw	253
  1802   002980  201D               	addwfc	(??_settime+1)^0,w,c
  1803   002982  6E22               	movwf	(settime@hour+1)^0,c
  1804   002984                     
  1805                           ;set_time.c: 24:     int minute = (time[3]-48)*10+(time[4]-48);;set_time.c: 24:     int 
      +                          minute = (time[3]-48)*10+(time[4]-48);
  1806   002984  5055               	movf	(_time+3)^0,w,c
  1807   002986  0D0A               	mullw	10
  1808   002988  CFF3 F01C          	movff	prodl,??_settime
  1809   00298C  CFF4 F01D          	movff	prodh,??_settime+1
  1810   002990  5056               	movf	(_time+4)^0,w,c
  1811   002992  261C               	addwf	??_settime^0,f,c
  1812   002994  0E00               	movlw	0
  1813   002996  221D               	addwfc	(??_settime+1)^0,f,c
  1814   002998  0EF0               	movlw	240
  1815   00299A  241C               	addwf	??_settime^0,w,c
  1816   00299C  6E23               	movwf	settime@minute^0,c
  1817   00299E  0EFD               	movlw	253
  1818   0029A0  201D               	addwfc	(??_settime+1)^0,w,c
  1819   0029A2  6E24               	movwf	(settime@minute+1)^0,c
  1820   0029A4                     
  1821                           ;set_time.c: 25:     int second = (time[6]-48)*10+(time[7]-48);;set_time.c: 25:     int 
      +                          second = (time[6]-48)*10+(time[7]-48);
  1822   0029A4  5058               	movf	(_time+6)^0,w,c
  1823   0029A6  0D0A               	mullw	10
  1824   0029A8  CFF3 F01C          	movff	prodl,??_settime
  1825   0029AC  CFF4 F01D          	movff	prodh,??_settime+1
  1826   0029B0  5059               	movf	(_time+7)^0,w,c
  1827   0029B2  261C               	addwf	??_settime^0,f,c
  1828   0029B4  0E00               	movlw	0
  1829   0029B6  221D               	addwfc	(??_settime+1)^0,f,c
  1830   0029B8  0EF0               	movlw	240
  1831   0029BA  241C               	addwf	??_settime^0,w,c
  1832   0029BC  6E25               	movwf	settime@second^0,c
  1833   0029BE  0EFD               	movlw	253
  1834   0029C0  201D               	addwfc	(??_settime+1)^0,w,c
  1835   0029C2  6E26               	movwf	(settime@second+1)^0,c
  1836   0029C4                     
  1837                           ;set_time.c: 28:     clcd_putch(time[2], (0xC0 + (6)));;set_time.c: 28:     clcd_putch(t
      +                          ime[2], (0xC0 + (6)));
  1838   0029C4  0EC6               	movlw	198
  1839   0029C6  6E0F               	movwf	clcd_putch@addr^0,c
  1840   0029C8  5054               	movf	(_time+2)^0,w,c
  1841   0029CA  EC32  F005         	call	_clcd_putch
  1842   0029CE                     
  1843                           ;set_time.c: 29:     clcd_putch(time[5], (0xC0 + (9)));;set_time.c: 29:     clcd_putch(t
      +                          ime[5], (0xC0 + (9)));
  1844   0029CE  0EC9               	movlw	201
  1845   0029D0  6E0F               	movwf	clcd_putch@addr^0,c
  1846   0029D2  5057               	movf	(_time+5)^0,w,c
  1847   0029D4  EC32  F005         	call	_clcd_putch
  1848   0029D8                     
  1849                           ;set_time.c: 31:     clcd_print("    ", (0xC0 + (0)));;set_time.c: 31:     clcd_print(" 
      +                             ", (0xC0 + (0)));
  1850   0029D8  0EDF               	movlw	low (STR_29+12)
  1851   0029DA  6E03               	movwf	clcd_print@data^0,c
  1852   0029DC  0E2E               	movlw	high (STR_29+12)
  1853   0029DE  6E04               	movwf	(clcd_print@data+1)^0,c
  1854   0029E0  0EC0               	movlw	192
  1855   0029E2  6E05               	movwf	clcd_print@addr^0,c
  1856   0029E4  ECAD  F006         	call	_clcd_print	;wreg free
  1857   0029E8                     
  1858                           ;set_time.c: 32:     clcd_print("    ", (0xC0 + (12)));;set_time.c: 32:     clcd_print("
      +                              ", (0xC0 + (12)));
  1859   0029E8  0EDF               	movlw	low (STR_29+12)
  1860   0029EA  6E03               	movwf	clcd_print@data^0,c
  1861   0029EC  0E2E               	movlw	high (STR_29+12)
  1862   0029EE  6E04               	movwf	(clcd_print@data+1)^0,c
  1863   0029F0  0ECC               	movlw	204
  1864   0029F2  6E05               	movwf	clcd_print@addr^0,c
  1865   0029F4  ECAD  F006         	call	_clcd_print	;wreg free
  1866   0029F8                     
  1867                           ;set_time.c: 35:     if( field_flag == 0 );set_time.c: 35:     if( field_flag == 0 )
  1868   0029F8  5047               	movf	_field_flag^0,w,c
  1869   0029FA  1048               	iorwf	(_field_flag+1)^0,w,c
  1870   0029FC  A4D8               	btfss	status,2,c
  1871   0029FE  EF03  F015         	goto	u3201
  1872   002A02  EF05  F015         	goto	u3200
  1873   002A06                     u3201:
  1874   002A06  EF4A  F015         	goto	l3876
  1875   002A0A                     u3200:
  1876   002A0A                     
  1877                           ;set_time.c: 36:     {;set_time.c: 36:     {;set_time.c: 38:         if( flick == 200 );
      +                          set_time.c: 38:         if( flick == 200 )
  1878   002A0A  0EC8               	movlw	200
  1879   002A0C  1841               	xorwf	_flick^0,w,c
  1880   002A0E  1042               	iorwf	(_flick+1)^0,w,c
  1881   002A10  A4D8               	btfss	status,2,c
  1882   002A12  EF0D  F015         	goto	u3211
  1883   002A16  EF0F  F015         	goto	u3210
  1884   002A1A                     u3211:
  1885   002A1A  EF1B  F015         	goto	l3860
  1886   002A1E                     u3210:
  1887   002A1E                     
  1888                           ;set_time.c: 39:         {;set_time.c: 39:         {;set_time.c: 40:             clcd_pu
      +                          tch(time[6], (0xC0 + (10)));;set_time.c: 40:             clcd_putch(time[6], (0xC0 + (10
      +                          )));
  1889   002A1E  0ECA               	movlw	202
  1890   002A20  6E0F               	movwf	clcd_putch@addr^0,c
  1891   002A22  5058               	movf	(_time+6)^0,w,c
  1892   002A24  EC32  F005         	call	_clcd_putch
  1893                           
  1894                           ;set_time.c: 41:             clcd_putch(time[7], (0xC0 + (11)));;set_time.c: 41:        
      +                               clcd_putch(time[7], (0xC0 + (11)));
  1895   002A28  0ECB               	movlw	203
  1896   002A2A  6E0F               	movwf	clcd_putch@addr^0,c
  1897   002A2C  5059               	movf	(_time+7)^0,w,c
  1898   002A2E  EC32  F005         	call	_clcd_putch
  1899                           
  1900                           ;set_time.c: 42:         };set_time.c: 42:         }
  1901   002A32  EF34  F015         	goto	l3868
  1902   002A36                     l3860:
  1903   002A36  0E90               	movlw	144
  1904   002A38  1841               	xorwf	_flick^0,w,c
  1905   002A3A  E106               	bnz	u3221
  1906   002A3C  0442               	decf	(_flick+1)^0,w,c
  1907   002A3E  A4D8               	btfss	status,2,c
  1908   002A40  EF24  F015         	goto	u3221
  1909   002A44  EF26  F015         	goto	u3220
  1910   002A48                     u3221:
  1911   002A48  EF34  F015         	goto	l3868
  1912   002A4C                     u3220:
  1913   002A4C                     
  1914                           ;set_time.c: 44:         {;set_time.c: 44:         {;set_time.c: 45:             flick =
      +                           0;;set_time.c: 45:             flick = 0;
  1915   002A4C  0E00               	movlw	0
  1916   002A4E  6E42               	movwf	(_flick+1)^0,c
  1917   002A50  0E00               	movlw	0
  1918   002A52  6E41               	movwf	_flick^0,c
  1919   002A54                     
  1920                           ;set_time.c: 46:             clcd_putch(' ', (0xC0 + (10)));;set_time.c: 46:            
      +                           clcd_putch(' ', (0xC0 + (10)));
  1921   002A54  0ECA               	movlw	202
  1922   002A56  6E0F               	movwf	clcd_putch@addr^0,c
  1923   002A58  0E20               	movlw	32
  1924   002A5A  EC32  F005         	call	_clcd_putch
  1925   002A5E                     
  1926                           ;set_time.c: 47:             clcd_putch(' ', (0xC0 + (11)));;set_time.c: 47:            
      +                           clcd_putch(' ', (0xC0 + (11)));
  1927   002A5E  0ECB               	movlw	203
  1928   002A60  6E0F               	movwf	clcd_putch@addr^0,c
  1929   002A62  0E20               	movlw	32
  1930   002A64  EC32  F005         	call	_clcd_putch
  1931   002A68                     l3868:
  1932                           
  1933                           ;set_time.c: 49:         clcd_putch(time[0], (0xC0 + (4)));;set_time.c: 49:         clcd
      +                          _putch(time[0], (0xC0 + (4)));
  1934   002A68  0EC4               	movlw	196
  1935   002A6A  6E0F               	movwf	clcd_putch@addr^0,c
  1936   002A6C  5052               	movf	_time^0,w,c
  1937   002A6E  EC32  F005         	call	_clcd_putch
  1938   002A72                     
  1939                           ;set_time.c: 50:         clcd_putch(time[1], (0xC0 + (5)));;set_time.c: 50:         clcd
      +                          _putch(time[1], (0xC0 + (5)));
  1940   002A72  0EC5               	movlw	197
  1941   002A74  6E0F               	movwf	clcd_putch@addr^0,c
  1942   002A76  5053               	movf	(_time+1)^0,w,c
  1943   002A78  EC32  F005         	call	_clcd_putch
  1944   002A7C                     
  1945                           ;set_time.c: 51:         clcd_putch(time[3], (0xC0 + (7)));;set_time.c: 51:         clcd
      +                          _putch(time[3], (0xC0 + (7)));
  1946   002A7C  0EC7               	movlw	199
  1947   002A7E  6E0F               	movwf	clcd_putch@addr^0,c
  1948   002A80  5055               	movf	(_time+3)^0,w,c
  1949   002A82  EC32  F005         	call	_clcd_putch
  1950   002A86                     
  1951                           ;set_time.c: 52:         clcd_putch(time[4], (0xC0 + (8)));;set_time.c: 52:         clcd
      +                          _putch(time[4], (0xC0 + (8)));
  1952   002A86  0EC8               	movlw	200
  1953   002A88  6E0F               	movwf	clcd_putch@addr^0,c
  1954   002A8A  5056               	movf	(_time+4)^0,w,c
  1955   002A8C  EC32  F005         	call	_clcd_putch
  1956                           
  1957                           ;set_time.c: 53:     };set_time.c: 53:     }
  1958   002A90  EFE5  F015         	goto	l3920
  1959   002A94                     l3876:
  1960   002A94  0447               	decf	_field_flag^0,w,c
  1961   002A96  1048               	iorwf	(_field_flag+1)^0,w,c
  1962   002A98  A4D8               	btfss	status,2,c
  1963   002A9A  EF51  F015         	goto	u3231
  1964   002A9E  EF53  F015         	goto	u3230
  1965   002AA2                     u3231:
  1966   002AA2  EF98  F015         	goto	l3898
  1967   002AA6                     u3230:
  1968   002AA6                     
  1969                           ;set_time.c: 55:     {;set_time.c: 55:     {;set_time.c: 57:         if( flick == 200 );
      +                          set_time.c: 57:         if( flick == 200 )
  1970   002AA6  0EC8               	movlw	200
  1971   002AA8  1841               	xorwf	_flick^0,w,c
  1972   002AAA  1042               	iorwf	(_flick+1)^0,w,c
  1973   002AAC  A4D8               	btfss	status,2,c
  1974   002AAE  EF5B  F015         	goto	u3241
  1975   002AB2  EF5D  F015         	goto	u3240
  1976   002AB6                     u3241:
  1977   002AB6  EF69  F015         	goto	l3882
  1978   002ABA                     u3240:
  1979   002ABA                     
  1980                           ;set_time.c: 58:         {;set_time.c: 58:         {;set_time.c: 59:             clcd_pu
      +                          tch(time[3], (0xC0 + (7)));;set_time.c: 59:             clcd_putch(time[3], (0xC0 + (7))
      +                          );
  1981   002ABA  0EC7               	movlw	199
  1982   002ABC  6E0F               	movwf	clcd_putch@addr^0,c
  1983   002ABE  5055               	movf	(_time+3)^0,w,c
  1984   002AC0  EC32  F005         	call	_clcd_putch
  1985                           
  1986                           ;set_time.c: 60:             clcd_putch(time[4], (0xC0 + (8)));;set_time.c: 60:         
      +                              clcd_putch(time[4], (0xC0 + (8)));
  1987   002AC4  0EC8               	movlw	200
  1988   002AC6  6E0F               	movwf	clcd_putch@addr^0,c
  1989   002AC8  5056               	movf	(_time+4)^0,w,c
  1990   002ACA  EC32  F005         	call	_clcd_putch
  1991                           
  1992                           ;set_time.c: 61:         };set_time.c: 61:         }
  1993   002ACE  EF82  F015         	goto	l3890
  1994   002AD2                     l3882:
  1995   002AD2  0E90               	movlw	144
  1996   002AD4  1841               	xorwf	_flick^0,w,c
  1997   002AD6  E106               	bnz	u3251
  1998   002AD8  0442               	decf	(_flick+1)^0,w,c
  1999   002ADA  A4D8               	btfss	status,2,c
  2000   002ADC  EF72  F015         	goto	u3251
  2001   002AE0  EF74  F015         	goto	u3250
  2002   002AE4                     u3251:
  2003   002AE4  EF82  F015         	goto	l3890
  2004   002AE8                     u3250:
  2005   002AE8                     
  2006                           ;set_time.c: 63:         {;set_time.c: 63:         {;set_time.c: 64:             flick =
      +                           0;;set_time.c: 64:             flick = 0;
  2007   002AE8  0E00               	movlw	0
  2008   002AEA  6E42               	movwf	(_flick+1)^0,c
  2009   002AEC  0E00               	movlw	0
  2010   002AEE  6E41               	movwf	_flick^0,c
  2011   002AF0                     
  2012                           ;set_time.c: 65:             clcd_putch(' ', (0xC0 + (7)));;set_time.c: 65:             
      +                          clcd_putch(' ', (0xC0 + (7)));
  2013   002AF0  0EC7               	movlw	199
  2014   002AF2  6E0F               	movwf	clcd_putch@addr^0,c
  2015   002AF4  0E20               	movlw	32
  2016   002AF6  EC32  F005         	call	_clcd_putch
  2017   002AFA                     
  2018                           ;set_time.c: 66:             clcd_putch(' ', (0xC0 + (8)));;set_time.c: 66:             
      +                          clcd_putch(' ', (0xC0 + (8)));
  2019   002AFA  0EC8               	movlw	200
  2020   002AFC  6E0F               	movwf	clcd_putch@addr^0,c
  2021   002AFE  0E20               	movlw	32
  2022   002B00  EC32  F005         	call	_clcd_putch
  2023   002B04                     l3890:
  2024                           
  2025                           ;set_time.c: 68:         clcd_putch(time[0], (0xC0 + (4)));;set_time.c: 68:         clcd
      +                          _putch(time[0], (0xC0 + (4)));
  2026   002B04  0EC4               	movlw	196
  2027   002B06  6E0F               	movwf	clcd_putch@addr^0,c
  2028   002B08  5052               	movf	_time^0,w,c
  2029   002B0A  EC32  F005         	call	_clcd_putch
  2030   002B0E                     
  2031                           ;set_time.c: 69:         clcd_putch(time[1], (0xC0 + (5)));;set_time.c: 69:         clcd
      +                          _putch(time[1], (0xC0 + (5)));
  2032   002B0E  0EC5               	movlw	197
  2033   002B10  6E0F               	movwf	clcd_putch@addr^0,c
  2034   002B12  5053               	movf	(_time+1)^0,w,c
  2035   002B14  EC32  F005         	call	_clcd_putch
  2036   002B18                     
  2037                           ;set_time.c: 70:         clcd_putch(time[6], (0xC0 + (10)));;set_time.c: 70:         clc
      +                          d_putch(time[6], (0xC0 + (10)));
  2038   002B18  0ECA               	movlw	202
  2039   002B1A  6E0F               	movwf	clcd_putch@addr^0,c
  2040   002B1C  5058               	movf	(_time+6)^0,w,c
  2041   002B1E  EC32  F005         	call	_clcd_putch
  2042   002B22                     
  2043                           ;set_time.c: 71:         clcd_putch(time[7], (0xC0 + (11)));;set_time.c: 71:         clc
      +                          d_putch(time[7], (0xC0 + (11)));
  2044   002B22  0ECB               	movlw	203
  2045   002B24  6E0F               	movwf	clcd_putch@addr^0,c
  2046   002B26  5059               	movf	(_time+7)^0,w,c
  2047   002B28  EC32  F005         	call	_clcd_putch
  2048                           
  2049                           ;set_time.c: 72:     };set_time.c: 72:     }
  2050   002B2C  EFE5  F015         	goto	l3920
  2051   002B30                     l3898:
  2052   002B30  0E02               	movlw	2
  2053   002B32  1847               	xorwf	_field_flag^0,w,c
  2054   002B34  1048               	iorwf	(_field_flag+1)^0,w,c
  2055   002B36  A4D8               	btfss	status,2,c
  2056   002B38  EFA0  F015         	goto	u3261
  2057   002B3C  EFA2  F015         	goto	u3260
  2058   002B40                     u3261:
  2059   002B40  EFE5  F015         	goto	l3920
  2060   002B44                     u3260:
  2061   002B44                     
  2062                           ;set_time.c: 74:     {;set_time.c: 74:     {;set_time.c: 76:         if( flick == 200 );
      +                          set_time.c: 76:         if( flick == 200 )
  2063   002B44  0EC8               	movlw	200
  2064   002B46  1841               	xorwf	_flick^0,w,c
  2065   002B48  1042               	iorwf	(_flick+1)^0,w,c
  2066   002B4A  A4D8               	btfss	status,2,c
  2067   002B4C  EFAA  F015         	goto	u3271
  2068   002B50  EFAC  F015         	goto	u3270
  2069   002B54                     u3271:
  2070   002B54  EFB8  F015         	goto	l3904
  2071   002B58                     u3270:
  2072   002B58                     
  2073                           ;set_time.c: 77:         {;set_time.c: 77:         {;set_time.c: 78:             clcd_pu
      +                          tch(time[0], (0xC0 + (4)));;set_time.c: 78:             clcd_putch(time[0], (0xC0 + (4))
      +                          );
  2074   002B58  0EC4               	movlw	196
  2075   002B5A  6E0F               	movwf	clcd_putch@addr^0,c
  2076   002B5C  5052               	movf	_time^0,w,c
  2077   002B5E  EC32  F005         	call	_clcd_putch
  2078                           
  2079                           ;set_time.c: 79:             clcd_putch(time[1], (0xC0 + (5)));;set_time.c: 79:         
      +                              clcd_putch(time[1], (0xC0 + (5)));
  2080   002B62  0EC5               	movlw	197
  2081   002B64  6E0F               	movwf	clcd_putch@addr^0,c
  2082   002B66  5053               	movf	(_time+1)^0,w,c
  2083   002B68  EC32  F005         	call	_clcd_putch
  2084                           
  2085                           ;set_time.c: 80:         };set_time.c: 80:         }
  2086   002B6C  EFD1  F015         	goto	l3912
  2087   002B70                     l3904:
  2088   002B70  0E90               	movlw	144
  2089   002B72  1841               	xorwf	_flick^0,w,c
  2090   002B74  E106               	bnz	u3281
  2091   002B76  0442               	decf	(_flick+1)^0,w,c
  2092   002B78  A4D8               	btfss	status,2,c
  2093   002B7A  EFC1  F015         	goto	u3281
  2094   002B7E  EFC3  F015         	goto	u3280
  2095   002B82                     u3281:
  2096   002B82  EFD1  F015         	goto	l3912
  2097   002B86                     u3280:
  2098   002B86                     
  2099                           ;set_time.c: 82:         {;set_time.c: 82:         {;set_time.c: 83:             flick =
      +                           0;;set_time.c: 83:             flick = 0;
  2100   002B86  0E00               	movlw	0
  2101   002B88  6E42               	movwf	(_flick+1)^0,c
  2102   002B8A  0E00               	movlw	0
  2103   002B8C  6E41               	movwf	_flick^0,c
  2104   002B8E                     
  2105                           ;set_time.c: 84:             clcd_putch(' ', (0xC0 + (4)));;set_time.c: 84:             
      +                          clcd_putch(' ', (0xC0 + (4)));
  2106   002B8E  0EC4               	movlw	196
  2107   002B90  6E0F               	movwf	clcd_putch@addr^0,c
  2108   002B92  0E20               	movlw	32
  2109   002B94  EC32  F005         	call	_clcd_putch
  2110   002B98                     
  2111                           ;set_time.c: 85:             clcd_putch(' ', (0xC0 + (5)));;set_time.c: 85:             
      +                          clcd_putch(' ', (0xC0 + (5)));
  2112   002B98  0EC5               	movlw	197
  2113   002B9A  6E0F               	movwf	clcd_putch@addr^0,c
  2114   002B9C  0E20               	movlw	32
  2115   002B9E  EC32  F005         	call	_clcd_putch
  2116   002BA2                     l3912:
  2117                           
  2118                           ;set_time.c: 87:         clcd_putch(time[3], (0xC0 + (7)));;set_time.c: 87:         clcd
      +                          _putch(time[3], (0xC0 + (7)));
  2119   002BA2  0EC7               	movlw	199
  2120   002BA4  6E0F               	movwf	clcd_putch@addr^0,c
  2121   002BA6  5055               	movf	(_time+3)^0,w,c
  2122   002BA8  EC32  F005         	call	_clcd_putch
  2123   002BAC                     
  2124                           ;set_time.c: 88:         clcd_putch(time[4], (0xC0 + (8)));;set_time.c: 88:         clcd
      +                          _putch(time[4], (0xC0 + (8)));
  2125   002BAC  0EC8               	movlw	200
  2126   002BAE  6E0F               	movwf	clcd_putch@addr^0,c
  2127   002BB0  5056               	movf	(_time+4)^0,w,c
  2128   002BB2  EC32  F005         	call	_clcd_putch
  2129   002BB6                     
  2130                           ;set_time.c: 89:         clcd_putch(time[6], (0xC0 + (10)));;set_time.c: 89:         clc
      +                          d_putch(time[6], (0xC0 + (10)));
  2131   002BB6  0ECA               	movlw	202
  2132   002BB8  6E0F               	movwf	clcd_putch@addr^0,c
  2133   002BBA  5058               	movf	(_time+6)^0,w,c
  2134   002BBC  EC32  F005         	call	_clcd_putch
  2135   002BC0                     
  2136                           ;set_time.c: 90:         clcd_putch(time[7], (0xC0 + (11)));;set_time.c: 90:         clc
      +                          d_putch(time[7], (0xC0 + (11)));
  2137   002BC0  0ECB               	movlw	203
  2138   002BC2  6E0F               	movwf	clcd_putch@addr^0,c
  2139   002BC4  5059               	movf	(_time+7)^0,w,c
  2140   002BC6  EC32  F005         	call	_clcd_putch
  2141   002BCA                     l3920:
  2142                           
  2143                           ;set_time.c: 92:     flick++;;set_time.c: 92:     flick++;
  2144   002BCA  4A41               	infsnz	_flick^0,f,c
  2145   002BCC  2A42               	incf	(_flick+1)^0,f,c
  2146   002BCE                     
  2147                           ;set_time.c: 94:      key = read_switches(0);;set_time.c: 94:      key = read_switches(0
      +                          );
  2148   002BCE  0E00               	movlw	0
  2149   002BD0  EC19  F007         	call	_read_switches
  2150   002BD4  6E20               	movwf	settime@key^0,c
  2151   002BD6                     
  2152                           ;set_time.c: 96:     if( key == 5 );set_time.c: 96:     if( key == 5 )
  2153   002BD6  0E05               	movlw	5
  2154   002BD8  1820               	xorwf	settime@key^0,w,c
  2155   002BDA  A4D8               	btfss	status,2,c
  2156   002BDC  EFF2  F015         	goto	u3291
  2157   002BE0  EFF4  F015         	goto	u3290
  2158   002BE4                     u3291:
  2159   002BE4  EF34  F016         	goto	l3946
  2160   002BE8                     u3290:
  2161   002BE8                     
  2162                           ;set_time.c: 97:     {;set_time.c: 97:     {;set_time.c: 98:         long_press_S5++;;se
      +                          t_time.c: 98:         long_press_S5++;
  2163   002BE8  4A45               	infsnz	_long_press_S5^0,f,c
  2164   002BEA  2A46               	incf	(_long_press_S5+1)^0,f,c
  2165   002BEC                     
  2166                           ;set_time.c: 102:         if( long_press_S5 > 800 );set_time.c: 102:         if( long_pr
      +                          ess_S5 > 800 )
  2167   002BEC  BE46               	btfsc	(_long_press_S5+1)^0,7,c
  2168   002BEE  EF02  F016         	goto	u3301
  2169   002BF2  0E21               	movlw	33
  2170   002BF4  5C45               	subwf	_long_press_S5^0,w,c
  2171   002BF6  0E03               	movlw	3
  2172   002BF8  5846               	subwfb	(_long_press_S5+1)^0,w,c
  2173   002BFA  A0D8               	btfss	status,0,c
  2174   002BFC  EF02  F016         	goto	u3301
  2175   002C00  EF04  F016         	goto	u3300
  2176   002C04                     u3301:
  2177   002C04  EFF7  F016         	goto	l3990
  2178   002C08                     u3300:
  2179   002C08                     
  2180                           ;set_time.c: 103:         {;set_time.c: 103:         {;set_time.c: 104:             long
      +                          _press_S5 = 0;;set_time.c: 104:             long_press_S5 = 0;
  2181   002C08  0E00               	movlw	0
  2182   002C0A  6E46               	movwf	(_long_press_S5+1)^0,c
  2183   002C0C  0E00               	movlw	0
  2184   002C0E  6E45               	movwf	_long_press_S5^0,c
  2185                           
  2186                           ;set_time.c: 105:             for( int wait = 3000 ; wait-- ; );set_time.c: 105:        
      +                               for( int wait = 3000 ; wait-- ; )
  2187   002C10  0E0B               	movlw	11
  2188   002C12  6E1F               	movwf	(settime@wait+1)^0,c
  2189   002C14  0EB8               	movlw	184
  2190   002C16  6E1E               	movwf	settime@wait^0,c
  2191   002C18  EF16  F016         	goto	l3934
  2192   002C1C                     l3932:
  2193                           
  2194                           ;set_time.c: 106:             {;set_time.c: 106:             {;set_time.c: 107:         
      +                                  clcd_print("    SUCCESS     ", (0xC0 + (0)));;set_time.c: 107:                 c
      +                          lcd_print("    SUCCESS     ", (0xC0 + (0)));
  2195   002C1C  0ED3               	movlw	low STR_29
  2196   002C1E  6E03               	movwf	clcd_print@data^0,c
  2197   002C20  0E2E               	movlw	high STR_29
  2198   002C22  6E04               	movwf	(clcd_print@data+1)^0,c
  2199   002C24  0EC0               	movlw	192
  2200   002C26  6E05               	movwf	clcd_print@addr^0,c
  2201   002C28  ECAD  F006         	call	_clcd_print	;wreg free
  2202   002C2C                     l3934:
  2203   002C2C  061E               	decf	settime@wait^0,f,c
  2204   002C2E  A0D8               	btfss	status,0,c
  2205   002C30  061F               	decf	(settime@wait+1)^0,f,c
  2206   002C32  281E               	incf	settime@wait^0,w,c
  2207   002C34  E106               	bnz	u3311
  2208   002C36  281F               	incf	(settime@wait+1)^0,w,c
  2209   002C38  A4D8               	btfss	status,2,c
  2210   002C3A  EF21  F016         	goto	u3311
  2211   002C3E  EF23  F016         	goto	u3310
  2212   002C42                     u3311:
  2213   002C42  EF0E  F016         	goto	l3932
  2214   002C46                     u3310:
  2215   002C46                     
  2216                           ;set_time.c: 109:             save_time_to_RTC();;set_time.c: 109:             save_time
      +                          _to_RTC();
  2217   002C46  EC4E  F006         	call	_save_time_to_RTC	;wreg free
  2218   002C4A                     
  2219                           ;set_time.c: 110:             store_event(10);;set_time.c: 110:             store_event(
      +                          10);
  2220   002C4A  0E0A               	movlw	10
  2221   002C4C  ECF8  F00A         	call	_store_event
  2222   002C50                     
  2223                           ;set_time.c: 111:             main_f = 2;;set_time.c: 111:             main_f = 2;
  2224   002C50  0E02               	movlw	2
  2225   002C52  6E51               	movwf	_main_f^0,c
  2226   002C54                     
  2227                           ;set_time.c: 112:             menu_f = -1;;set_time.c: 112:             menu_f = -1;
  2228   002C54  6850               	setf	_menu_f^0,c
  2229   002C56                     
  2230                           ;set_time.c: 113:             clcd_write(0x01, 0);;set_time.c: 113:             clcd_wri
      +                          te(0x01, 0);
  2231   002C56  0E00               	movlw	0
  2232   002C58  6E01               	movwf	clcd_write@control_bit^0,c
  2233   002C5A  0E01               	movlw	1
  2234   002C5C  ECEE  F005         	call	_clcd_write
  2235   002C60  EFF7  F016         	goto	l3990
  2236   002C64                     l629:
  2237                           
  2238                           ;set_time.c: 116:     };set_time.c: 116:     }
  2239   002C64  EFF7  F016         	goto	l3990
  2240   002C68                     l3946:
  2241   002C68  BE46               	btfsc	(_long_press_S5+1)^0,7,c
  2242   002C6A  EF3F  F016         	goto	u3321
  2243   002C6E  5046               	movf	(_long_press_S5+1)^0,w,c
  2244   002C70  E108               	bnz	u3320
  2245   002C72  0445               	decf	_long_press_S5^0,w,c
  2246   002C74  A0D8               	btfss	status,0,c
  2247   002C76  EF3F  F016         	goto	u3321
  2248   002C7A  EF41  F016         	goto	u3320
  2249   002C7E                     u3321:
  2250   002C7E  EFF3  F016         	goto	l3988
  2251   002C82                     u3320:
  2252   002C82  BE46               	btfsc	(_long_press_S5+1)^0,7,c
  2253   002C84  EF4F  F016         	goto	u3330
  2254   002C88  0E20               	movlw	32
  2255   002C8A  5C45               	subwf	_long_press_S5^0,w,c
  2256   002C8C  0E03               	movlw	3
  2257   002C8E  5846               	subwfb	(_long_press_S5+1)^0,w,c
  2258   002C90  B0D8               	btfsc	status,0,c
  2259   002C92  EF4D  F016         	goto	u3331
  2260   002C96  EF4F  F016         	goto	u3330
  2261   002C9A                     u3331:
  2262   002C9A  EFF3  F016         	goto	l3988
  2263   002C9E                     u3330:
  2264   002C9E                     
  2265                           ;set_time.c: 118:     {;set_time.c: 118:     {;set_time.c: 120:         long_press_S5 = 
      +                          0;;set_time.c: 120:         long_press_S5 = 0;
  2266   002C9E  0E00               	movlw	0
  2267   002CA0  6E46               	movwf	(_long_press_S5+1)^0,c
  2268   002CA2  0E00               	movlw	0
  2269   002CA4  6E45               	movwf	_long_press_S5^0,c
  2270   002CA6                     
  2271                           ;set_time.c: 121:         if( field_flag == 0 );set_time.c: 121:         if( field_flag 
      +                          == 0 )
  2272   002CA6  5047               	movf	_field_flag^0,w,c
  2273   002CA8  1048               	iorwf	(_field_flag+1)^0,w,c
  2274   002CAA  A4D8               	btfss	status,2,c
  2275   002CAC  EF5A  F016         	goto	u3341
  2276   002CB0  EF5C  F016         	goto	u3340
  2277   002CB4                     u3341:
  2278   002CB4  EF88  F016         	goto	l3964
  2279   002CB8                     u3340:
  2280   002CB8                     
  2281                           ;set_time.c: 122:         {;set_time.c: 122:         {;set_time.c: 124:             seco
      +                          nd++;;set_time.c: 124:             second++;
  2282   002CB8  4A25               	infsnz	settime@second^0,f,c
  2283   002CBA  2A26               	incf	(settime@second+1)^0,f,c
  2284   002CBC                     
  2285                           ;set_time.c: 125:             if( second == 60 );set_time.c: 125:             if( second
      +                           == 60 )
  2286   002CBC  0E3C               	movlw	60
  2287   002CBE  1825               	xorwf	settime@second^0,w,c
  2288   002CC0  1026               	iorwf	(settime@second+1)^0,w,c
  2289   002CC2  A4D8               	btfss	status,2,c
  2290   002CC4  EF66  F016         	goto	u3351
  2291   002CC8  EF68  F016         	goto	u3350
  2292   002CCC                     u3351:
  2293   002CCC  EF6C  F016         	goto	l3960
  2294   002CD0                     u3350:
  2295   002CD0                     
  2296                           ;set_time.c: 126:             {;set_time.c: 126:             {;set_time.c: 127:         
      +                                  second = 0;;set_time.c: 127:                 second = 0;
  2297   002CD0  0E00               	movlw	0
  2298   002CD2  6E26               	movwf	(settime@second+1)^0,c
  2299   002CD4  0E00               	movlw	0
  2300   002CD6  6E25               	movwf	settime@second^0,c
  2301   002CD8                     l3960:
  2302                           
  2303                           ;set_time.c: 131:             time[6] = (second/10)+48;;set_time.c: 131:             tim
      +                          e[6] = (second/10)+48;
  2304   002CD8  C025  F001         	movff	settime@second,___awdiv@dividend
  2305   002CDC  C026  F002         	movff	settime@second+1,___awdiv@dividend+1
  2306   002CE0  0E00               	movlw	0
  2307   002CE2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2308   002CE4  0E0A               	movlw	10
  2309   002CE6  6E03               	movwf	___awdiv@divisor^0,c
  2310   002CE8  EC95  F008         	call	___awdiv	;wreg free
  2311   002CEC  5001               	movf	?___awdiv^0,w,c
  2312   002CEE  0F30               	addlw	48
  2313   002CF0  6E58               	movwf	(_time+6)^0,c
  2314   002CF2                     
  2315                           ;set_time.c: 132:             time[7] = (second%10)+48;;set_time.c: 132:             tim
      +                          e[7] = (second%10)+48;
  2316   002CF2  C025  F009         	movff	settime@second,___awmod@dividend
  2317   002CF6  C026  F00A         	movff	settime@second+1,___awmod@dividend+1
  2318   002CFA  0E00               	movlw	0
  2319   002CFC  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2320   002CFE  0E0A               	movlw	10
  2321   002D00  6E0B               	movwf	___awmod@divisor^0,c
  2322   002D02  ECE4  F007         	call	___awmod	;wreg free
  2323   002D06  5009               	movf	?___awmod^0,w,c
  2324   002D08  0F30               	addlw	48
  2325   002D0A  6E59               	movwf	(_time+7)^0,c
  2326                           
  2327                           ;set_time.c: 133:         };set_time.c: 133:         }
  2328   002D0C  EFF7  F016         	goto	l3990
  2329   002D10                     l3964:
  2330   002D10  0447               	decf	_field_flag^0,w,c
  2331   002D12  1048               	iorwf	(_field_flag+1)^0,w,c
  2332   002D14  A4D8               	btfss	status,2,c
  2333   002D16  EF8F  F016         	goto	u3361
  2334   002D1A  EF91  F016         	goto	u3360
  2335   002D1E                     u3361:
  2336   002D1E  EFBD  F016         	goto	l3976
  2337   002D22                     u3360:
  2338   002D22                     
  2339                           ;set_time.c: 135:         {;set_time.c: 135:         {;set_time.c: 137:             minu
      +                          te++;;set_time.c: 137:             minute++;
  2340   002D22  4A23               	infsnz	settime@minute^0,f,c
  2341   002D24  2A24               	incf	(settime@minute+1)^0,f,c
  2342   002D26                     
  2343                           ;set_time.c: 138:             if( minute == 60 );set_time.c: 138:             if( minute
      +                           == 60 )
  2344   002D26  0E3C               	movlw	60
  2345   002D28  1823               	xorwf	settime@minute^0,w,c
  2346   002D2A  1024               	iorwf	(settime@minute+1)^0,w,c
  2347   002D2C  A4D8               	btfss	status,2,c
  2348   002D2E  EF9B  F016         	goto	u3371
  2349   002D32  EF9D  F016         	goto	u3370
  2350   002D36                     u3371:
  2351   002D36  EFA1  F016         	goto	l3972
  2352   002D3A                     u3370:
  2353   002D3A                     
  2354                           ;set_time.c: 139:             {;set_time.c: 139:             {;set_time.c: 140:         
      +                                  minute = 0;;set_time.c: 140:                 minute = 0;
  2355   002D3A  0E00               	movlw	0
  2356   002D3C  6E24               	movwf	(settime@minute+1)^0,c
  2357   002D3E  0E00               	movlw	0
  2358   002D40  6E23               	movwf	settime@minute^0,c
  2359   002D42                     l3972:
  2360                           
  2361                           ;set_time.c: 143:             time[3] = (minute/10)+48;;set_time.c: 143:             tim
      +                          e[3] = (minute/10)+48;
  2362   002D42  C023  F001         	movff	settime@minute,___awdiv@dividend
  2363   002D46  C024  F002         	movff	settime@minute+1,___awdiv@dividend+1
  2364   002D4A  0E00               	movlw	0
  2365   002D4C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2366   002D4E  0E0A               	movlw	10
  2367   002D50  6E03               	movwf	___awdiv@divisor^0,c
  2368   002D52  EC95  F008         	call	___awdiv	;wreg free
  2369   002D56  5001               	movf	?___awdiv^0,w,c
  2370   002D58  0F30               	addlw	48
  2371   002D5A  6E55               	movwf	(_time+3)^0,c
  2372   002D5C                     
  2373                           ;set_time.c: 144:             time[4] = (minute%10)+48;;set_time.c: 144:             tim
      +                          e[4] = (minute%10)+48;
  2374   002D5C  C023  F009         	movff	settime@minute,___awmod@dividend
  2375   002D60  C024  F00A         	movff	settime@minute+1,___awmod@dividend+1
  2376   002D64  0E00               	movlw	0
  2377   002D66  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2378   002D68  0E0A               	movlw	10
  2379   002D6A  6E0B               	movwf	___awmod@divisor^0,c
  2380   002D6C  ECE4  F007         	call	___awmod	;wreg free
  2381   002D70  5009               	movf	?___awmod^0,w,c
  2382   002D72  0F30               	addlw	48
  2383   002D74  6E56               	movwf	(_time+4)^0,c
  2384                           
  2385                           ;set_time.c: 145:         };set_time.c: 145:         }
  2386   002D76  EFF7  F016         	goto	l3990
  2387   002D7A                     l3976:
  2388   002D7A  0E02               	movlw	2
  2389   002D7C  1847               	xorwf	_field_flag^0,w,c
  2390   002D7E  1048               	iorwf	(_field_flag+1)^0,w,c
  2391   002D80  A4D8               	btfss	status,2,c
  2392   002D82  EFC5  F016         	goto	u3381
  2393   002D86  EFC7  F016         	goto	u3380
  2394   002D8A                     u3381:
  2395   002D8A  EF32  F016         	goto	l629
  2396   002D8E                     u3380:
  2397   002D8E                     
  2398                           ;set_time.c: 147:         {;set_time.c: 147:         {;set_time.c: 149:             hour
      +                          ++;;set_time.c: 149:             hour++;
  2399   002D8E  4A21               	infsnz	settime@hour^0,f,c
  2400   002D90  2A22               	incf	(settime@hour+1)^0,f,c
  2401   002D92                     
  2402                           ;set_time.c: 150:             if( hour == 24 );set_time.c: 150:             if( hour == 
      +                          24 )
  2403   002D92  0E18               	movlw	24
  2404   002D94  1821               	xorwf	settime@hour^0,w,c
  2405   002D96  1022               	iorwf	(settime@hour+1)^0,w,c
  2406   002D98  A4D8               	btfss	status,2,c
  2407   002D9A  EFD1  F016         	goto	u3391
  2408   002D9E  EFD3  F016         	goto	u3390
  2409   002DA2                     u3391:
  2410   002DA2  EFD7  F016         	goto	l3984
  2411   002DA6                     u3390:
  2412   002DA6                     
  2413                           ;set_time.c: 151:             {;set_time.c: 151:             {;set_time.c: 152:         
      +                                  hour = 0;;set_time.c: 152:                 hour = 0;
  2414   002DA6  0E00               	movlw	0
  2415   002DA8  6E22               	movwf	(settime@hour+1)^0,c
  2416   002DAA  0E00               	movlw	0
  2417   002DAC  6E21               	movwf	settime@hour^0,c
  2418   002DAE                     l3984:
  2419                           
  2420                           ;set_time.c: 155:             time[0] = (hour/10)+48;;set_time.c: 155:             time[
      +                          0] = (hour/10)+48;
  2421   002DAE  C021  F001         	movff	settime@hour,___awdiv@dividend
  2422   002DB2  C022  F002         	movff	settime@hour+1,___awdiv@dividend+1
  2423   002DB6  0E00               	movlw	0
  2424   002DB8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2425   002DBA  0E0A               	movlw	10
  2426   002DBC  6E03               	movwf	___awdiv@divisor^0,c
  2427   002DBE  EC95  F008         	call	___awdiv	;wreg free
  2428   002DC2  5001               	movf	?___awdiv^0,w,c
  2429   002DC4  0F30               	addlw	48
  2430   002DC6  6E52               	movwf	_time^0,c
  2431   002DC8                     
  2432                           ;set_time.c: 156:             time[1] = (hour%10)+48;;set_time.c: 156:             time[
      +                          1] = (hour%10)+48;
  2433   002DC8  C021  F009         	movff	settime@hour,___awmod@dividend
  2434   002DCC  C022  F00A         	movff	settime@hour+1,___awmod@dividend+1
  2435   002DD0  0E00               	movlw	0
  2436   002DD2  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2437   002DD4  0E0A               	movlw	10
  2438   002DD6  6E0B               	movwf	___awmod@divisor^0,c
  2439   002DD8  ECE4  F007         	call	___awmod	;wreg free
  2440   002DDC  5009               	movf	?___awmod^0,w,c
  2441   002DDE  0F30               	addlw	48
  2442   002DE0  6E53               	movwf	(_time+1)^0,c
  2443   002DE2  EFF7  F016         	goto	l3990
  2444   002DE6                     l3988:
  2445                           
  2446                           ;set_time.c: 160:     {;set_time.c: 160:     {;set_time.c: 161:         long_press_S5 = 
      +                          0;;set_time.c: 161:         long_press_S5 = 0;
  2447   002DE6  0E00               	movlw	0
  2448   002DE8  6E46               	movwf	(_long_press_S5+1)^0,c
  2449   002DEA  0E00               	movlw	0
  2450   002DEC  6E45               	movwf	_long_press_S5^0,c
  2451   002DEE                     l3990:
  2452                           
  2453                           ;set_time.c: 164:     if( key == 6 );set_time.c: 164:     if( key == 6 )
  2454   002DEE  0E06               	movlw	6
  2455   002DF0  1820               	xorwf	settime@key^0,w,c
  2456   002DF2  A4D8               	btfss	status,2,c
  2457   002DF4  EFFE  F016         	goto	u3401
  2458   002DF8  EF00  F017         	goto	u3400
  2459   002DFC                     u3401:
  2460   002DFC  EF1A  F017         	goto	l4002
  2461   002E00                     u3400:
  2462   002E00                     
  2463                           ;set_time.c: 165:     {;set_time.c: 165:     {;set_time.c: 166:         long_press_S6++;
      +                          ;set_time.c: 166:         long_press_S6++;
  2464   002E00  4A43               	infsnz	_long_press_S6^0,f,c
  2465   002E02  2A44               	incf	(_long_press_S6+1)^0,f,c
  2466   002E04                     
  2467                           ;set_time.c: 170:         if( long_press_S6 > 800);set_time.c: 170:         if( long_pre
      +                          ss_S6 > 800)
  2468   002E04  BE44               	btfsc	(_long_press_S6+1)^0,7,c
  2469   002E06  EF0E  F017         	goto	u3411
  2470   002E0A  0E21               	movlw	33
  2471   002E0C  5C43               	subwf	_long_press_S6^0,w,c
  2472   002E0E  0E03               	movlw	3
  2473   002E10  5844               	subwfb	(_long_press_S6+1)^0,w,c
  2474   002E12  A0D8               	btfss	status,0,c
  2475   002E14  EF0E  F017         	goto	u3411
  2476   002E18  EF10  F017         	goto	u3410
  2477   002E1C                     u3411:
  2478   002E1C  EF53  F017         	goto	l650
  2479   002E20                     u3410:
  2480   002E20                     
  2481                           ;set_time.c: 171:         {;set_time.c: 171:         {;set_time.c: 173:             main
      +                          _f = 2;;set_time.c: 173:             main_f = 2;
  2482   002E20  0E02               	movlw	2
  2483   002E22  6E51               	movwf	_main_f^0,c
  2484   002E24                     
  2485                           ;set_time.c: 174:             menu_f = -1;;set_time.c: 174:             menu_f = -1;
  2486   002E24  6850               	setf	_menu_f^0,c
  2487   002E26                     
  2488                           ;set_time.c: 175:             clcd_write(0x01, 0);;set_time.c: 175:             clcd_wri
      +                          te(0x01, 0);
  2489   002E26  0E00               	movlw	0
  2490   002E28  6E01               	movwf	clcd_write@control_bit^0,c
  2491   002E2A  0E01               	movlw	1
  2492   002E2C  ECEE  F005         	call	_clcd_write
  2493   002E30  EF53  F017         	goto	l650
  2494   002E34                     l4002:
  2495   002E34  BE44               	btfsc	(_long_press_S6+1)^0,7,c
  2496   002E36  EF25  F017         	goto	u3421
  2497   002E3A  5044               	movf	(_long_press_S6+1)^0,w,c
  2498   002E3C  E108               	bnz	u3420
  2499   002E3E  0443               	decf	_long_press_S6^0,w,c
  2500   002E40  A0D8               	btfss	status,0,c
  2501   002E42  EF25  F017         	goto	u3421
  2502   002E46  EF27  F017         	goto	u3420
  2503   002E4A                     u3421:
  2504   002E4A  EF4F  F017         	goto	l4014
  2505   002E4E                     u3420:
  2506   002E4E  BE44               	btfsc	(_long_press_S6+1)^0,7,c
  2507   002E50  EF35  F017         	goto	u3430
  2508   002E54  0E20               	movlw	32
  2509   002E56  5C43               	subwf	_long_press_S6^0,w,c
  2510   002E58  0E03               	movlw	3
  2511   002E5A  5844               	subwfb	(_long_press_S6+1)^0,w,c
  2512   002E5C  B0D8               	btfsc	status,0,c
  2513   002E5E  EF33  F017         	goto	u3431
  2514   002E62  EF35  F017         	goto	u3430
  2515   002E66                     u3431:
  2516   002E66  EF4F  F017         	goto	l4014
  2517   002E6A                     u3430:
  2518   002E6A                     
  2519                           ;set_time.c: 179:     {;set_time.c: 179:     {;set_time.c: 180:         long_press_S6 = 
      +                          0;;set_time.c: 180:         long_press_S6 = 0;
  2520   002E6A  0E00               	movlw	0
  2521   002E6C  6E44               	movwf	(_long_press_S6+1)^0,c
  2522   002E6E  0E00               	movlw	0
  2523   002E70  6E43               	movwf	_long_press_S6^0,c
  2524                           
  2525                           ;set_time.c: 183:         long_press_S6 = 0;;set_time.c: 183:         long_press_S6 = 0;
  2526   002E72  0E00               	movlw	0
  2527   002E74  6E44               	movwf	(_long_press_S6+1)^0,c
  2528   002E76  0E00               	movlw	0
  2529   002E78  6E43               	movwf	_long_press_S6^0,c
  2530   002E7A                     
  2531                           ;set_time.c: 184:         field_flag++;;set_time.c: 184:         field_flag++;
  2532   002E7A  4A47               	infsnz	_field_flag^0,f,c
  2533   002E7C  2A48               	incf	(_field_flag+1)^0,f,c
  2534   002E7E                     
  2535                           ;set_time.c: 185:         if( field_flag == 3 );set_time.c: 185:         if( field_flag 
      +                          == 3 )
  2536   002E7E  0E03               	movlw	3
  2537   002E80  1847               	xorwf	_field_flag^0,w,c
  2538   002E82  1048               	iorwf	(_field_flag+1)^0,w,c
  2539   002E84  A4D8               	btfss	status,2,c
  2540   002E86  EF47  F017         	goto	u3441
  2541   002E8A  EF49  F017         	goto	u3440
  2542   002E8E                     u3441:
  2543   002E8E  EF53  F017         	goto	l650
  2544   002E92                     u3440:
  2545   002E92                     
  2546                           ;set_time.c: 186:         {;set_time.c: 186:         {;set_time.c: 187:             fiel
      +                          d_flag = 0;;set_time.c: 187:             field_flag = 0;
  2547   002E92  0E00               	movlw	0
  2548   002E94  6E48               	movwf	(_field_flag+1)^0,c
  2549   002E96  0E00               	movlw	0
  2550   002E98  6E47               	movwf	_field_flag^0,c
  2551   002E9A  EF53  F017         	goto	l650
  2552   002E9E                     l4014:
  2553                           
  2554                           ;set_time.c: 191:     {;set_time.c: 191:     {;set_time.c: 192:         long_press_S6 = 
      +                          0;;set_time.c: 192:         long_press_S6 = 0;
  2555   002E9E  0E00               	movlw	0
  2556   002EA0  6E44               	movwf	(_long_press_S6+1)^0,c
  2557   002EA2  0E00               	movlw	0
  2558   002EA4  6E43               	movwf	_long_press_S6^0,c
  2559   002EA6                     l650:
  2560   002EA6  0012               	return		;funcret
  2561   002EA8                     __end_of_settime:
  2562                           	callstack 0
  2563                           
  2564 ;; *************** function _save_time_to_RTC *****************
  2565 ;; Defined at:
  2566 ;;		line 9 in file "save_time.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;		None
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  temp            1    3[COMRAM] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg, status,2, status,0, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2580 ;;      Params:         0       0       0       0       0       0       0
  2581 ;;      Locals:         1       0       0       0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0
  2583 ;;      Totals:         1       0       0       0       0       0       0
  2584 ;;Total ram usage:        1 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; Hardware stack levels required when called: 3
  2587 ;; This function calls:
  2588 ;;		_write_ds1307
  2589 ;; This function is called by:
  2590 ;;		_settime
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text3
  2595   000C9C                     __ptext3:
  2596                           	callstack 0
  2597   000C9C                     _save_time_to_RTC:
  2598                           	callstack 26
  2599   000C9C                     
  2600                           ;save_time.c: 11:     char temp = 0;
  2601   000C9C  0E00               	movlw	0
  2602   000C9E  6E04               	movwf	save_time_to_RTC@temp^0,c
  2603   000CA0                     
  2604                           ;save_time.c: 13:     temp = temp | (time[6]-48) << 4;
  2605   000CA0  3858               	swapf	(_time+6)^0,w,c
  2606   000CA2  0BF0               	andlw	240
  2607   000CA4  1004               	iorwf	save_time_to_RTC@temp^0,w,c
  2608   000CA6  6E04               	movwf	save_time_to_RTC@temp^0,c
  2609   000CA8                     
  2610                           ;save_time.c: 14:     temp = temp | (time[7]-48);
  2611   000CA8  5059               	movf	(_time+7)^0,w,c
  2612   000CAA  0FD0               	addlw	208
  2613   000CAC  1004               	iorwf	save_time_to_RTC@temp^0,w,c
  2614   000CAE  6E04               	movwf	save_time_to_RTC@temp^0,c
  2615   000CB0                     
  2616                           ;save_time.c: 15:     write_ds1307(0x00, temp);
  2617   000CB0  C004  F002         	movff	save_time_to_RTC@temp,write_ds1307@data
  2618   000CB4  0E00               	movlw	0
  2619   000CB6  EC4B  F005         	call	_write_ds1307
  2620   000CBA                     
  2621                           ;save_time.c: 16:     temp = 0;
  2622   000CBA  0E00               	movlw	0
  2623   000CBC  6E04               	movwf	save_time_to_RTC@temp^0,c
  2624   000CBE                     
  2625                           ;save_time.c: 18:     temp = temp | (time[3]-48) << 4;
  2626   000CBE  3855               	swapf	(_time+3)^0,w,c
  2627   000CC0  0BF0               	andlw	240
  2628   000CC2  1004               	iorwf	save_time_to_RTC@temp^0,w,c
  2629   000CC4  6E04               	movwf	save_time_to_RTC@temp^0,c
  2630   000CC6                     
  2631                           ;save_time.c: 19:     temp = temp | (time[4]-48);
  2632   000CC6  5056               	movf	(_time+4)^0,w,c
  2633   000CC8  0FD0               	addlw	208
  2634   000CCA  1004               	iorwf	save_time_to_RTC@temp^0,w,c
  2635   000CCC  6E04               	movwf	save_time_to_RTC@temp^0,c
  2636                           
  2637                           ;save_time.c: 20:     write_ds1307(0x01, temp);
  2638   000CCE  C004  F002         	movff	save_time_to_RTC@temp,write_ds1307@data
  2639   000CD2  0E01               	movlw	1
  2640   000CD4  EC4B  F005         	call	_write_ds1307
  2641   000CD8                     
  2642                           ;save_time.c: 21:     temp = 0;
  2643   000CD8  0E00               	movlw	0
  2644   000CDA  6E04               	movwf	save_time_to_RTC@temp^0,c
  2645   000CDC                     
  2646                           ;save_time.c: 23:     temp = temp | (time[0]-48) << 4;
  2647   000CDC  3852               	swapf	_time^0,w,c
  2648   000CDE  0BF0               	andlw	240
  2649   000CE0  1004               	iorwf	save_time_to_RTC@temp^0,w,c
  2650   000CE2  6E04               	movwf	save_time_to_RTC@temp^0,c
  2651   000CE4                     
  2652                           ;save_time.c: 24:     temp = temp | (time[1]-48);
  2653   000CE4  5053               	movf	(_time+1)^0,w,c
  2654   000CE6  0FD0               	addlw	208
  2655   000CE8  1004               	iorwf	save_time_to_RTC@temp^0,w,c
  2656   000CEA  6E04               	movwf	save_time_to_RTC@temp^0,c
  2657   000CEC                     
  2658                           ;save_time.c: 25:     write_ds1307(0x02, temp);
  2659   000CEC  C004  F002         	movff	save_time_to_RTC@temp,write_ds1307@data
  2660   000CF0  0E02               	movlw	2
  2661   000CF2  EC4B  F005         	call	_write_ds1307
  2662   000CF6  0012               	return		;funcret
  2663   000CF8                     __end_of_save_time_to_RTC:
  2664                           	callstack 0
  2665                           
  2666 ;; *************** function _setpassword *****************
  2667 ;; Defined at:
  2668 ;;		line 10 in file "setpassword.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  key             1    wreg     unsigned char 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;  key             1   45[COMRAM] unsigned char 
  2673 ;;  i               4   41[COMRAM] long 
  2674 ;;  delay           4   37[COMRAM] long 
  2675 ;;  i               4   33[COMRAM] long 
  2676 ;;  k               4   29[COMRAM] long 
  2677 ;;  sec             2   52[COMRAM] int 
  2678 ;;  j               2   54[COMRAM] int 
  2679 ;;  trail           5   20[COMRAM] unsigned char [5]
  2680 ;;  wait            4   48[COMRAM] long 
  2681 ;;  count           4   25[COMRAM] long 
  2682 ;;  i               2   56[COMRAM] int 
  2683 ;;  attempt         2   46[COMRAM] int 
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2693 ;;      Params:         0       0       0       0       0       0       0
  2694 ;;      Locals:        38       0       0       0       0       0       0
  2695 ;;      Temps:          4       0       0       0       0       0       0
  2696 ;;      Totals:        42       0       0       0       0       0       0
  2697 ;;Total ram usage:       42 bytes
  2698 ;; Hardware stack levels used: 1
  2699 ;; Hardware stack levels required when called: 4
  2700 ;; This function calls:
  2701 ;;		___awdiv
  2702 ;;		___awmod
  2703 ;;		_clcd_print
  2704 ;;		_clcd_putch
  2705 ;;		_clcd_write
  2706 ;;		_read_ext_eeprom
  2707 ;;		_read_switches
  2708 ;; This function is called by:
  2709 ;;		_main
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           	psect	text4
  2714   00249A                     __ptext4:
  2715                           	callstack 0
  2716   00249A                     _setpassword:
  2717                           	callstack 26
  2718   00249A                     
  2719                           ;setpassword.c: 10: void setpassword(char key);setpassword.c: 10: void setpassword(char 
      +                          key);setpassword.c: 11: {;setpassword.c: 11: {;setpassword.c: 13:     clcd_write(0x01, 0
      +                          );;setpassword.c: 13:     clcd_write(0x01, 0);
  2720   00249A  0E00               	movlw	0
  2721   00249C  6E01               	movwf	clcd_write@control_bit^0,c
  2722   00249E  0E01               	movlw	1
  2723   0024A0  ECEE  F005         	call	_clcd_write
  2724   0024A4                     
  2725                           ;setpassword.c: 15:     int attempt = 2;;setpassword.c: 15:     int attempt = 2;
  2726   0024A4  0E00               	movlw	0
  2727   0024A6  6E30               	movwf	(setpassword@attempt+1)^0,c
  2728   0024A8  0E02               	movlw	2
  2729   0024AA  6E2F               	movwf	setpassword@attempt^0,c
  2730   0024AC                     
  2731                           ;setpassword.c: 16:     char trail[5];;setpassword.c: 16:     char trail[5];;setpassword
      +                          .c: 17:     int i = 0;;setpassword.c: 17:     int i = 0;
  2732   0024AC  0E00               	movlw	0
  2733   0024AE  6E3A               	movwf	(setpassword@i+1)^0,c
  2734   0024B0  0E00               	movlw	0
  2735   0024B2  6E39               	movwf	setpassword@i^0,c
  2736   0024B4                     
  2737                           ;setpassword.c: 18:     long int count = 0;;setpassword.c: 18:     long int count = 0;
  2738   0024B4  0E00               	movlw	0
  2739   0024B6  6E1A               	movwf	setpassword@count^0,c
  2740   0024B8  0E00               	movlw	0
  2741   0024BA  6E1B               	movwf	(setpassword@count+1)^0,c
  2742   0024BC  0E00               	movlw	0
  2743   0024BE  6E1C               	movwf	(setpassword@count+2)^0,c
  2744   0024C0  0E00               	movlw	0
  2745   0024C2  6E1D               	movwf	(setpassword@count+3)^0,c
  2746   0024C4                     
  2747                           ;setpassword.c: 19:     long int wait = 0;;setpassword.c: 19:     long int wait = 0;
  2748   0024C4  0E00               	movlw	0
  2749   0024C6  6E31               	movwf	setpassword@wait^0,c
  2750   0024C8  0E00               	movlw	0
  2751   0024CA  6E32               	movwf	(setpassword@wait+1)^0,c
  2752   0024CC  0E00               	movlw	0
  2753   0024CE  6E33               	movwf	(setpassword@wait+2)^0,c
  2754   0024D0  0E00               	movlw	0
  2755   0024D2  6E34               	movwf	(setpassword@wait+3)^0,c
  2756   0024D4                     l3426:
  2757                           
  2758                           ;setpassword.c: 22:     {;setpassword.c: 22:     {;setpassword.c: 24:         clcd_print
      +                          ("Enter Password", (0x80 + (0)));;setpassword.c: 24:         clcd_print("Enter Password"
      +                          , (0x80 + (0)));
  2759   0024D4  0E37               	movlw	low STR_30
  2760   0024D6  6E03               	movwf	clcd_print@data^0,c
  2761   0024D8  0E2F               	movlw	high STR_30
  2762   0024DA  6E04               	movwf	(clcd_print@data+1)^0,c
  2763   0024DC  0E80               	movlw	128
  2764   0024DE  6E05               	movwf	clcd_print@addr^0,c
  2765   0024E0  ECAD  F006         	call	_clcd_print	;wreg free
  2766   0024E4                     
  2767                           ;setpassword.c: 27:         if (count++ == 10000);setpassword.c: 27:         if (count++
      +                           == 10000)
  2768   0024E4  0E01               	movlw	1
  2769   0024E6  261A               	addwf	setpassword@count^0,f,c
  2770   0024E8  0E00               	movlw	0
  2771   0024EA  221B               	addwfc	(setpassword@count+1)^0,f,c
  2772   0024EC  221C               	addwfc	(setpassword@count+2)^0,f,c
  2773   0024EE  221D               	addwfc	(setpassword@count+3)^0,f,c
  2774   0024F0  0E11               	movlw	17
  2775   0024F2  181A               	xorwf	setpassword@count^0,w,c
  2776   0024F4  E109               	bnz	u2551
  2777   0024F6  0E27               	movlw	39
  2778   0024F8  181B               	xorwf	(setpassword@count+1)^0,w,c
  2779   0024FA  101C               	iorwf	(setpassword@count+2)^0,w,c
  2780   0024FC  101D               	iorwf	(setpassword@count+3)^0,w,c
  2781   0024FE  A4D8               	btfss	status,2,c
  2782   002500  EF84  F012         	goto	u2551
  2783   002504  EF86  F012         	goto	u2550
  2784   002508                     u2551:
  2785   002508  EF8F  F012         	goto	l3434
  2786   00250C                     u2550:
  2787   00250C                     
  2788                           ;setpassword.c: 28:         {;setpassword.c: 28:         {;setpassword.c: 30:           
      +                            main_f = 0;;setpassword.c: 30:             main_f = 0;
  2789   00250C  0E00               	movlw	0
  2790   00250E  6E51               	movwf	_main_f^0,c
  2791   002510                     
  2792                           ;setpassword.c: 31:             clcd_write(0x01, 0);;setpassword.c: 31:             clcd
      +                          _write(0x01, 0);
  2793   002510  0E00               	movlw	0
  2794   002512  6E01               	movwf	clcd_write@control_bit^0,c
  2795   002514  0E01               	movlw	1
  2796   002516  ECEE  F005         	call	_clcd_write
  2797                           
  2798                           ;setpassword.c: 32:             break;;setpassword.c: 32:             break;
  2799   00251A  EFA9  F014         	goto	l702
  2800   00251E                     l3434:
  2801                           
  2802                           ;setpassword.c: 36:         key = read_switches(1);;setpassword.c: 36:         key = rea
      +                          d_switches(1);
  2803   00251E  0E01               	movlw	1
  2804   002520  EC19  F007         	call	_read_switches
  2805   002524  6E2E               	movwf	setpassword@key^0,c
  2806   002526                     
  2807                           ;setpassword.c: 39:         if (i < 4);setpassword.c: 39:         if (i < 4)
  2808   002526  BE3A               	btfsc	(setpassword@i+1)^0,7,c
  2809   002528  EFA1  F012         	goto	u2560
  2810   00252C  503A               	movf	(setpassword@i+1)^0,w,c
  2811   00252E  E107               	bnz	u2561
  2812   002530  0E04               	movlw	4
  2813   002532  5C39               	subwf	setpassword@i^0,w,c
  2814   002534  B0D8               	btfsc	status,0,c
  2815   002536  EF9F  F012         	goto	u2561
  2816   00253A  EFA1  F012         	goto	u2560
  2817   00253E                     u2561:
  2818   00253E  EF34  F013         	goto	l3468
  2819   002542                     u2560:
  2820   002542                     
  2821                           ;setpassword.c: 40:         {;setpassword.c: 40:         {;setpassword.c: 42:           
      +                            if (wait++ < 500);setpassword.c: 42:             if (wait++ < 500)
  2822   002542  C031  F011         	movff	setpassword@wait,??_setpassword
  2823   002546  C032  F012         	movff	setpassword@wait+1,??_setpassword+1
  2824   00254A  C033  F013         	movff	setpassword@wait+2,??_setpassword+2
  2825   00254E  C034  F014         	movff	setpassword@wait+3,??_setpassword+3
  2826   002552  2A31               	incf	setpassword@wait^0,f,c
  2827   002554  0E00               	movlw	0
  2828   002556  2232               	addwfc	(setpassword@wait+1)^0,f,c
  2829   002558  2233               	addwfc	(setpassword@wait+2)^0,f,c
  2830   00255A  2234               	addwfc	(setpassword@wait+3)^0,f,c
  2831   00255C  BE14               	btfsc	(??_setpassword+3)^0,7,c
  2832   00255E  EFBF  F012         	goto	u2570
  2833   002562  5014               	movf	(??_setpassword+3)^0,w,c
  2834   002564  1013               	iorwf	(??_setpassword+2)^0,w,c
  2835   002566  E109               	bnz	u2571
  2836   002568  0EF4               	movlw	244
  2837   00256A  5C11               	subwf	??_setpassword^0,w,c
  2838   00256C  0E01               	movlw	1
  2839   00256E  5812               	subwfb	(??_setpassword+1)^0,w,c
  2840   002570  B0D8               	btfsc	status,0,c
  2841   002572  EFBD  F012         	goto	u2571
  2842   002576  EFBF  F012         	goto	u2570
  2843   00257A                     u2571:
  2844   00257A  EFC7  F012         	goto	l3442
  2845   00257E                     u2570:
  2846   00257E                     
  2847                           ;setpassword.c: 43:             {;setpassword.c: 43:             {;setpassword.c: 44:   
      +                                        clcd_putch('_', (0xC0 + (i)));;setpassword.c: 44:                 clcd_put
      +                          ch('_', (0xC0 + (i)));
  2848   00257E  5039               	movf	setpassword@i^0,w,c
  2849   002580  0FC0               	addlw	192
  2850   002582  6E0F               	movwf	clcd_putch@addr^0,c
  2851   002584  0E5F               	movlw	95
  2852   002586  EC32  F005         	call	_clcd_putch
  2853                           
  2854                           ;setpassword.c: 45:             };setpassword.c: 45:             }
  2855   00258A  EFF9  F012         	goto	l3450
  2856   00258E                     l3442:
  2857   00258E  BE34               	btfsc	(setpassword@wait+3)^0,7,c
  2858   002590  EFD6  F012         	goto	u2581
  2859   002594  5034               	movf	(setpassword@wait+3)^0,w,c
  2860   002596  1033               	iorwf	(setpassword@wait+2)^0,w,c
  2861   002598  E10B               	bnz	u2580
  2862   00259A  0EF5               	movlw	245
  2863   00259C  5C31               	subwf	setpassword@wait^0,w,c
  2864   00259E  0E01               	movlw	1
  2865   0025A0  5832               	subwfb	(setpassword@wait+1)^0,w,c
  2866   0025A2  A0D8               	btfss	status,0,c
  2867   0025A4  EFD6  F012         	goto	u2581
  2868   0025A8  EFD8  F012         	goto	u2580
  2869   0025AC                     u2581:
  2870   0025AC  EFF1  F012         	goto	l3448
  2871   0025B0                     u2580:
  2872   0025B0  BE34               	btfsc	(setpassword@wait+3)^0,7,c
  2873   0025B2  EFE9  F012         	goto	u2590
  2874   0025B6  5034               	movf	(setpassword@wait+3)^0,w,c
  2875   0025B8  1033               	iorwf	(setpassword@wait+2)^0,w,c
  2876   0025BA  E109               	bnz	u2591
  2877   0025BC  0EE8               	movlw	232
  2878   0025BE  5C31               	subwf	setpassword@wait^0,w,c
  2879   0025C0  0E03               	movlw	3
  2880   0025C2  5832               	subwfb	(setpassword@wait+1)^0,w,c
  2881   0025C4  B0D8               	btfsc	status,0,c
  2882   0025C6  EFE7  F012         	goto	u2591
  2883   0025CA  EFE9  F012         	goto	u2590
  2884   0025CE                     u2591:
  2885   0025CE  EFF1  F012         	goto	l3448
  2886   0025D2                     u2590:
  2887   0025D2                     
  2888                           ;setpassword.c: 47:             {;setpassword.c: 47:             {;setpassword.c: 48:   
      +                                        clcd_putch(' ', (0xC0 + (i)));;setpassword.c: 48:                 clcd_put
      +                          ch(' ', (0xC0 + (i)));
  2889   0025D2  5039               	movf	setpassword@i^0,w,c
  2890   0025D4  0FC0               	addlw	192
  2891   0025D6  6E0F               	movwf	clcd_putch@addr^0,c
  2892   0025D8  0E20               	movlw	32
  2893   0025DA  EC32  F005         	call	_clcd_putch
  2894                           
  2895                           ;setpassword.c: 49:             };setpassword.c: 49:             }
  2896   0025DE  EFF9  F012         	goto	l3450
  2897   0025E2                     l3448:
  2898                           
  2899                           ;setpassword.c: 51:             {;setpassword.c: 51:             {;setpassword.c: 52:   
      +                                        wait = 0;;setpassword.c: 52:                 wait = 0;
  2900   0025E2  0E00               	movlw	0
  2901   0025E4  6E31               	movwf	setpassword@wait^0,c
  2902   0025E6  0E00               	movlw	0
  2903   0025E8  6E32               	movwf	(setpassword@wait+1)^0,c
  2904   0025EA  0E00               	movlw	0
  2905   0025EC  6E33               	movwf	(setpassword@wait+2)^0,c
  2906   0025EE  0E00               	movlw	0
  2907   0025F0  6E34               	movwf	(setpassword@wait+3)^0,c
  2908   0025F2                     l3450:
  2909                           
  2910                           ;setpassword.c: 56:             if (key == 5);setpassword.c: 56:             if (key == 
      +                          5)
  2911   0025F2  0E05               	movlw	5
  2912   0025F4  182E               	xorwf	setpassword@key^0,w,c
  2913   0025F6  A4D8               	btfss	status,2,c
  2914   0025F8  EF00  F013         	goto	u2601
  2915   0025FC  EF02  F013         	goto	u2600
  2916   002600                     u2601:
  2917   002600  EF14  F013         	goto	l3458
  2918   002604                     u2600:
  2919   002604                     
  2920                           ;setpassword.c: 57:             {;setpassword.c: 57:             {;setpassword.c: 58:   
      +                                        clcd_putch('*', (0xC0 + (i)));;setpassword.c: 58:                 clcd_put
      +                          ch('*', (0xC0 + (i)));
  2921   002604  5039               	movf	setpassword@i^0,w,c
  2922   002606  0FC0               	addlw	192
  2923   002608  6E0F               	movwf	clcd_putch@addr^0,c
  2924   00260A  0E2A               	movlw	42
  2925   00260C  EC32  F005         	call	_clcd_putch
  2926   002610                     
  2927                           ;setpassword.c: 59:                 trail[i++] = '0';;setpassword.c: 59:                
      +                           trail[i++] = '0';
  2928   002610  0E15               	movlw	low setpassword@trail
  2929   002612  2439               	addwf	setpassword@i^0,w,c
  2930   002614  6ED9               	movwf	fsr2l,c
  2931   002616  0E00               	movlw	high setpassword@trail
  2932   002618  203A               	addwfc	(setpassword@i+1)^0,w,c
  2933   00261A  6EDA               	movwf	fsr2h,c
  2934   00261C  0E30               	movlw	48
  2935   00261E  6EDF               	movwf	indf2,c
  2936   002620                     l3456:
  2937   002620  4A39               	infsnz	setpassword@i^0,f,c
  2938   002622  2A3A               	incf	(setpassword@i+1)^0,f,c
  2939                           
  2940                           ;setpassword.c: 60:             };setpassword.c: 60:             }
  2941   002624  EF2D  F013         	goto	l3466
  2942   002628                     l3458:
  2943   002628  0E06               	movlw	6
  2944   00262A  182E               	xorwf	setpassword@key^0,w,c
  2945   00262C  A4D8               	btfss	status,2,c
  2946   00262E  EF1B  F013         	goto	u2611
  2947   002632  EF1D  F013         	goto	u2610
  2948   002636                     u2611:
  2949   002636  EF2D  F013         	goto	l3466
  2950   00263A                     u2610:
  2951   00263A                     
  2952                           ;setpassword.c: 62:             {;setpassword.c: 62:             {;setpassword.c: 63:   
      +                                        clcd_putch('*', (0xC0 + (i)));;setpassword.c: 63:                 clcd_put
      +                          ch('*', (0xC0 + (i)));
  2953   00263A  5039               	movf	setpassword@i^0,w,c
  2954   00263C  0FC0               	addlw	192
  2955   00263E  6E0F               	movwf	clcd_putch@addr^0,c
  2956   002640  0E2A               	movlw	42
  2957   002642  EC32  F005         	call	_clcd_putch
  2958   002646                     
  2959                           ;setpassword.c: 64:                 trail[i++] = '1';;setpassword.c: 64:                
      +                           trail[i++] = '1';
  2960   002646  0E15               	movlw	low setpassword@trail
  2961   002648  2439               	addwf	setpassword@i^0,w,c
  2962   00264A  6ED9               	movwf	fsr2l,c
  2963   00264C  0E00               	movlw	high setpassword@trail
  2964   00264E  203A               	addwfc	(setpassword@i+1)^0,w,c
  2965   002650  6EDA               	movwf	fsr2h,c
  2966   002652  0E31               	movlw	49
  2967   002654  6EDF               	movwf	indf2,c
  2968   002656  EF10  F013         	goto	l3456
  2969   00265A                     l3466:
  2970                           
  2971                           ;setpassword.c: 66:             trail[i] = '\0';;setpassword.c: 66:             trail[i]
      +                           = '\0';
  2972   00265A  0E15               	movlw	low setpassword@trail
  2973   00265C  2439               	addwf	setpassword@i^0,w,c
  2974   00265E  6ED9               	movwf	fsr2l,c
  2975   002660  0E00               	movlw	high setpassword@trail
  2976   002662  203A               	addwfc	(setpassword@i+1)^0,w,c
  2977   002664  6EDA               	movwf	fsr2h,c
  2978   002666  6ADF               	clrf	indf2,c
  2979   002668                     l3468:
  2980                           
  2981                           ;setpassword.c: 70:         int j;;setpassword.c: 70:         int j;;setpassword.c: 71: 
      +                                  for (j = 0; j < 4; j++);setpassword.c: 71:         for (j = 0; j < 4; j++)
  2982   002668  0E00               	movlw	0
  2983   00266A  6E38               	movwf	(setpassword@j+1)^0,c
  2984   00266C  0E00               	movlw	0
  2985   00266E  6E37               	movwf	setpassword@j^0,c
  2986   002670                     l3474:
  2987                           
  2988                           ;setpassword.c: 72:         {;setpassword.c: 72:         {;setpassword.c: 73:           
      +                            if (trail[j] != read_ext_eeprom(j));setpassword.c: 73:             if (trail[j] != rea
      +                          d_ext_eeprom(j))
  2989   002670  0E15               	movlw	low setpassword@trail
  2990   002672  2437               	addwf	setpassword@j^0,w,c
  2991   002674  6ED9               	movwf	fsr2l,c
  2992   002676  0E00               	movlw	high setpassword@trail
  2993   002678  2038               	addwfc	(setpassword@j+1)^0,w,c
  2994   00267A  6EDA               	movwf	fsr2h,c
  2995   00267C  5037               	movf	setpassword@j^0,w,c
  2996   00267E  EC8E  F005         	call	_read_ext_eeprom
  2997   002682  6E12               	movwf	(??_setpassword+1)^0,c
  2998   002684  50DE               	movf	postinc2,w,c
  2999   002686  1812               	xorwf	(??_setpassword+1)^0,w,c
  3000   002688  B4D8               	btfsc	status,2,c
  3001   00268A  EF49  F013         	goto	u2621
  3002   00268E  EF4B  F013         	goto	u2620
  3003   002692                     u2621:
  3004   002692  EF4D  F013         	goto	l3478
  3005   002696                     u2620:
  3006   002696  EF5D  F013         	goto	l3482
  3007   00269A                     l3478:
  3008                           
  3009                           ;setpassword.c: 75:         };setpassword.c: 75:         }
  3010   00269A  4A37               	infsnz	setpassword@j^0,f,c
  3011   00269C  2A38               	incf	(setpassword@j+1)^0,f,c
  3012   00269E  BE38               	btfsc	(setpassword@j+1)^0,7,c
  3013   0026A0  EF5B  F013         	goto	u2631
  3014   0026A4  5038               	movf	(setpassword@j+1)^0,w,c
  3015   0026A6  E109               	bnz	u2630
  3016   0026A8  0E04               	movlw	4
  3017   0026AA  5C37               	subwf	setpassword@j^0,w,c
  3018   0026AC  A0D8               	btfss	status,0,c
  3019   0026AE  EF5B  F013         	goto	u2631
  3020   0026B2  EF5D  F013         	goto	u2630
  3021   0026B6                     u2631:
  3022   0026B6  EF38  F013         	goto	l3474
  3023   0026BA                     u2630:
  3024   0026BA                     l3482:
  3025                           
  3026                           ;setpassword.c: 78:         if (j == 4);setpassword.c: 78:         if (j == 4)
  3027   0026BA  0E04               	movlw	4
  3028   0026BC  1837               	xorwf	setpassword@j^0,w,c
  3029   0026BE  1038               	iorwf	(setpassword@j+1)^0,w,c
  3030   0026C0  A4D8               	btfss	status,2,c
  3031   0026C2  EF65  F013         	goto	u2641
  3032   0026C6  EF67  F013         	goto	u2640
  3033   0026CA                     u2641:
  3034   0026CA  EF96  F013         	goto	l3496
  3035   0026CE                     u2640:
  3036   0026CE                     
  3037                           ;setpassword.c: 79:         {;setpassword.c: 79:         {;setpassword.c: 80:           
      +                            clcd_write(0x01, 0);;setpassword.c: 80:             clcd_write(0x01, 0);
  3038   0026CE  0E00               	movlw	0
  3039   0026D0  6E01               	movwf	clcd_write@control_bit^0,c
  3040   0026D2  0E01               	movlw	1
  3041   0026D4  ECEE  F005         	call	_clcd_write
  3042   0026D8                     
  3043                           ;setpassword.c: 81:             clcd_print("Successful", (0x80 + (0)));;setpassword.c: 8
      +                          1:             clcd_print("Successful", (0x80 + (0)));
  3044   0026D8  0E8C               	movlw	low STR_31
  3045   0026DA  6E03               	movwf	clcd_print@data^0,c
  3046   0026DC  0E2F               	movlw	high STR_31
  3047   0026DE  6E04               	movwf	(clcd_print@data+1)^0,c
  3048   0026E0  0E80               	movlw	128
  3049   0026E2  6E05               	movwf	clcd_print@addr^0,c
  3050   0026E4  ECAD  F006         	call	_clcd_print	;wreg free
  3051   0026E8                     
  3052                           ;setpassword.c: 82:             for (long int k = 900000; k--;);;setpassword.c: 82:     
      +                                  for (long int k = 900000; k--;);
  3053   0026E8  0EA0               	movlw	160
  3054   0026EA  6E1E               	movwf	setpassword@k^0,c
  3055   0026EC  0EBB               	movlw	187
  3056   0026EE  6E1F               	movwf	(setpassword@k+1)^0,c
  3057   0026F0  0E0D               	movlw	13
  3058   0026F2  6E20               	movwf	(setpassword@k+2)^0,c
  3059   0026F4  0E00               	movlw	0
  3060   0026F6  6E21               	movwf	(setpassword@k+3)^0,c
  3061   0026F8                     l3490:
  3062   0026F8  0EFF               	movlw	255
  3063   0026FA  261E               	addwf	setpassword@k^0,f,c
  3064   0026FC  0EFF               	movlw	255
  3065   0026FE  221F               	addwfc	(setpassword@k+1)^0,f,c
  3066   002700  0EFF               	movlw	255
  3067   002702  2220               	addwfc	(setpassword@k+2)^0,f,c
  3068   002704  0EFF               	movlw	255
  3069   002706  2221               	addwfc	(setpassword@k+3)^0,f,c
  3070   002708  281E               	incf	setpassword@k^0,w,c
  3071   00270A  E10A               	bnz	u2651
  3072   00270C  281F               	incf	(setpassword@k+1)^0,w,c
  3073   00270E  E108               	bnz	u2651
  3074   002710  2820               	incf	(setpassword@k+2)^0,w,c
  3075   002712  E106               	bnz	u2651
  3076   002714  2821               	incf	(setpassword@k+3)^0,w,c
  3077   002716  A4D8               	btfss	status,2,c
  3078   002718  EF90  F013         	goto	u2651
  3079   00271C  EF92  F013         	goto	u2650
  3080   002720                     u2651:
  3081   002720  EF7C  F013         	goto	l3490
  3082   002724                     u2650:
  3083   002724                     
  3084                           ;setpassword.c: 84:             main_f = 2;;setpassword.c: 84:             main_f = 2;
  3085   002724  0E02               	movlw	2
  3086   002726  6E51               	movwf	_main_f^0,c
  3087                           
  3088                           ;setpassword.c: 85:             break;;setpassword.c: 85:             break;
  3089   002728  EFA9  F014         	goto	l702
  3090   00272C                     l3496:
  3091   00272C  BE3A               	btfsc	(setpassword@i+1)^0,7,c
  3092   00272E  EFA2  F013         	goto	u2661
  3093   002732  503A               	movf	(setpassword@i+1)^0,w,c
  3094   002734  E109               	bnz	u2660
  3095   002736  0E04               	movlw	4
  3096   002738  5C39               	subwf	setpassword@i^0,w,c
  3097   00273A  A0D8               	btfss	status,0,c
  3098   00273C  EFA2  F013         	goto	u2661
  3099   002740  EFA4  F013         	goto	u2660
  3100   002744                     u2661:
  3101   002744  EF13  F014         	goto	l3520
  3102   002748                     u2660:
  3103   002748                     
  3104                           ;setpassword.c: 89:         {;setpassword.c: 89:         {;setpassword.c: 90:           
      +                            clcd_write(0x01, 0);;setpassword.c: 90:             clcd_write(0x01, 0);
  3105   002748  0E00               	movlw	0
  3106   00274A  6E01               	movwf	clcd_write@control_bit^0,c
  3107   00274C  0E01               	movlw	1
  3108   00274E  ECEE  F005         	call	_clcd_write
  3109   002752                     
  3110                           ;setpassword.c: 91:             clcd_print("Wrong password", (0x80 + (0)));;setpassword.
      +                          c: 91:             clcd_print("Wrong password", (0x80 + (0)));
  3111   002752  0E46               	movlw	low STR_32
  3112   002754  6E03               	movwf	clcd_print@data^0,c
  3113   002756  0E2F               	movlw	high STR_32
  3114   002758  6E04               	movwf	(clcd_print@data+1)^0,c
  3115   00275A  0E80               	movlw	128
  3116   00275C  6E05               	movwf	clcd_print@addr^0,c
  3117   00275E  ECAD  F006         	call	_clcd_print	;wreg free
  3118   002762                     
  3119                           ;setpassword.c: 92:             clcd_putch('0' + (attempt % 10), (0xC0 + (0)));;setpassw
      +                          ord.c: 92:             clcd_putch('0' + (attempt % 10), (0xC0 + (0)));
  3120   002762  0EC0               	movlw	192
  3121   002764  6E0F               	movwf	clcd_putch@addr^0,c
  3122   002766  C02F  F009         	movff	setpassword@attempt,___awmod@dividend
  3123   00276A  C030  F00A         	movff	setpassword@attempt+1,___awmod@dividend+1
  3124   00276E  0E00               	movlw	0
  3125   002770  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3126   002772  0E0A               	movlw	10
  3127   002774  6E0B               	movwf	___awmod@divisor^0,c
  3128   002776  ECE4  F007         	call	___awmod	;wreg free
  3129   00277A  5009               	movf	?___awmod^0,w,c
  3130   00277C  0F30               	addlw	48
  3131   00277E  EC32  F005         	call	_clcd_putch
  3132   002782                     
  3133                           ;setpassword.c: 93:             clcd_print("Attempts Left", (0xC0 + (3)));;setpassword.c
      +                          : 93:             clcd_print("Attempts Left", (0xC0 + (3)));
  3134   002782  0E64               	movlw	low STR_33
  3135   002784  6E03               	movwf	clcd_print@data^0,c
  3136   002786  0E2F               	movlw	high STR_33
  3137   002788  6E04               	movwf	(clcd_print@data+1)^0,c
  3138   00278A  0EC3               	movlw	195
  3139   00278C  6E05               	movwf	clcd_print@addr^0,c
  3140   00278E  ECAD  F006         	call	_clcd_print	;wreg free
  3141   002792                     
  3142                           ;setpassword.c: 94:             for (long int i = 50000; i--;);;setpassword.c: 94:      
      +                                 for (long int i = 50000; i--;);
  3143   002792  0E50               	movlw	80
  3144   002794  6E22               	movwf	setpassword@i_523^0,c
  3145   002796  0EC3               	movlw	195
  3146   002798  6E23               	movwf	(setpassword@i_523+1)^0,c
  3147   00279A  0E00               	movlw	0
  3148   00279C  6E24               	movwf	(setpassword@i_523+2)^0,c
  3149   00279E  0E00               	movlw	0
  3150   0027A0  6E25               	movwf	(setpassword@i_523+3)^0,c
  3151   0027A2                     l3508:
  3152   0027A2  0EFF               	movlw	255
  3153   0027A4  2622               	addwf	setpassword@i_523^0,f,c
  3154   0027A6  0EFF               	movlw	255
  3155   0027A8  2223               	addwfc	(setpassword@i_523+1)^0,f,c
  3156   0027AA  0EFF               	movlw	255
  3157   0027AC  2224               	addwfc	(setpassword@i_523+2)^0,f,c
  3158   0027AE  0EFF               	movlw	255
  3159   0027B0  2225               	addwfc	(setpassword@i_523+3)^0,f,c
  3160   0027B2  2822               	incf	setpassword@i_523^0,w,c
  3161   0027B4  E10A               	bnz	u2671
  3162   0027B6  2823               	incf	(setpassword@i_523+1)^0,w,c
  3163   0027B8  E108               	bnz	u2671
  3164   0027BA  2824               	incf	(setpassword@i_523+2)^0,w,c
  3165   0027BC  E106               	bnz	u2671
  3166   0027BE  2825               	incf	(setpassword@i_523+3)^0,w,c
  3167   0027C0  A4D8               	btfss	status,2,c
  3168   0027C2  EFE5  F013         	goto	u2671
  3169   0027C6  EFE7  F013         	goto	u2670
  3170   0027CA                     u2671:
  3171   0027CA  EFD1  F013         	goto	l3508
  3172   0027CE                     u2670:
  3173   0027CE                     
  3174                           ;setpassword.c: 95:             i = 0;;setpassword.c: 95:             i = 0;
  3175   0027CE  0E00               	movlw	0
  3176   0027D0  6E3A               	movwf	(setpassword@i+1)^0,c
  3177   0027D2  0E00               	movlw	0
  3178   0027D4  6E39               	movwf	setpassword@i^0,c
  3179   0027D6                     
  3180                           ;setpassword.c: 96:             attempt--;;setpassword.c: 96:             attempt--;
  3181   0027D6  062F               	decf	setpassword@attempt^0,f,c
  3182   0027D8  A0D8               	btfss	status,0,c
  3183   0027DA  0630               	decf	(setpassword@attempt+1)^0,f,c
  3184   0027DC                     
  3185                           ;setpassword.c: 99:             for (long int delay = 80000; delay--;);;setpassword.c: 9
      +                          9:             for (long int delay = 80000; delay--;);
  3186   0027DC  0E80               	movlw	128
  3187   0027DE  6E26               	movwf	setpassword@delay^0,c
  3188   0027E0  0E38               	movlw	56
  3189   0027E2  6E27               	movwf	(setpassword@delay+1)^0,c
  3190   0027E4  0E01               	movlw	1
  3191   0027E6  6E28               	movwf	(setpassword@delay+2)^0,c
  3192   0027E8  0E00               	movlw	0
  3193   0027EA  6E29               	movwf	(setpassword@delay+3)^0,c
  3194   0027EC                     l3516:
  3195   0027EC  0EFF               	movlw	255
  3196   0027EE  2626               	addwf	setpassword@delay^0,f,c
  3197   0027F0  0EFF               	movlw	255
  3198   0027F2  2227               	addwfc	(setpassword@delay+1)^0,f,c
  3199   0027F4  0EFF               	movlw	255
  3200   0027F6  2228               	addwfc	(setpassword@delay+2)^0,f,c
  3201   0027F8  0EFF               	movlw	255
  3202   0027FA  2229               	addwfc	(setpassword@delay+3)^0,f,c
  3203   0027FC  2826               	incf	setpassword@delay^0,w,c
  3204   0027FE  E10A               	bnz	u2681
  3205   002800  2827               	incf	(setpassword@delay+1)^0,w,c
  3206   002802  E108               	bnz	u2681
  3207   002804  2828               	incf	(setpassword@delay+2)^0,w,c
  3208   002806  E106               	bnz	u2681
  3209   002808  2829               	incf	(setpassword@delay+3)^0,w,c
  3210   00280A  A4D8               	btfss	status,2,c
  3211   00280C  EF0A  F014         	goto	u2681
  3212   002810  EF0C  F014         	goto	u2680
  3213   002814                     u2681:
  3214   002814  EFF6  F013         	goto	l3516
  3215   002818                     u2680:
  3216   002818                     
  3217                           ;setpassword.c: 101:             clcd_write(0x01, 0);;setpassword.c: 101:             cl
      +                          cd_write(0x01, 0);
  3218   002818  0E00               	movlw	0
  3219   00281A  6E01               	movwf	clcd_write@control_bit^0,c
  3220   00281C  0E01               	movlw	1
  3221   00281E  ECEE  F005         	call	_clcd_write
  3222                           
  3223                           ;setpassword.c: 102:         };setpassword.c: 102:         }
  3224   002822  EF6A  F012         	goto	l3426
  3225   002826                     l3520:
  3226   002826  282F               	incf	setpassword@attempt^0,w,c
  3227   002828  E106               	bnz	u2691
  3228   00282A  2830               	incf	(setpassword@attempt+1)^0,w,c
  3229   00282C  A4D8               	btfss	status,2,c
  3230   00282E  EF1B  F014         	goto	u2691
  3231   002832  EF1D  F014         	goto	u2690
  3232   002836                     u2691:
  3233   002836  EFA7  F014         	goto	l685
  3234   00283A                     u2690:
  3235   00283A                     
  3236                           ;setpassword.c: 105:         {;setpassword.c: 105:         {;setpassword.c: 106:        
      +                               clcd_write(0x01, 0);;setpassword.c: 106:             clcd_write(0x01, 0);
  3237   00283A  0E00               	movlw	0
  3238   00283C  6E01               	movwf	clcd_write@control_bit^0,c
  3239   00283E  0E01               	movlw	1
  3240   002840  ECEE  F005         	call	_clcd_write
  3241   002844                     
  3242                           ;setpassword.c: 107:             int sec = 180;;setpassword.c: 107:             int sec 
      +                          = 180;
  3243   002844  0E00               	movlw	0
  3244   002846  6E36               	movwf	(setpassword@sec+1)^0,c
  3245   002848  0EB4               	movlw	180
  3246   00284A  6E35               	movwf	setpassword@sec^0,c
  3247                           
  3248                           ;setpassword.c: 108:             while (sec != 0);setpassword.c: 108:             while 
      +                          (sec != 0)
  3249   00284C  EF93  F014         	goto	l3542
  3250   002850                     l3526:
  3251                           
  3252                           ;setpassword.c: 109:             {;setpassword.c: 109:             {;setpassword.c: 110:
      +                                           clcd_print("blocked", (0x80 + (0)));;setpassword.c: 110:               
      +                            clcd_print("blocked", (0x80 + (0)));
  3253   002850  0ECE               	movlw	low STR_34
  3254   002852  6E03               	movwf	clcd_print@data^0,c
  3255   002854  0E2F               	movlw	high STR_34
  3256   002856  6E04               	movwf	(clcd_print@data+1)^0,c
  3257   002858  0E80               	movlw	128
  3258   00285A  6E05               	movwf	clcd_print@addr^0,c
  3259   00285C  ECAD  F006         	call	_clcd_print	;wreg free
  3260   002860                     
  3261                           ;setpassword.c: 111:                 clcd_putch((sec / 100) + '0', (0xC0 + (1)));;setpas
      +                          sword.c: 111:                 clcd_putch((sec / 100) + '0', (0xC0 + (1)));
  3262   002860  0EC1               	movlw	193
  3263   002862  6E0F               	movwf	clcd_putch@addr^0,c
  3264   002864  C035  F001         	movff	setpassword@sec,___awdiv@dividend
  3265   002868  C036  F002         	movff	setpassword@sec+1,___awdiv@dividend+1
  3266   00286C  0E00               	movlw	0
  3267   00286E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3268   002870  0E64               	movlw	100
  3269   002872  6E03               	movwf	___awdiv@divisor^0,c
  3270   002874  EC95  F008         	call	___awdiv	;wreg free
  3271   002878  5001               	movf	?___awdiv^0,w,c
  3272   00287A  0F30               	addlw	48
  3273   00287C  EC32  F005         	call	_clcd_putch
  3274   002880                     
  3275                           ;setpassword.c: 112:                 clcd_putch(((sec / 10) % 10) + '0', (0xC0 + (2)));;
      +                          setpassword.c: 112:                 clcd_putch(((sec / 10) % 10) + '0', (0xC0 + (2)));
  3276   002880  0EC2               	movlw	194
  3277   002882  6E0F               	movwf	clcd_putch@addr^0,c
  3278   002884  0E00               	movlw	0
  3279   002886  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3280   002888  0E0A               	movlw	10
  3281   00288A  6E03               	movwf	___awdiv@divisor^0,c
  3282   00288C  C035  F001         	movff	setpassword@sec,___awdiv@dividend
  3283   002890  C036  F002         	movff	setpassword@sec+1,___awdiv@dividend+1
  3284   002894  EC95  F008         	call	___awdiv	;wreg free
  3285   002898  C001  F009         	movff	?___awdiv,___awmod@dividend
  3286   00289C  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  3287   0028A0  0E00               	movlw	0
  3288   0028A2  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3289   0028A4  0E0A               	movlw	10
  3290   0028A6  6E0B               	movwf	___awmod@divisor^0,c
  3291   0028A8  ECE4  F007         	call	___awmod	;wreg free
  3292   0028AC  5009               	movf	?___awmod^0,w,c
  3293   0028AE  0F30               	addlw	48
  3294   0028B0  EC32  F005         	call	_clcd_putch
  3295   0028B4                     
  3296                           ;setpassword.c: 113:                 clcd_putch(sec % 10 + '0', (0xC0 + (3)));;setpasswo
      +                          rd.c: 113:                 clcd_putch(sec % 10 + '0', (0xC0 + (3)));
  3297   0028B4  0EC3               	movlw	195
  3298   0028B6  6E0F               	movwf	clcd_putch@addr^0,c
  3299   0028B8  C035  F009         	movff	setpassword@sec,___awmod@dividend
  3300   0028BC  C036  F00A         	movff	setpassword@sec+1,___awmod@dividend+1
  3301   0028C0  0E00               	movlw	0
  3302   0028C2  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3303   0028C4  0E0A               	movlw	10
  3304   0028C6  6E0B               	movwf	___awmod@divisor^0,c
  3305   0028C8  ECE4  F007         	call	___awmod	;wreg free
  3306   0028CC  5009               	movf	?___awmod^0,w,c
  3307   0028CE  0F30               	addlw	48
  3308   0028D0  EC32  F005         	call	_clcd_putch
  3309   0028D4                     
  3310                           ;setpassword.c: 114:                 clcd_print("sec left", (0xC0 + (6)));;setpassword.c
      +                          : 114:                 clcd_print("sec left", (0xC0 + (6)));
  3311   0028D4  0EAB               	movlw	low STR_35
  3312   0028D6  6E03               	movwf	clcd_print@data^0,c
  3313   0028D8  0E2F               	movlw	high STR_35
  3314   0028DA  6E04               	movwf	(clcd_print@data+1)^0,c
  3315   0028DC  0EC6               	movlw	198
  3316   0028DE  6E05               	movwf	clcd_print@addr^0,c
  3317   0028E0  ECAD  F006         	call	_clcd_print	;wreg free
  3318   0028E4                     
  3319                           ;setpassword.c: 115:                 sec--;;setpassword.c: 115:                 sec--;
  3320   0028E4  0635               	decf	setpassword@sec^0,f,c
  3321   0028E6  A0D8               	btfss	status,0,c
  3322   0028E8  0636               	decf	(setpassword@sec+1)^0,f,c
  3323   0028EA                     
  3324                           ;setpassword.c: 116:                 for (long int i = 500000; i--;);;setpassword.c: 116
      +                          :                 for (long int i = 500000; i--;);
  3325   0028EA  0E20               	movlw	32
  3326   0028EC  6E2A               	movwf	setpassword@i_528^0,c
  3327   0028EE  0EA1               	movlw	161
  3328   0028F0  6E2B               	movwf	(setpassword@i_528+1)^0,c
  3329   0028F2  0E07               	movlw	7
  3330   0028F4  6E2C               	movwf	(setpassword@i_528+2)^0,c
  3331   0028F6  0E00               	movlw	0
  3332   0028F8  6E2D               	movwf	(setpassword@i_528+3)^0,c
  3333   0028FA                     l3540:
  3334   0028FA  0EFF               	movlw	255
  3335   0028FC  262A               	addwf	setpassword@i_528^0,f,c
  3336   0028FE  0EFF               	movlw	255
  3337   002900  222B               	addwfc	(setpassword@i_528+1)^0,f,c
  3338   002902  0EFF               	movlw	255
  3339   002904  222C               	addwfc	(setpassword@i_528+2)^0,f,c
  3340   002906  0EFF               	movlw	255
  3341   002908  222D               	addwfc	(setpassword@i_528+3)^0,f,c
  3342   00290A  282A               	incf	setpassword@i_528^0,w,c
  3343   00290C  E10A               	bnz	u2701
  3344   00290E  282B               	incf	(setpassword@i_528+1)^0,w,c
  3345   002910  E108               	bnz	u2701
  3346   002912  282C               	incf	(setpassword@i_528+2)^0,w,c
  3347   002914  E106               	bnz	u2701
  3348   002916  282D               	incf	(setpassword@i_528+3)^0,w,c
  3349   002918  A4D8               	btfss	status,2,c
  3350   00291A  EF91  F014         	goto	u2701
  3351   00291E  EF93  F014         	goto	u2700
  3352   002922                     u2701:
  3353   002922  EF7D  F014         	goto	l3540
  3354   002926                     u2700:
  3355   002926                     l3542:
  3356                           
  3357                           ;setpassword.c: 108:             while (sec != 0);setpassword.c: 108:             while 
      +                          (sec != 0)
  3358   002926  5035               	movf	setpassword@sec^0,w,c
  3359   002928  1036               	iorwf	(setpassword@sec+1)^0,w,c
  3360   00292A  A4D8               	btfss	status,2,c
  3361   00292C  EF9A  F014         	goto	u2711
  3362   002930  EF9C  F014         	goto	u2710
  3363   002934                     u2711:
  3364   002934  EF28  F014         	goto	l3526
  3365   002938                     u2710:
  3366   002938                     
  3367                           ;setpassword.c: 118:             attempt = 2;;setpassword.c: 118:             attempt = 
      +                          2;
  3368   002938  0E00               	movlw	0
  3369   00293A  6E30               	movwf	(setpassword@attempt+1)^0,c
  3370   00293C  0E02               	movlw	2
  3371   00293E  6E2F               	movwf	setpassword@attempt^0,c
  3372   002940                     
  3373                           ;setpassword.c: 119:             clcd_write(0x01, 0);;setpassword.c: 119:             cl
      +                          cd_write(0x01, 0);
  3374   002940  0E00               	movlw	0
  3375   002942  6E01               	movwf	clcd_write@control_bit^0,c
  3376   002944  0E01               	movlw	1
  3377   002946  ECEE  F005         	call	_clcd_write
  3378   00294A  EF6A  F012         	goto	l3426
  3379   00294E                     l685:
  3380   00294E  EF6A  F012         	goto	l3426
  3381   002952                     l702:
  3382   002952  0012               	return		;funcret
  3383   002954                     __end_of_setpassword:
  3384                           	callstack 0
  3385                           
  3386 ;; *************** function ___awmod *****************
  3387 ;; Defined at:
  3388 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  dividend        2    8[COMRAM] int 
  3391 ;;  divisor         2   10[COMRAM] int 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  sign            1   13[COMRAM] unsigned char 
  3394 ;;  counter         1   12[COMRAM] unsigned char 
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  2    8[COMRAM] int 
  3397 ;; Registers used:
  3398 ;;		wreg, status,2, status,0
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3404 ;;      Params:         4       0       0       0       0       0       0
  3405 ;;      Locals:         2       0       0       0       0       0       0
  3406 ;;      Temps:          0       0       0       0       0       0       0
  3407 ;;      Totals:         6       0       0       0       0       0       0
  3408 ;;Total ram usage:        6 bytes
  3409 ;; Hardware stack levels used: 1
  3410 ;; This function calls:
  3411 ;;		Nothing
  3412 ;; This function is called by:
  3413 ;;		_settime
  3414 ;;		_setpassword
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text5
  3419   000FC8                     __ptext5:
  3420                           	callstack 0
  3421   000FC8                     ___awmod:
  3422                           	callstack 29
  3423   000FC8  0E00               	movlw	0
  3424   000FCA  6E0E               	movwf	___awmod@sign^0,c
  3425   000FCC  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  3426   000FCE  EFED  F007         	goto	u2390
  3427   000FD2  EFEB  F007         	goto	u2391
  3428   000FD6                     u2391:
  3429   000FD6  EFF3  F007         	goto	l3322
  3430   000FDA                     u2390:
  3431   000FDA  6C09               	negf	___awmod@dividend^0,c
  3432   000FDC  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  3433   000FDE  B0D8               	btfsc	status,0,c
  3434   000FE0  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  3435   000FE2  0E01               	movlw	1
  3436   000FE4  6E0E               	movwf	___awmod@sign^0,c
  3437   000FE6                     l3322:
  3438   000FE6  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  3439   000FE8  EFFA  F007         	goto	u2400
  3440   000FEC  EFF8  F007         	goto	u2401
  3441   000FF0                     u2401:
  3442   000FF0  EFFE  F007         	goto	l3326
  3443   000FF4                     u2400:
  3444   000FF4  6C0B               	negf	___awmod@divisor^0,c
  3445   000FF6  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  3446   000FF8  B0D8               	btfsc	status,0,c
  3447   000FFA  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  3448   000FFC                     l3326:
  3449   000FFC  500B               	movf	___awmod@divisor^0,w,c
  3450   000FFE  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  3451   001000  B4D8               	btfsc	status,2,c
  3452   001002  EF05  F008         	goto	u2411
  3453   001006  EF07  F008         	goto	u2410
  3454   00100A                     u2411:
  3455   00100A  EF2B  F008         	goto	l3342
  3456   00100E                     u2410:
  3457   00100E  0E01               	movlw	1
  3458   001010  6E0D               	movwf	___awmod@counter^0,c
  3459   001012  EF0F  F008         	goto	l3332
  3460   001016                     l3330:
  3461   001016  90D8               	bcf	status,0,c
  3462   001018  360B               	rlcf	___awmod@divisor^0,f,c
  3463   00101A  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  3464   00101C  2A0D               	incf	___awmod@counter^0,f,c
  3465   00101E                     l3332:
  3466   00101E  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  3467   001020  EF14  F008         	goto	u2421
  3468   001024  EF16  F008         	goto	u2420
  3469   001028                     u2421:
  3470   001028  EF0B  F008         	goto	l3330
  3471   00102C                     u2420:
  3472   00102C                     l3334:
  3473   00102C  500B               	movf	___awmod@divisor^0,w,c
  3474   00102E  5C09               	subwf	___awmod@dividend^0,w,c
  3475   001030  500C               	movf	(___awmod@divisor+1)^0,w,c
  3476   001032  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  3477   001034  A0D8               	btfss	status,0,c
  3478   001036  EF1F  F008         	goto	u2431
  3479   00103A  EF21  F008         	goto	u2430
  3480   00103E                     u2431:
  3481   00103E  EF25  F008         	goto	l3338
  3482   001042                     u2430:
  3483   001042  500B               	movf	___awmod@divisor^0,w,c
  3484   001044  5E09               	subwf	___awmod@dividend^0,f,c
  3485   001046  500C               	movf	(___awmod@divisor+1)^0,w,c
  3486   001048  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  3487   00104A                     l3338:
  3488   00104A  90D8               	bcf	status,0,c
  3489   00104C  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  3490   00104E  320B               	rrcf	___awmod@divisor^0,f,c
  3491   001050  2E0D               	decfsz	___awmod@counter^0,f,c
  3492   001052  EF16  F008         	goto	l3334
  3493   001056                     l3342:
  3494   001056  500E               	movf	___awmod@sign^0,w,c
  3495   001058  B4D8               	btfsc	status,2,c
  3496   00105A  EF31  F008         	goto	u2441
  3497   00105E  EF33  F008         	goto	u2440
  3498   001062                     u2441:
  3499   001062  EF37  F008         	goto	l3346
  3500   001066                     u2440:
  3501   001066  6C09               	negf	___awmod@dividend^0,c
  3502   001068  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  3503   00106A  B0D8               	btfsc	status,0,c
  3504   00106C  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  3505   00106E                     l3346:
  3506   00106E  C009  F009         	movff	___awmod@dividend,?___awmod
  3507   001072  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  3508   001076  0012               	return		;funcret
  3509   001078                     __end_of___awmod:
  3510                           	callstack 0
  3511                           
  3512 ;; *************** function _menu *****************
  3513 ;; Defined at:
  3514 ;;		line 12 in file "menu.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  key             1    wreg     unsigned char 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  key             1   21[COMRAM] unsigned char 
  3519 ;;  i               2   24[COMRAM] int 
  3520 ;;  s               2   22[COMRAM] int 
  3521 ;;  delay           2   19[COMRAM] int 
  3522 ;;  blink           2   17[COMRAM] int 
  3523 ;;  prev_key        1   16[COMRAM] unsigned char 
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3533 ;;      Params:         0       0       0       0       0       0       0
  3534 ;;      Locals:        10       0       0       0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0       0       0
  3536 ;;      Totals:        10       0       0       0       0       0       0
  3537 ;;Total ram usage:       10 bytes
  3538 ;; Hardware stack levels used: 1
  3539 ;; Hardware stack levels required when called: 2
  3540 ;; This function calls:
  3541 ;;		_clcd_print
  3542 ;;		_clcd_putch
  3543 ;;		_clcd_write
  3544 ;;		_read_switches
  3545 ;; This function is called by:
  3546 ;;		_main
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           	psect	text6
  3551   001BFC                     __ptext6:
  3552                           	callstack 0
  3553   001BFC                     _menu:
  3554                           	callstack 28
  3555   001BFC                     
  3556                           ;menu.c: 12: void menu(char key);menu.c: 12: void menu(char key);menu.c: 13: {;menu.c: 1
      +                          3: {;menu.c: 14:     int i = 0;;menu.c: 14:     int i = 0;
  3557   001BFC  0E00               	movlw	0
  3558   001BFE  6E1A               	movwf	(menu@i+1)^0,c
  3559   001C00  0E00               	movlw	0
  3560   001C02  6E19               	movwf	menu@i^0,c
  3561                           
  3562                           ;menu.c: 15:     int s = 0;;menu.c: 15:     int s = 0;
  3563   001C04  0E00               	movlw	0
  3564   001C06  6E18               	movwf	(menu@s+1)^0,c
  3565   001C08  0E00               	movlw	0
  3566   001C0A  6E17               	movwf	menu@s^0,c
  3567                           
  3568                           ;menu.c: 16:     char prev_key;;menu.c: 16:     char prev_key;;menu.c: 17:     int delay
      +                           = 0;;menu.c: 17:     int delay = 0;
  3569   001C0C  0E00               	movlw	0
  3570   001C0E  6E15               	movwf	(menu@delay+1)^0,c
  3571   001C10  0E00               	movlw	0
  3572   001C12  6E14               	movwf	menu@delay^0,c
  3573                           
  3574                           ;menu.c: 18:     int blink = 0;;menu.c: 18:     int blink = 0;
  3575   001C14  0E00               	movlw	0
  3576   001C16  6E13               	movwf	(menu@blink+1)^0,c
  3577   001C18  0E00               	movlw	0
  3578   001C1A  6E12               	movwf	menu@blink^0,c
  3579   001C1C                     
  3580                           ;menu.c: 21:     clcd_write(0x01, 0);;menu.c: 21:     clcd_write(0x01, 0);
  3581   001C1C  0E00               	movlw	0
  3582   001C1E  6E01               	movwf	clcd_write@control_bit^0,c
  3583   001C20  0E01               	movlw	1
  3584   001C22  ECEE  F005         	call	_clcd_write
  3585   001C26                     l3552:
  3586                           
  3587                           ;menu.c: 24:     {;menu.c: 24:     {;menu.c: 26:         key = read_switches(0);;menu.c:
      +                           26:         key = read_switches(0);
  3588   001C26  0E00               	movlw	0
  3589   001C28  EC19  F007         	call	_read_switches
  3590   001C2C  6E16               	movwf	menu@key^0,c
  3591   001C2E                     
  3592                           ;menu.c: 29:         if (key != 0xFF);menu.c: 29:         if (key != 0xFF)
  3593   001C2E  2816               	incf	menu@key^0,w,c
  3594   001C30  B4D8               	btfsc	status,2,c
  3595   001C32  EF1D  F00E         	goto	u2721
  3596   001C36  EF1F  F00E         	goto	u2720
  3597   001C3A                     u2721:
  3598   001C3A  EF3A  F00E         	goto	l3566
  3599   001C3E                     u2720:
  3600   001C3E                     
  3601                           ;menu.c: 30:         {;menu.c: 30:         {;menu.c: 31:             prev_key = key;;men
      +                          u.c: 31:             prev_key = key;
  3602   001C3E  C016  F011         	movff	menu@key,menu@prev_key
  3603   001C42                     
  3604                           ;menu.c: 32:             delay++;;menu.c: 32:             delay++;
  3605   001C42  4A14               	infsnz	menu@delay^0,f,c
  3606   001C44  2A15               	incf	(menu@delay+1)^0,f,c
  3607   001C46                     
  3608                           ;menu.c: 34:             if (delay > 1000);menu.c: 34:             if (delay > 1000)
  3609   001C46  BE15               	btfsc	(menu@delay+1)^0,7,c
  3610   001C48  EF2F  F00E         	goto	u2731
  3611   001C4C  0EE9               	movlw	233
  3612   001C4E  5C14               	subwf	menu@delay^0,w,c
  3613   001C50  0E03               	movlw	3
  3614   001C52  5815               	subwfb	(menu@delay+1)^0,w,c
  3615   001C54  A0D8               	btfss	status,0,c
  3616   001C56  EF2F  F00E         	goto	u2731
  3617   001C5A  EF31  F00E         	goto	u2730
  3618   001C5E                     u2731:
  3619   001C5E  EF36  F00E         	goto	l3564
  3620   001C62                     u2730:
  3621   001C62                     
  3622                           ;menu.c: 35:                 key = key + 10;;menu.c: 35:                 key = key + 10;
  3623   001C62  5016               	movf	menu@key^0,w,c
  3624   001C64  0F0A               	addlw	10
  3625   001C66  6E16               	movwf	menu@key^0,c
  3626   001C68  EF5D  F00E         	goto	l3576
  3627   001C6C                     l3564:
  3628                           
  3629                           ;menu.c: 37:                 key = 0;;menu.c: 37:                 key = 0;
  3630   001C6C  0E00               	movlw	0
  3631   001C6E  6E16               	movwf	menu@key^0,c
  3632   001C70  EF5D  F00E         	goto	l3576
  3633   001C74                     l3566:
  3634   001C74  BE15               	btfsc	(menu@delay+1)^0,7,c
  3635   001C76  EF48  F00E         	goto	u2740
  3636   001C7A  0EE8               	movlw	232
  3637   001C7C  5C14               	subwf	menu@delay^0,w,c
  3638   001C7E  0E03               	movlw	3
  3639   001C80  5815               	subwfb	(menu@delay+1)^0,w,c
  3640   001C82  B0D8               	btfsc	status,0,c
  3641   001C84  EF46  F00E         	goto	u2741
  3642   001C88  EF48  F00E         	goto	u2740
  3643   001C8C                     u2741:
  3644   001C8C  EF59  F00E         	goto	l3574
  3645   001C90                     u2740:
  3646   001C90  5014               	movf	menu@delay^0,w,c
  3647   001C92  1015               	iorwf	(menu@delay+1)^0,w,c
  3648   001C94  B4D8               	btfsc	status,2,c
  3649   001C96  EF4F  F00E         	goto	u2751
  3650   001C9A  EF51  F00E         	goto	u2750
  3651   001C9E                     u2751:
  3652   001C9E  EF59  F00E         	goto	l3574
  3653   001CA2                     u2750:
  3654   001CA2                     
  3655                           ;menu.c: 41:         {;menu.c: 41:         {;menu.c: 42:             delay = 0;;menu.c: 
      +                          42:             delay = 0;
  3656   001CA2  0E00               	movlw	0
  3657   001CA4  6E15               	movwf	(menu@delay+1)^0,c
  3658   001CA6  0E00               	movlw	0
  3659   001CA8  6E14               	movwf	menu@delay^0,c
  3660   001CAA                     
  3661                           ;menu.c: 43:             key = prev_key;;menu.c: 43:             key = prev_key;
  3662   001CAA  C011  F016         	movff	menu@prev_key,menu@key
  3663                           
  3664                           ;menu.c: 44:         };menu.c: 44:         }
  3665   001CAE  EF5D  F00E         	goto	l3576
  3666   001CB2                     l3574:
  3667                           
  3668                           ;menu.c: 46:         {;menu.c: 46:         {;menu.c: 47:             delay = 0;;menu.c: 
      +                          47:             delay = 0;
  3669   001CB2  0E00               	movlw	0
  3670   001CB4  6E15               	movwf	(menu@delay+1)^0,c
  3671   001CB6  0E00               	movlw	0
  3672   001CB8  6E14               	movwf	menu@delay^0,c
  3673   001CBA                     l3576:
  3674                           
  3675                           ;menu.c: 51:         if (key == 5);menu.c: 51:         if (key == 5)
  3676   001CBA  0E05               	movlw	5
  3677   001CBC  1816               	xorwf	menu@key^0,w,c
  3678   001CBE  A4D8               	btfss	status,2,c
  3679   001CC0  EF64  F00E         	goto	u2761
  3680   001CC4  EF66  F00E         	goto	u2760
  3681   001CC8                     u2761:
  3682   001CC8  EF8A  F00E         	goto	l3588
  3683   001CCC                     u2760:
  3684   001CCC                     
  3685                           ;menu.c: 52:         {;menu.c: 52:         {;menu.c: 53:             if (s == 1);menu.c:
      +                           53:             if (s == 1)
  3686   001CCC  0417               	decf	menu@s^0,w,c
  3687   001CCE  1018               	iorwf	(menu@s+1)^0,w,c
  3688   001CD0  A4D8               	btfss	status,2,c
  3689   001CD2  EF6D  F00E         	goto	u2771
  3690   001CD6  EF6F  F00E         	goto	u2770
  3691   001CDA                     u2771:
  3692   001CDA  EF75  F00E         	goto	l3582
  3693   001CDE                     u2770:
  3694   001CDE                     
  3695                           ;menu.c: 54:                 s = 0;;menu.c: 54:                 s = 0;
  3696   001CDE  0E00               	movlw	0
  3697   001CE0  6E18               	movwf	(menu@s+1)^0,c
  3698   001CE2  0E00               	movlw	0
  3699   001CE4  6E17               	movwf	menu@s^0,c
  3700   001CE6  EF8A  F00E         	goto	l3588
  3701   001CEA                     l3582:
  3702   001CEA  BE1A               	btfsc	(menu@i+1)^0,7,c
  3703   001CEC  EF80  F00E         	goto	u2781
  3704   001CF0  501A               	movf	(menu@i+1)^0,w,c
  3705   001CF2  E108               	bnz	u2780
  3706   001CF4  0419               	decf	menu@i^0,w,c
  3707   001CF6  A0D8               	btfss	status,0,c
  3708   001CF8  EF80  F00E         	goto	u2781
  3709   001CFC  EF82  F00E         	goto	u2780
  3710   001D00                     u2781:
  3711   001D00  EF8A  F00E         	goto	l3588
  3712   001D04                     u2780:
  3713   001D04                     
  3714                           ;menu.c: 56:             {;menu.c: 56:             {;menu.c: 57:                 i--;;me
      +                          nu.c: 57:                 i--;
  3715   001D04  0619               	decf	menu@i^0,f,c
  3716   001D06  A0D8               	btfss	status,0,c
  3717   001D08  061A               	decf	(menu@i+1)^0,f,c
  3718   001D0A                     
  3719                           ;menu.c: 58:                 clcd_write(0x01, 0);;menu.c: 58:                 clcd_write
      +                          (0x01, 0);
  3720   001D0A  0E00               	movlw	0
  3721   001D0C  6E01               	movwf	clcd_write@control_bit^0,c
  3722   001D0E  0E01               	movlw	1
  3723   001D10  ECEE  F005         	call	_clcd_write
  3724   001D14                     l3588:
  3725                           
  3726                           ;menu.c: 62:         if (key == 6);menu.c: 62:         if (key == 6)
  3727   001D14  0E06               	movlw	6
  3728   001D16  1816               	xorwf	menu@key^0,w,c
  3729   001D18  A4D8               	btfss	status,2,c
  3730   001D1A  EF91  F00E         	goto	u2791
  3731   001D1E  EF93  F00E         	goto	u2790
  3732   001D22                     u2791:
  3733   001D22  EFBE  F00E         	goto	l3602
  3734   001D26                     u2790:
  3735   001D26                     
  3736                           ;menu.c: 63:         {;menu.c: 63:         {;menu.c: 64:             if (s == 0);menu.c:
      +                           64:             if (s == 0)
  3737   001D26  5017               	movf	menu@s^0,w,c
  3738   001D28  1018               	iorwf	(menu@s+1)^0,w,c
  3739   001D2A  A4D8               	btfss	status,2,c
  3740   001D2C  EF9A  F00E         	goto	u2801
  3741   001D30  EF9C  F00E         	goto	u2800
  3742   001D34                     u2801:
  3743   001D34  EFA2  F00E         	goto	l3594
  3744   001D38                     u2800:
  3745   001D38                     
  3746                           ;menu.c: 65:                 s = 1;;menu.c: 65:                 s = 1;
  3747   001D38  0E00               	movlw	0
  3748   001D3A  6E18               	movwf	(menu@s+1)^0,c
  3749   001D3C  0E01               	movlw	1
  3750   001D3E  6E17               	movwf	menu@s^0,c
  3751   001D40  EFBE  F00E         	goto	l3602
  3752   001D44                     l3594:
  3753   001D44  BE1A               	btfsc	(menu@i+1)^0,7,c
  3754   001D46  EFA7  F00E         	goto	u2811
  3755   001D4A  EFA9  F00E         	goto	u2810
  3756   001D4E                     u2811:
  3757   001D4E  EFBE  F00E         	goto	l3602
  3758   001D52                     u2810:
  3759   001D52  BE1A               	btfsc	(menu@i+1)^0,7,c
  3760   001D54  EFB7  F00E         	goto	u2820
  3761   001D58  501A               	movf	(menu@i+1)^0,w,c
  3762   001D5A  E107               	bnz	u2821
  3763   001D5C  0E03               	movlw	3
  3764   001D5E  5C19               	subwf	menu@i^0,w,c
  3765   001D60  B0D8               	btfsc	status,0,c
  3766   001D62  EFB5  F00E         	goto	u2821
  3767   001D66  EFB7  F00E         	goto	u2820
  3768   001D6A                     u2821:
  3769   001D6A  EFBE  F00E         	goto	l3602
  3770   001D6E                     u2820:
  3771   001D6E                     
  3772                           ;menu.c: 67:             {;menu.c: 67:             {;menu.c: 68:                 i++;;me
      +                          nu.c: 68:                 i++;
  3773   001D6E  4A19               	infsnz	menu@i^0,f,c
  3774   001D70  2A1A               	incf	(menu@i+1)^0,f,c
  3775   001D72                     
  3776                           ;menu.c: 69:                 clcd_write(0x01, 0);;menu.c: 69:                 clcd_write
      +                          (0x01, 0);
  3777   001D72  0E00               	movlw	0
  3778   001D74  6E01               	movwf	clcd_write@control_bit^0,c
  3779   001D76  0E01               	movlw	1
  3780   001D78  ECEE  F005         	call	_clcd_write
  3781   001D7C                     l3602:
  3782                           
  3783                           ;menu.c: 74:         blink++;;menu.c: 74:         blink++;
  3784   001D7C  4A12               	infsnz	menu@blink^0,f,c
  3785   001D7E  2A13               	incf	(menu@blink+1)^0,f,c
  3786   001D80                     
  3787                           ;menu.c: 75:         if (blink < 500);menu.c: 75:         if (blink < 500)
  3788   001D80  BE13               	btfsc	(menu@blink+1)^0,7,c
  3789   001D82  EFCE  F00E         	goto	u2830
  3790   001D86  0EF4               	movlw	244
  3791   001D88  5C12               	subwf	menu@blink^0,w,c
  3792   001D8A  0E01               	movlw	1
  3793   001D8C  5813               	subwfb	(menu@blink+1)^0,w,c
  3794   001D8E  B0D8               	btfsc	status,0,c
  3795   001D90  EFCC  F00E         	goto	u2831
  3796   001D94  EFCE  F00E         	goto	u2830
  3797   001D98                     u2831:
  3798   001D98  EFEF  F00E         	goto	l3612
  3799   001D9C                     u2830:
  3800   001D9C                     
  3801                           ;menu.c: 76:         {;menu.c: 76:         {;menu.c: 77:             if (s == 0);menu.c:
      +                           77:             if (s == 0)
  3802   001D9C  5017               	movf	menu@s^0,w,c
  3803   001D9E  1018               	iorwf	(menu@s+1)^0,w,c
  3804   001DA0  A4D8               	btfss	status,2,c
  3805   001DA2  EFD5  F00E         	goto	u2841
  3806   001DA6  EFD7  F00E         	goto	u2840
  3807   001DAA                     u2841:
  3808   001DAA  EFE3  F00E         	goto	l3610
  3809   001DAE                     u2840:
  3810   001DAE                     
  3811                           ;menu.c: 78:             {;menu.c: 78:             {;menu.c: 79:                 clcd_pu
      +                          tch('*', (0x80 + (0)));;menu.c: 79:                 clcd_putch('*', (0x80 + (0)));
  3812   001DAE  0E80               	movlw	128
  3813   001DB0  6E0F               	movwf	clcd_putch@addr^0,c
  3814   001DB2  0E2A               	movlw	42
  3815   001DB4  EC32  F005         	call	_clcd_putch
  3816                           
  3817                           ;menu.c: 80:                 clcd_putch(' ', (0xC0 + (0)));;menu.c: 80:                 
      +                          clcd_putch(' ', (0xC0 + (0)));
  3818   001DB8  0EC0               	movlw	192
  3819   001DBA  6E0F               	movwf	clcd_putch@addr^0,c
  3820   001DBC  0E20               	movlw	32
  3821   001DBE  EC32  F005         	call	_clcd_putch
  3822                           
  3823                           ;menu.c: 81:             };menu.c: 81:             }
  3824   001DC2  EF30  F00F         	goto	l3624
  3825   001DC6                     l3610:
  3826                           
  3827                           ;menu.c: 83:             {;menu.c: 83:             {;menu.c: 84:                 clcd_pu
      +                          tch(' ', (0x80 + (0)));;menu.c: 84:                 clcd_putch(' ', (0x80 + (0)));
  3828   001DC6  0E80               	movlw	128
  3829   001DC8  6E0F               	movwf	clcd_putch@addr^0,c
  3830   001DCA  0E20               	movlw	32
  3831   001DCC  EC32  F005         	call	_clcd_putch
  3832                           
  3833                           ;menu.c: 85:                 clcd_putch('*', (0xC0 + (0)));;menu.c: 85:                 
      +                          clcd_putch('*', (0xC0 + (0)));
  3834   001DD0  0EC0               	movlw	192
  3835   001DD2  6E0F               	movwf	clcd_putch@addr^0,c
  3836   001DD4  0E2A               	movlw	42
  3837   001DD6  EC32  F005         	call	_clcd_putch
  3838   001DDA  EF30  F00F         	goto	l3624
  3839   001DDE                     l3612:
  3840   001DDE  BE13               	btfsc	(menu@blink+1)^0,7,c
  3841   001DE0  EFFB  F00E         	goto	u2851
  3842   001DE4  0EF4               	movlw	244
  3843   001DE6  5C12               	subwf	menu@blink^0,w,c
  3844   001DE8  0E01               	movlw	1
  3845   001DEA  5813               	subwfb	(menu@blink+1)^0,w,c
  3846   001DEC  A0D8               	btfss	status,0,c
  3847   001DEE  EFFB  F00E         	goto	u2851
  3848   001DF2  EFFD  F00E         	goto	u2850
  3849   001DF6                     u2851:
  3850   001DF6  EF2C  F00F         	goto	l3622
  3851   001DFA                     u2850:
  3852   001DFA  BE13               	btfsc	(menu@blink+1)^0,7,c
  3853   001DFC  EF0B  F00F         	goto	u2860
  3854   001E00  0EE8               	movlw	232
  3855   001E02  5C12               	subwf	menu@blink^0,w,c
  3856   001E04  0E03               	movlw	3
  3857   001E06  5813               	subwfb	(menu@blink+1)^0,w,c
  3858   001E08  B0D8               	btfsc	status,0,c
  3859   001E0A  EF09  F00F         	goto	u2861
  3860   001E0E  EF0B  F00F         	goto	u2860
  3861   001E12                     u2861:
  3862   001E12  EF2C  F00F         	goto	l3622
  3863   001E16                     u2860:
  3864   001E16                     
  3865                           ;menu.c: 89:         {;menu.c: 89:         {;menu.c: 90:             if (s == 0);menu.c:
      +                           90:             if (s == 0)
  3866   001E16  5017               	movf	menu@s^0,w,c
  3867   001E18  1018               	iorwf	(menu@s+1)^0,w,c
  3868   001E1A  A4D8               	btfss	status,2,c
  3869   001E1C  EF12  F00F         	goto	u2871
  3870   001E20  EF14  F00F         	goto	u2870
  3871   001E24                     u2871:
  3872   001E24  EF20  F00F         	goto	l3620
  3873   001E28                     u2870:
  3874   001E28                     
  3875                           ;menu.c: 91:             {;menu.c: 91:             {;menu.c: 92:                 clcd_pu
      +                          tch(' ', (0x80 + (0)));;menu.c: 92:                 clcd_putch(' ', (0x80 + (0)));
  3876   001E28  0E80               	movlw	128
  3877   001E2A  6E0F               	movwf	clcd_putch@addr^0,c
  3878   001E2C  0E20               	movlw	32
  3879   001E2E  EC32  F005         	call	_clcd_putch
  3880                           
  3881                           ;menu.c: 93:                 clcd_putch(' ', (0xC0 + (0)));;menu.c: 93:                 
      +                          clcd_putch(' ', (0xC0 + (0)));
  3882   001E32  0EC0               	movlw	192
  3883   001E34  6E0F               	movwf	clcd_putch@addr^0,c
  3884   001E36  0E20               	movlw	32
  3885   001E38  EC32  F005         	call	_clcd_putch
  3886                           
  3887                           ;menu.c: 94:             };menu.c: 94:             }
  3888   001E3C  EF30  F00F         	goto	l3624
  3889   001E40                     l3620:
  3890                           
  3891                           ;menu.c: 96:             {;menu.c: 96:             {;menu.c: 97:                 clcd_pu
      +                          tch(' ', (0x80 + (0)));;menu.c: 97:                 clcd_putch(' ', (0x80 + (0)));
  3892   001E40  0E80               	movlw	128
  3893   001E42  6E0F               	movwf	clcd_putch@addr^0,c
  3894   001E44  0E20               	movlw	32
  3895   001E46  EC32  F005         	call	_clcd_putch
  3896                           
  3897                           ;menu.c: 98:                 clcd_putch(' ', (0xC0 + (0)));;menu.c: 98:                 
      +                          clcd_putch(' ', (0xC0 + (0)));
  3898   001E4A  0EC0               	movlw	192
  3899   001E4C  6E0F               	movwf	clcd_putch@addr^0,c
  3900   001E4E  0E20               	movlw	32
  3901   001E50  EC32  F005         	call	_clcd_putch
  3902   001E54  EF30  F00F         	goto	l3624
  3903   001E58                     l3622:
  3904                           
  3905                           ;menu.c: 102:         {;menu.c: 102:         {;menu.c: 103:             blink = 0;;menu.
      +                          c: 103:             blink = 0;
  3906   001E58  0E00               	movlw	0
  3907   001E5A  6E13               	movwf	(menu@blink+1)^0,c
  3908   001E5C  0E00               	movlw	0
  3909   001E5E  6E12               	movwf	menu@blink^0,c
  3910   001E60                     l3624:
  3911                           
  3912                           ;menu.c: 107:         clcd_print(vmenu[i], (0x80 + (1)));;menu.c: 107:         clcd_prin
      +                          t(vmenu[i], (0x80 + (1)));
  3913   001E60  90D8               	bcf	status,0,c
  3914   001E62  3419               	rlcf	menu@i^0,w,c
  3915   001E64  6ED9               	movwf	fsr2l,c
  3916   001E66  341A               	rlcf	(menu@i+1)^0,w,c
  3917   001E68  6EDA               	movwf	fsr2h,c
  3918   001E6A  0E6E               	movlw	low _vmenu
  3919   001E6C  26D9               	addwf	fsr2l,f,c
  3920   001E6E  0E00               	movlw	high _vmenu
  3921   001E70  22DA               	addwfc	fsr2h,f,c
  3922   001E72  CFDE F003          	movff	postinc2,clcd_print@data
  3923   001E76  CFDD F004          	movff	postdec2,clcd_print@data+1
  3924   001E7A  0E81               	movlw	129
  3925   001E7C  6E05               	movwf	clcd_print@addr^0,c
  3926   001E7E  ECAD  F006         	call	_clcd_print	;wreg free
  3927   001E82                     
  3928                           ;menu.c: 108:         clcd_print(vmenu[i + 1], (0xC0 + (1)));;menu.c: 108:         clcd_
      +                          print(vmenu[i + 1], (0xC0 + (1)));
  3929   001E82  90D8               	bcf	status,0,c
  3930   001E84  3419               	rlcf	menu@i^0,w,c
  3931   001E86  6ED9               	movwf	fsr2l,c
  3932   001E88  341A               	rlcf	(menu@i+1)^0,w,c
  3933   001E8A  6EDA               	movwf	fsr2h,c
  3934   001E8C  0E70               	movlw	low (_vmenu+2)
  3935   001E8E  26D9               	addwf	fsr2l,f,c
  3936   001E90  0E00               	movlw	high (_vmenu+2)
  3937   001E92  22DA               	addwfc	fsr2h,f,c
  3938   001E94  CFDE F003          	movff	postinc2,clcd_print@data
  3939   001E98  CFDD F004          	movff	postdec2,clcd_print@data+1
  3940   001E9C  0EC1               	movlw	193
  3941   001E9E  6E05               	movwf	clcd_print@addr^0,c
  3942   001EA0  ECAD  F006         	call	_clcd_print	;wreg free
  3943   001EA4                     
  3944                           ;menu.c: 111:         if (key == 15);menu.c: 111:         if (key == 15)
  3945   001EA4  0E0F               	movlw	15
  3946   001EA6  1816               	xorwf	menu@key^0,w,c
  3947   001EA8  A4D8               	btfss	status,2,c
  3948   001EAA  EF59  F00F         	goto	u2881
  3949   001EAE  EF5B  F00F         	goto	u2880
  3950   001EB2                     u2881:
  3951   001EB2  EF0C  F010         	goto	l3676
  3952   001EB6                     u2880:
  3953   001EB6                     
  3954                           ;menu.c: 112:         {;menu.c: 112:         {;menu.c: 115:             clcd_write(0x01,
      +                           0);;menu.c: 115:             clcd_write(0x01, 0);
  3955   001EB6  0E00               	movlw	0
  3956   001EB8  6E01               	movwf	clcd_write@control_bit^0,c
  3957   001EBA  0E01               	movlw	1
  3958   001EBC  ECEE  F005         	call	_clcd_write
  3959   001EC0                     
  3960                           ;menu.c: 116:             main_f = 3;;menu.c: 116:             main_f = 3;
  3961   001EC0  0E03               	movlw	3
  3962   001EC2  6E51               	movwf	_main_f^0,c
  3963   001EC4                     
  3964                           ;menu.c: 119:             if (i == 0 && s == 0);menu.c: 119:             if (i == 0 && s
      +                           == 0)
  3965   001EC4  5019               	movf	menu@i^0,w,c
  3966   001EC6  101A               	iorwf	(menu@i+1)^0,w,c
  3967   001EC8  A4D8               	btfss	status,2,c
  3968   001ECA  EF69  F00F         	goto	u2891
  3969   001ECE  EF6B  F00F         	goto	u2890
  3970   001ED2                     u2891:
  3971   001ED2  EF78  F00F         	goto	l3640
  3972   001ED6                     u2890:
  3973   001ED6  5017               	movf	menu@s^0,w,c
  3974   001ED8  1018               	iorwf	(menu@s+1)^0,w,c
  3975   001EDA  A4D8               	btfss	status,2,c
  3976   001EDC  EF72  F00F         	goto	u2901
  3977   001EE0  EF74  F00F         	goto	u2900
  3978   001EE4                     u2901:
  3979   001EE4  EF78  F00F         	goto	l3640
  3980   001EE8                     u2900:
  3981   001EE8                     
  3982                           ;menu.c: 120:             {;menu.c: 120:             {;menu.c: 121:                 menu
      +                          _f = 0;;menu.c: 121:                 menu_f = 0;
  3983   001EE8  0E00               	movlw	0
  3984   001EEA  6E50               	movwf	_menu_f^0,c
  3985                           
  3986                           ;menu.c: 122:             };menu.c: 122:             }
  3987   001EEC  EF1C  F010         	goto	l287
  3988   001EF0                     l3640:
  3989   001EF0  5019               	movf	menu@i^0,w,c
  3990   001EF2  101A               	iorwf	(menu@i+1)^0,w,c
  3991   001EF4  A4D8               	btfss	status,2,c
  3992   001EF6  EF7F  F00F         	goto	u2911
  3993   001EFA  EF81  F00F         	goto	u2910
  3994   001EFE                     u2911:
  3995   001EFE  EF8A  F00F         	goto	l3644
  3996   001F02                     u2910:
  3997   001F02  0417               	decf	menu@s^0,w,c
  3998   001F04  1018               	iorwf	(menu@s+1)^0,w,c
  3999   001F06  B4D8               	btfsc	status,2,c
  4000   001F08  EF88  F00F         	goto	u2921
  4001   001F0C  EF8A  F00F         	goto	u2920
  4002   001F10                     u2921:
  4003   001F10  EF9C  F00F         	goto	l3648
  4004   001F14                     u2920:
  4005   001F14                     l3644:
  4006   001F14  0419               	decf	menu@i^0,w,c
  4007   001F16  101A               	iorwf	(menu@i+1)^0,w,c
  4008   001F18  A4D8               	btfss	status,2,c
  4009   001F1A  EF91  F00F         	goto	u2931
  4010   001F1E  EF93  F00F         	goto	u2930
  4011   001F22                     u2931:
  4012   001F22  EFA0  F00F         	goto	l3650
  4013   001F26                     u2930:
  4014   001F26  5017               	movf	menu@s^0,w,c
  4015   001F28  1018               	iorwf	(menu@s+1)^0,w,c
  4016   001F2A  A4D8               	btfss	status,2,c
  4017   001F2C  EF9A  F00F         	goto	u2941
  4018   001F30  EF9C  F00F         	goto	u2940
  4019   001F34                     u2941:
  4020   001F34  EFA0  F00F         	goto	l3650
  4021   001F38                     u2940:
  4022   001F38                     l3648:
  4023                           
  4024                           ;menu.c: 124:             {;menu.c: 124:             {;menu.c: 125:                 menu
      +                          _f = 1;;menu.c: 125:                 menu_f = 1;
  4025   001F38  0E01               	movlw	1
  4026   001F3A  6E50               	movwf	_menu_f^0,c
  4027                           
  4028                           ;menu.c: 126:             };menu.c: 126:             }
  4029   001F3C  EF1C  F010         	goto	l287
  4030   001F40                     l3650:
  4031   001F40  0419               	decf	menu@i^0,w,c
  4032   001F42  101A               	iorwf	(menu@i+1)^0,w,c
  4033   001F44  A4D8               	btfss	status,2,c
  4034   001F46  EFA7  F00F         	goto	u2951
  4035   001F4A  EFA9  F00F         	goto	u2950
  4036   001F4E                     u2951:
  4037   001F4E  EFB2  F00F         	goto	l3654
  4038   001F52                     u2950:
  4039   001F52  0417               	decf	menu@s^0,w,c
  4040   001F54  1018               	iorwf	(menu@s+1)^0,w,c
  4041   001F56  B4D8               	btfsc	status,2,c
  4042   001F58  EFB0  F00F         	goto	u2961
  4043   001F5C  EFB2  F00F         	goto	u2960
  4044   001F60                     u2961:
  4045   001F60  EFC5  F00F         	goto	l3658
  4046   001F64                     u2960:
  4047   001F64                     l3654:
  4048   001F64  0E02               	movlw	2
  4049   001F66  1819               	xorwf	menu@i^0,w,c
  4050   001F68  101A               	iorwf	(menu@i+1)^0,w,c
  4051   001F6A  A4D8               	btfss	status,2,c
  4052   001F6C  EFBA  F00F         	goto	u2971
  4053   001F70  EFBC  F00F         	goto	u2970
  4054   001F74                     u2971:
  4055   001F74  EFC9  F00F         	goto	l3660
  4056   001F78                     u2970:
  4057   001F78  5017               	movf	menu@s^0,w,c
  4058   001F7A  1018               	iorwf	(menu@s+1)^0,w,c
  4059   001F7C  A4D8               	btfss	status,2,c
  4060   001F7E  EFC3  F00F         	goto	u2981
  4061   001F82  EFC5  F00F         	goto	u2980
  4062   001F86                     u2981:
  4063   001F86  EFC9  F00F         	goto	l3660
  4064   001F8A                     u2980:
  4065   001F8A                     l3658:
  4066                           
  4067                           ;menu.c: 128:             {;menu.c: 128:             {;menu.c: 130:                 menu
      +                          _f = 2;;menu.c: 130:                 menu_f = 2;
  4068   001F8A  0E02               	movlw	2
  4069   001F8C  6E50               	movwf	_menu_f^0,c
  4070                           
  4071                           ;menu.c: 131:             };menu.c: 131:             }
  4072   001F8E  EF1C  F010         	goto	l287
  4073   001F92                     l3660:
  4074   001F92  0E02               	movlw	2
  4075   001F94  1819               	xorwf	menu@i^0,w,c
  4076   001F96  101A               	iorwf	(menu@i+1)^0,w,c
  4077   001F98  A4D8               	btfss	status,2,c
  4078   001F9A  EFD1  F00F         	goto	u2991
  4079   001F9E  EFD3  F00F         	goto	u2990
  4080   001FA2                     u2991:
  4081   001FA2  EFDC  F00F         	goto	l3664
  4082   001FA6                     u2990:
  4083   001FA6  0417               	decf	menu@s^0,w,c
  4084   001FA8  1018               	iorwf	(menu@s+1)^0,w,c
  4085   001FAA  B4D8               	btfsc	status,2,c
  4086   001FAC  EFDA  F00F         	goto	u3001
  4087   001FB0  EFDC  F00F         	goto	u3000
  4088   001FB4                     u3001:
  4089   001FB4  EFEF  F00F         	goto	l3668
  4090   001FB8                     u3000:
  4091   001FB8                     l3664:
  4092   001FB8  0E03               	movlw	3
  4093   001FBA  1819               	xorwf	menu@i^0,w,c
  4094   001FBC  101A               	iorwf	(menu@i+1)^0,w,c
  4095   001FBE  A4D8               	btfss	status,2,c
  4096   001FC0  EFE4  F00F         	goto	u3011
  4097   001FC4  EFE6  F00F         	goto	u3010
  4098   001FC8                     u3011:
  4099   001FC8  EFF3  F00F         	goto	l3670
  4100   001FCC                     u3010:
  4101   001FCC  5017               	movf	menu@s^0,w,c
  4102   001FCE  1018               	iorwf	(menu@s+1)^0,w,c
  4103   001FD0  A4D8               	btfss	status,2,c
  4104   001FD2  EFED  F00F         	goto	u3021
  4105   001FD6  EFEF  F00F         	goto	u3020
  4106   001FDA                     u3021:
  4107   001FDA  EFF3  F00F         	goto	l3670
  4108   001FDE                     u3020:
  4109   001FDE                     l3668:
  4110                           
  4111                           ;menu.c: 133:             {;menu.c: 133:             {;menu.c: 134:                 menu
      +                          _f = 3;;menu.c: 134:                 menu_f = 3;
  4112   001FDE  0E03               	movlw	3
  4113   001FE0  6E50               	movwf	_menu_f^0,c
  4114                           
  4115                           ;menu.c: 135:             };menu.c: 135:             }
  4116   001FE2  EF1C  F010         	goto	l287
  4117   001FE6                     l3670:
  4118   001FE6  0E03               	movlw	3
  4119   001FE8  1819               	xorwf	menu@i^0,w,c
  4120   001FEA  101A               	iorwf	(menu@i+1)^0,w,c
  4121   001FEC  A4D8               	btfss	status,2,c
  4122   001FEE  EFFB  F00F         	goto	u3031
  4123   001FF2  EFFD  F00F         	goto	u3030
  4124   001FF6                     u3031:
  4125   001FF6  EF0A  F010         	goto	l270
  4126   001FFA                     u3030:
  4127   001FFA  0417               	decf	menu@s^0,w,c
  4128   001FFC  1018               	iorwf	(menu@s+1)^0,w,c
  4129   001FFE  A4D8               	btfss	status,2,c
  4130   002000  EF04  F010         	goto	u3041
  4131   002004  EF06  F010         	goto	u3040
  4132   002008                     u3041:
  4133   002008  EF0A  F010         	goto	l270
  4134   00200C                     u3040:
  4135   00200C                     
  4136                           ;menu.c: 137:             {;menu.c: 137:             {;menu.c: 138:                 menu
      +                          _f = 4;;menu.c: 138:                 menu_f = 4;
  4137   00200C  0E04               	movlw	4
  4138   00200E  6E50               	movwf	_menu_f^0,c
  4139   002010  EF1C  F010         	goto	l287
  4140   002014                     l270:
  4141   002014  EF1C  F010         	goto	l287
  4142   002018                     l3676:
  4143                           
  4144                           ;menu.c: 144:         if (key == 16);menu.c: 144:         if (key == 16)
  4145   002018  0E10               	movlw	16
  4146   00201A  1816               	xorwf	menu@key^0,w,c
  4147   00201C  A4D8               	btfss	status,2,c
  4148   00201E  EF13  F010         	goto	u3051
  4149   002022  EF15  F010         	goto	u3050
  4150   002026                     u3051:
  4151   002026  EF13  F00E         	goto	l3552
  4152   00202A                     u3050:
  4153   00202A                     
  4154                           ;menu.c: 145:         {;menu.c: 145:         {;menu.c: 147:             clcd_write(0x01,
      +                           0);;menu.c: 147:             clcd_write(0x01, 0);
  4155   00202A  0E00               	movlw	0
  4156   00202C  6E01               	movwf	clcd_write@control_bit^0,c
  4157   00202E  0E01               	movlw	1
  4158   002030  ECEE  F005         	call	_clcd_write
  4159   002034                     
  4160                           ;menu.c: 148:             main_f = 0;;menu.c: 148:             main_f = 0;
  4161   002034  0E00               	movlw	0
  4162   002036  6E51               	movwf	_main_f^0,c
  4163   002038                     l287:
  4164   002038  0012               	return		;funcret
  4165   00203A                     __end_of_menu:
  4166                           	callstack 0
  4167                           
  4168 ;; *************** function _inti_config *****************
  4169 ;; Defined at:
  4170 ;;		line 27 in file "main.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;		None
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;		None
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      void 
  4177 ;; Registers used:
  4178 ;;		wreg, status,2, status,0, cstack
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4184 ;;      Params:         0       0       0       0       0       0       0
  4185 ;;      Locals:         0       0       0       0       0       0       0
  4186 ;;      Temps:          0       0       0       0       0       0       0
  4187 ;;      Totals:         0       0       0       0       0       0       0
  4188 ;;Total ram usage:        0 bytes
  4189 ;; Hardware stack levels used: 1
  4190 ;; Hardware stack levels required when called: 5
  4191 ;; This function calls:
  4192 ;;		_init_adc
  4193 ;;		_init_clcd
  4194 ;;		_init_ds1307
  4195 ;;		_init_i2c
  4196 ;;		_init_matrix_keypad
  4197 ;;		_init_uart
  4198 ;; This function is called by:
  4199 ;;		_main
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text7
  4204   000A7C                     __ptext7:
  4205                           	callstack 0
  4206   000A7C                     _inti_config:
  4207                           	callstack 25
  4208   000A7C                     
  4209                           ;main.c: 29:     init_adc();;main.c: 29:     init_adc();
  4210   000A7C  EC69  F005         	call	_init_adc	;wreg free
  4211   000A80                     
  4212                           ;main.c: 30:     init_clcd();;main.c: 30:     init_clcd();
  4213   000A80  ECD3  F005         	call	_init_clcd	;wreg free
  4214   000A84                     
  4215                           ;main.c: 31:     init_matrix_keypad();;main.c: 31:     init_matrix_keypad();
  4216   000A84  EC0A  F005         	call	_init_matrix_keypad	;wreg free
  4217                           
  4218                           ;main.c: 32:     init_i2c();;main.c: 32:     init_i2c();
  4219   000A88  EC27  F005         	call	_init_i2c	;wreg free
  4220   000A8C                     
  4221                           ;main.c: 33:     init_ds1307();;main.c: 33:     init_ds1307();
  4222   000A8C  ECA3  F005         	call	_init_ds1307	;wreg free
  4223   000A90                     
  4224                           ;main.c: 34:     init_uart();;main.c: 34:     init_uart();
  4225   000A90  EC13  F005         	call	_init_uart	;wreg free
  4226   000A94  0012               	return		;funcret
  4227   000A96                     __end_of_inti_config:
  4228                           	callstack 0
  4229                           
  4230 ;; *************** function _init_uart *****************
  4231 ;; Defined at:
  4232 ;;		line 4 in file "uart.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;		None
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4246 ;;      Params:         0       0       0       0       0       0       0
  4247 ;;      Locals:         0       0       0       0       0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0
  4249 ;;      Totals:         0       0       0       0       0       0       0
  4250 ;;Total ram usage:        0 bytes
  4251 ;; Hardware stack levels used: 1
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_inti_config
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text8
  4260   000A26                     __ptext8:
  4261                           	callstack 0
  4262   000A26                     _init_uart:
  4263                           	callstack 29
  4264   000A26                     
  4265                           ;uart.c: 7:  TRISC7 = 1;
  4266   000A26  8E94               	bsf	3988,7,c	;volatile
  4267                           
  4268                           ;uart.c: 8:  TRISC6 = 0;
  4269   000A28  9C94               	bcf	3988,6,c	;volatile
  4270                           
  4271                           ;uart.c: 11:  BRGH = 1;
  4272   000A2A  84AC               	bsf	4012,2,c	;volatile
  4273                           
  4274                           ;uart.c: 12:  SPEN = 1;
  4275   000A2C  8EAB               	bsf	4011,7,c	;volatile
  4276                           
  4277                           ;uart.c: 16:  CREN = 1;
  4278   000A2E  88AB               	bsf	4011,4,c	;volatile
  4279   000A30                     
  4280                           ;uart.c: 22:  SPBRG = 129;
  4281   000A30  0E81               	movlw	129
  4282   000A32  6EAF               	movwf	175,c	;volatile
  4283   000A34                     
  4284                           ;uart.c: 24:     RCIE = 1;
  4285   000A34  8A9D               	bsf	3997,5,c	;volatile
  4286   000A36  0012               	return		;funcret
  4287   000A38                     __end_of_init_uart:
  4288                           	callstack 0
  4289                           
  4290 ;; *************** function _init_matrix_keypad *****************
  4291 ;; Defined at:
  4292 ;;		line 4 in file "keypad.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;		None
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;		None
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  1    wreg      void 
  4299 ;; Registers used:
  4300 ;;		wreg, status,2, status,0
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4306 ;;      Params:         0       0       0       0       0       0       0
  4307 ;;      Locals:         0       0       0       0       0       0       0
  4308 ;;      Temps:          0       0       0       0       0       0       0
  4309 ;;      Totals:         0       0       0       0       0       0       0
  4310 ;;Total ram usage:        0 bytes
  4311 ;; Hardware stack levels used: 1
  4312 ;; This function calls:
  4313 ;;		Nothing
  4314 ;; This function is called by:
  4315 ;;		_inti_config
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           	psect	text9
  4320   000A14                     __ptext9:
  4321                           	callstack 0
  4322   000A14                     _init_matrix_keypad:
  4323                           	callstack 29
  4324   000A14                     
  4325                           ;keypad.c: 7:  ADCON1 = 0x0F;;keypad.c: 7:  ADCON1 = 0x0F;
  4326   000A14  0E0F               	movlw	15
  4327   000A16  6EC1               	movwf	193,c	;volatile
  4328                           
  4329                           ;keypad.c: 10:  TRISB = 0x1E;;keypad.c: 10:  TRISB = 0x1E;
  4330   000A18  0E1E               	movlw	30
  4331   000A1A  6E93               	movwf	147,c	;volatile
  4332   000A1C                     
  4333                           ;keypad.c: 13:  RBPU = 0;;keypad.c: 13:  RBPU = 0;
  4334   000A1C  9EF1               	bcf	4081,7,c	;volatile
  4335   000A1E                     
  4336                           ;keypad.c: 15:  PORTB = PORTB | 0xE0;;keypad.c: 15:  PORTB = PORTB | 0xE0;
  4337   000A1E  5081               	movf	129,w,c	;volatile
  4338   000A20  09E0               	iorlw	224
  4339   000A22  6E81               	movwf	129,c	;volatile
  4340   000A24  0012               	return		;funcret
  4341   000A26                     __end_of_init_matrix_keypad:
  4342                           	callstack 0
  4343                           
  4344 ;; *************** function _init_i2c *****************
  4345 ;; Defined at:
  4346 ;;		line 5 in file "i2c.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;		None
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;		None
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  1    wreg      void 
  4353 ;; Registers used:
  4354 ;;		wreg, status,2
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4360 ;;      Params:         0       0       0       0       0       0       0
  4361 ;;      Locals:         0       0       0       0       0       0       0
  4362 ;;      Temps:          0       0       0       0       0       0       0
  4363 ;;      Totals:         0       0       0       0       0       0       0
  4364 ;;Total ram usage:        0 bytes
  4365 ;; Hardware stack levels used: 1
  4366 ;; This function calls:
  4367 ;;		Nothing
  4368 ;; This function is called by:
  4369 ;;		_inti_config
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text10
  4374   000A4E                     __ptext10:
  4375                           	callstack 0
  4376   000A4E                     _init_i2c:
  4377                           	callstack 29
  4378   000A4E                     
  4379                           ;i2c.c: 8:  TRISC3 = 1;
  4380   000A4E  8694               	bsf	3988,3,c	;volatile
  4381                           
  4382                           ;i2c.c: 9:  TRISC4 = 1;
  4383   000A50  8894               	bsf	3988,4,c	;volatile
  4384   000A52                     
  4385                           ;i2c.c: 11:  SSPCON1 = 0x28;
  4386   000A52  0E28               	movlw	40
  4387   000A54  6EC6               	movwf	198,c	;volatile
  4388                           
  4389                           ;i2c.c: 13:  SSPADD = 0x31;
  4390   000A56  0E31               	movlw	49
  4391   000A58  6EC8               	movwf	200,c	;volatile
  4392   000A5A                     
  4393                           ;i2c.c: 15:  CKE = 0;
  4394   000A5A  9CC7               	bcf	4039,6,c	;volatile
  4395   000A5C                     
  4396                           ;i2c.c: 17:  SMP = 1;
  4397   000A5C  8EC7               	bsf	4039,7,c	;volatile
  4398   000A5E                     
  4399                           ;i2c.c: 19:  SSPIF = 0;
  4400   000A5E  969E               	bcf	3998,3,c	;volatile
  4401   000A60                     
  4402                           ;i2c.c: 21:  BCLIF = 0;
  4403   000A60  96A1               	bcf	4001,3,c	;volatile
  4404   000A62  0012               	return		;funcret
  4405   000A64                     __end_of_init_i2c:
  4406                           	callstack 0
  4407                           
  4408 ;; *************** function _init_ds1307 *****************
  4409 ;; Defined at:
  4410 ;;		line 12 in file "ds1307.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;		None
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  dummy           1    3[COMRAM] unsigned char 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      void 
  4417 ;; Registers used:
  4418 ;;		wreg, status,2, status,0, cstack
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4424 ;;      Params:         0       0       0       0       0       0       0
  4425 ;;      Locals:         1       0       0       0       0       0       0
  4426 ;;      Temps:          0       0       0       0       0       0       0
  4427 ;;      Totals:         1       0       0       0       0       0       0
  4428 ;;Total ram usage:        1 bytes
  4429 ;; Hardware stack levels used: 1
  4430 ;; Hardware stack levels required when called: 4
  4431 ;; This function calls:
  4432 ;;		_read_ds1307
  4433 ;;		_write_ds1307
  4434 ;; This function is called by:
  4435 ;;		_inti_config
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           	psect	text11
  4440   000B46                     __ptext11:
  4441                           	callstack 0
  4442   000B46                     _init_ds1307:
  4443                           	callstack 25
  4444   000B46                     
  4445                           ;ds1307.c: 14:  unsigned char dummy;;ds1307.c: 17:  dummy = read_ds1307(0x00);
  4446   000B46  0E00               	movlw	0
  4447   000B48  EC79  F005         	call	_read_ds1307
  4448   000B4C  6E04               	movwf	init_ds1307@dummy^0,c
  4449   000B4E                     
  4450                           ;ds1307.c: 18:  write_ds1307(0x00, dummy & 0x7F);
  4451   000B4E  5004               	movf	init_ds1307@dummy^0,w,c
  4452   000B50  0B7F               	andlw	127
  4453   000B52  6E02               	movwf	write_ds1307@data^0,c
  4454   000B54  0E00               	movlw	0
  4455   000B56  EC4B  F005         	call	_write_ds1307
  4456   000B5A                     
  4457                           ;ds1307.c: 21:  dummy = read_ds1307(0x02);
  4458   000B5A  0E02               	movlw	2
  4459   000B5C  EC79  F005         	call	_read_ds1307
  4460   000B60  6E04               	movwf	init_ds1307@dummy^0,c
  4461                           
  4462                           ;ds1307.c: 22:  write_ds1307(0x02, dummy & 0xBF);
  4463   000B62  5004               	movf	init_ds1307@dummy^0,w,c
  4464   000B64  0BBF               	andlw	191
  4465   000B66  6E02               	movwf	write_ds1307@data^0,c
  4466   000B68  0E02               	movlw	2
  4467   000B6A  EC4B  F005         	call	_write_ds1307
  4468   000B6E  0012               	return		;funcret
  4469   000B70                     __end_of_init_ds1307:
  4470                           	callstack 0
  4471                           
  4472 ;; *************** function _write_ds1307 *****************
  4473 ;; Defined at:
  4474 ;;		line 46 in file "ds1307.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  address         1    wreg     unsigned char 
  4477 ;;  data            1    1[COMRAM] unsigned char 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;  address         1    2[COMRAM] unsigned char 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      void 
  4482 ;; Registers used:
  4483 ;;		wreg, status,2, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4489 ;;      Params:         1       0       0       0       0       0       0
  4490 ;;      Locals:         1       0       0       0       0       0       0
  4491 ;;      Temps:          0       0       0       0       0       0       0
  4492 ;;      Totals:         2       0       0       0       0       0       0
  4493 ;;Total ram usage:        2 bytes
  4494 ;; Hardware stack levels used: 1
  4495 ;; Hardware stack levels required when called: 2
  4496 ;; This function calls:
  4497 ;;		_i2c_start
  4498 ;;		_i2c_stop
  4499 ;;		_i2c_write
  4500 ;; This function is called by:
  4501 ;;		_init_ds1307
  4502 ;;		_save_time_to_RTC
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text12
  4507   000A96                     __ptext12:
  4508                           	callstack 0
  4509   000A96                     _write_ds1307:
  4510                           	callstack 26
  4511                           
  4512                           ;incstack = 0
  4513                           ;write_ds1307@address stored from wreg
  4514   000A96  6E03               	movwf	write_ds1307@address^0,c
  4515   000A98                     
  4516                           ;ds1307.c: 46: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 47
      +                          : {;ds1307.c: 48:  i2c_start();
  4517   000A98  ECDC  F004         	call	_i2c_start	;wreg free
  4518   000A9C                     
  4519                           ;ds1307.c: 49:  i2c_write(0xD0);
  4520   000A9C  0ED0               	movlw	208
  4521   000A9E  ECEC  F004         	call	_i2c_write
  4522   000AA2                     
  4523                           ;ds1307.c: 50:  i2c_write(address);
  4524   000AA2  5003               	movf	write_ds1307@address^0,w,c
  4525   000AA4  ECEC  F004         	call	_i2c_write
  4526   000AA8                     
  4527                           ;ds1307.c: 51:  i2c_write(data);
  4528   000AA8  5002               	movf	write_ds1307@data^0,w,c
  4529   000AAA  ECEC  F004         	call	_i2c_write
  4530   000AAE                     
  4531                           ;ds1307.c: 52:  i2c_stop();
  4532   000AAE  ECE0  F004         	call	_i2c_stop	;wreg free
  4533   000AB2  0012               	return		;funcret
  4534   000AB4                     __end_of_write_ds1307:
  4535                           	callstack 0
  4536                           
  4537 ;; *************** function _init_clcd *****************
  4538 ;; Defined at:
  4539 ;;		line 27 in file "clcd.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  1    wreg      void 
  4546 ;; Registers used:
  4547 ;;		wreg, status,2, status,0, cstack
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4553 ;;      Params:         0       0       0       0       0       0       0
  4554 ;;      Locals:         0       0       0       0       0       0       0
  4555 ;;      Temps:          0       0       0       0       0       0       0
  4556 ;;      Totals:         0       0       0       0       0       0       0
  4557 ;;Total ram usage:        0 bytes
  4558 ;; Hardware stack levels used: 1
  4559 ;; Hardware stack levels required when called: 1
  4560 ;; This function calls:
  4561 ;;		_clcd_write
  4562 ;; This function is called by:
  4563 ;;		_inti_config
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           	psect	text13
  4568   000BA6                     __ptext13:
  4569                           	callstack 0
  4570   000BA6                     _init_clcd:
  4571                           	callstack 28
  4572   000BA6                     
  4573                           ;clcd.c: 30:  TRISD = 0x00;;clcd.c: 30:  TRISD = 0x00;
  4574   000BA6  0E00               	movlw	0
  4575   000BA8  6E95               	movwf	149,c	;volatile
  4576   000BAA                     
  4577                           ;clcd.c: 32:  TRISC = TRISC & 0xF8;;clcd.c: 32:  TRISC = TRISC & 0xF8;
  4578   000BAA  5094               	movf	148,w,c	;volatile
  4579   000BAC  0BF8               	andlw	248
  4580   000BAE  6E94               	movwf	148,c	;volatile
  4581   000BB0                     
  4582                           ;clcd.c: 34:  RC0 = 0;;clcd.c: 34:  RC0 = 0;
  4583   000BB0  9082               	bcf	3970,0,c	;volatile
  4584   000BB2                     
  4585                           ;clcd.c: 36:  clcd_write(0x02, 0);;clcd.c: 36:  clcd_write(0x02, 0);
  4586   000BB2  0E00               	movlw	0
  4587   000BB4  6E01               	movwf	clcd_write@control_bit^0,c
  4588   000BB6  0E02               	movlw	2
  4589   000BB8  ECEE  F005         	call	_clcd_write
  4590   000BBC                     
  4591                           ;clcd.c: 37:  clcd_write(0x38, 0);;clcd.c: 37:  clcd_write(0x38, 0);
  4592   000BBC  0E00               	movlw	0
  4593   000BBE  6E01               	movwf	clcd_write@control_bit^0,c
  4594   000BC0  0E38               	movlw	56
  4595   000BC2  ECEE  F005         	call	_clcd_write
  4596   000BC6                     
  4597                           ;clcd.c: 38:  clcd_write(0x0C, 0);;clcd.c: 38:  clcd_write(0x0C, 0);
  4598   000BC6  0E00               	movlw	0
  4599   000BC8  6E01               	movwf	clcd_write@control_bit^0,c
  4600   000BCA  0E0C               	movlw	12
  4601   000BCC  ECEE  F005         	call	_clcd_write
  4602   000BD0                     
  4603                           ;clcd.c: 39:  clcd_write(0x01, 0);;clcd.c: 39:  clcd_write(0x01, 0);
  4604   000BD0  0E00               	movlw	0
  4605   000BD2  6E01               	movwf	clcd_write@control_bit^0,c
  4606   000BD4  0E01               	movlw	1
  4607   000BD6  ECEE  F005         	call	_clcd_write
  4608   000BDA  0012               	return		;funcret
  4609   000BDC                     __end_of_init_clcd:
  4610                           	callstack 0
  4611                           
  4612 ;; *************** function _init_adc *****************
  4613 ;; Defined at:
  4614 ;;		line 4 in file "adc.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;		None
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;		None
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      void 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4628 ;;      Params:         0       0       0       0       0       0       0
  4629 ;;      Locals:         0       0       0       0       0       0       0
  4630 ;;      Temps:          0       0       0       0       0       0       0
  4631 ;;      Totals:         0       0       0       0       0       0       0
  4632 ;;Total ram usage:        0 bytes
  4633 ;; Hardware stack levels used: 1
  4634 ;; This function calls:
  4635 ;;		Nothing
  4636 ;; This function is called by:
  4637 ;;		_inti_config
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640                           
  4641                           	psect	text14
  4642   000AD2                     __ptext14:
  4643                           	callstack 0
  4644   000AD2                     _init_adc:
  4645                           	callstack 29
  4646   000AD2                     
  4647                           ;adc.c: 7:  ADFM = 1;;adc.c: 7:  ADFM = 1;
  4648   000AD2  8EC0               	bsf	4032,7,c	;volatile
  4649                           
  4650                           ;adc.c: 13:  ACQT2 = 0;;adc.c: 13:  ACQT2 = 0;
  4651   000AD4  9AC0               	bcf	4032,5,c	;volatile
  4652                           
  4653                           ;adc.c: 14:  ACQT1 = 1;;adc.c: 14:  ACQT1 = 1;
  4654   000AD6  88C0               	bsf	4032,4,c	;volatile
  4655                           
  4656                           ;adc.c: 15:  ACQT0 = 0;;adc.c: 15:  ACQT0 = 0;
  4657   000AD8  96C0               	bcf	4032,3,c	;volatile
  4658                           
  4659                           ;adc.c: 21:  ADCS0 = 0;;adc.c: 21:  ADCS0 = 0;
  4660   000ADA  90C0               	bcf	4032,0,c	;volatile
  4661                           
  4662                           ;adc.c: 22:  ADCS1 = 1;;adc.c: 22:  ADCS1 = 1;
  4663   000ADC  82C0               	bsf	4032,1,c	;volatile
  4664                           
  4665                           ;adc.c: 23:  ADCS2 = 0;;adc.c: 23:  ADCS2 = 0;
  4666   000ADE  94C0               	bcf	4032,2,c	;volatile
  4667                           
  4668                           ;adc.c: 26:  GODONE = 0;;adc.c: 26:  GODONE = 0;
  4669   000AE0  92C2               	bcf	4034,1,c	;volatile
  4670                           
  4671                           ;adc.c: 31:  VCFG1 = 0;;adc.c: 31:  VCFG1 = 0;
  4672   000AE2  9AC1               	bcf	4033,5,c	;volatile
  4673                           
  4674                           ;adc.c: 33:  VCFG0 = 0;;adc.c: 33:  VCFG0 = 0;
  4675   000AE4  98C1               	bcf	4033,4,c	;volatile
  4676   000AE6                     
  4677                           ;adc.c: 36:  ADRESH = 0;;adc.c: 36:  ADRESH = 0;
  4678   000AE6  0E00               	movlw	0
  4679   000AE8  6EC4               	movwf	196,c	;volatile
  4680                           
  4681                           ;adc.c: 37:  ADRESL = 0;;adc.c: 37:  ADRESL = 0;
  4682   000AEA  0E00               	movlw	0
  4683   000AEC  6EC3               	movwf	195,c	;volatile
  4684   000AEE                     
  4685                           ;adc.c: 40:  ADON = 1;;adc.c: 40:  ADON = 1;
  4686   000AEE  80C2               	bsf	4034,0,c	;volatile
  4687   000AF0  0012               	return		;funcret
  4688   000AF2                     __end_of_init_adc:
  4689                           	callstack 0
  4690                           
  4691 ;; *************** function _download_log *****************
  4692 ;; Defined at:
  4693 ;;		line 17 in file "download.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;  key             1    wreg     unsigned char 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;  key             1    0[COMRAM] unsigned char 
  4698 ;;  j               2    3[COMRAM] int 
  4699 ;;  k               2    5[COMRAM] int 
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4709 ;;      Params:         0       0       0       0       0       0       0
  4710 ;;      Locals:         4       0       0       0       0       0       0
  4711 ;;      Temps:          0       0       0       0       0       0       0
  4712 ;;      Totals:         4       0       0       0       0       0       0
  4713 ;;Total ram usage:        4 bytes
  4714 ;; Hardware stack levels used: 1
  4715 ;; Hardware stack levels required when called: 4
  4716 ;; This function calls:
  4717 ;;		_putch
  4718 ;;		_puts
  4719 ;;		_read_ext_eeprom
  4720 ;; This function is called by:
  4721 ;;		_main
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text15
  4726   0012DA                     __ptext15:
  4727                           	callstack 0
  4728   0012DA                     _download_log:
  4729                           	callstack 26
  4730   0012DA                     
  4731                           ;download.c: 17: void download_log(char key);download.c: 18: {;download.c: 19:     int k
      +                          ;;download.c: 20:     static char index = 1;;download.c: 23:     puts("Downloaded Succes
      +                          sful!");
  4732   0012DA  0EA9               	movlw	low STR_12
  4733   0012DC  6E02               	movwf	puts@s^0,c
  4734   0012DE  0E2E               	movlw	high STR_12
  4735   0012E0  6E03               	movwf	(puts@s+1)^0,c
  4736   0012E2  ECB8  F005         	call	_puts	;wreg free
  4737                           
  4738                           ;download.c: 24:     puts("\n\r");
  4739   0012E6  0EFC               	movlw	low STR_13
  4740   0012E8  6E02               	movwf	puts@s^0,c
  4741   0012EA  0E2F               	movlw	high STR_13
  4742   0012EC  6E03               	movwf	(puts@s+1)^0,c
  4743   0012EE  ECB8  F005         	call	_puts	;wreg free
  4744   0012F2                     
  4745                           ;download.c: 27:     for (int j = 1; j < 10; j++) {
  4746   0012F2  0E00               	movlw	0
  4747   0012F4  6E05               	movwf	(download_log@j+1)^0,c
  4748   0012F6  0E01               	movlw	1
  4749   0012F8  6E04               	movwf	download_log@j^0,c
  4750   0012FA                     l3778:
  4751                           
  4752                           ;download.c: 29:         for (k = 0; k < 10; k++)
  4753   0012FA  0E00               	movlw	0
  4754   0012FC  6E07               	movwf	(download_log@k+1)^0,c
  4755   0012FE  0E00               	movlw	0
  4756   001300  6E06               	movwf	download_log@k^0,c
  4757   001302                     l3784:
  4758                           
  4759                           ;download.c: 30:             arr1[k] = read_ext_eeprom((j * 10) + k);
  4760   001302  0E7E               	movlw	low _arr1
  4761   001304  2406               	addwf	download_log@k^0,w,c
  4762   001306  6ED9               	movwf	fsr2l,c
  4763   001308  0E00               	movlw	high _arr1
  4764   00130A  2007               	addwfc	(download_log@k+1)^0,w,c
  4765   00130C  6EDA               	movwf	fsr2h,c
  4766   00130E  5004               	movf	download_log@j^0,w,c
  4767   001310  0D0A               	mullw	10
  4768   001312  50F3               	movf	243,w,c
  4769   001314  2406               	addwf	download_log@k^0,w,c
  4770   001316  EC8E  F005         	call	_read_ext_eeprom
  4771   00131A  6EDF               	movwf	indf2,c
  4772   00131C  4A06               	infsnz	download_log@k^0,f,c
  4773   00131E  2A07               	incf	(download_log@k+1)^0,f,c
  4774   001320  BE07               	btfsc	(download_log@k+1)^0,7,c
  4775   001322  EF9C  F009         	goto	u3151
  4776   001326  5007               	movf	(download_log@k+1)^0,w,c
  4777   001328  E109               	bnz	u3150
  4778   00132A  0E0A               	movlw	10
  4779   00132C  5C06               	subwf	download_log@k^0,w,c
  4780   00132E  A0D8               	btfss	status,0,c
  4781   001330  EF9C  F009         	goto	u3151
  4782   001334  EF9E  F009         	goto	u3150
  4783   001338                     u3151:
  4784   001338  EF81  F009         	goto	l3784
  4785   00133C                     u3150:
  4786   00133C                     
  4787                           ;download.c: 33:         putch(arr1[0]);
  4788   00133C  0100               	movlb	0	; () banked
  4789   00133E  517E               	movf	_arr1& (0+255),w,b
  4790   001340  EC1C  F005         	call	_putch
  4791                           
  4792                           ;download.c: 34:         putch(arr1[1]);
  4793   001344  0100               	movlb	0	; () banked
  4794   001346  517F               	movf	(_arr1+1)& (0+255),w,b
  4795   001348  EC1C  F005         	call	_putch
  4796   00134C                     
  4797                           ;download.c: 35:         putch(':');
  4798   00134C  0E3A               	movlw	58
  4799   00134E  EC1C  F005         	call	_putch
  4800   001352                     
  4801                           ;download.c: 36:         putch(arr1[2]);
  4802   001352  0100               	movlb	0	; () banked
  4803   001354  5180               	movf	(_arr1+2)& (0+255),w,b
  4804   001356  EC1C  F005         	call	_putch
  4805   00135A                     
  4806                           ;download.c: 37:         putch(arr1[3]);
  4807   00135A  0100               	movlb	0	; () banked
  4808   00135C  5181               	movf	(_arr1+3)& (0+255),w,b
  4809   00135E  EC1C  F005         	call	_putch
  4810   001362                     
  4811                           ;download.c: 38:         putch(':');
  4812   001362  0E3A               	movlw	58
  4813   001364  EC1C  F005         	call	_putch
  4814                           
  4815                           ;download.c: 39:         putch(arr1[4]);
  4816   001368  0100               	movlb	0	; () banked
  4817   00136A  5182               	movf	(_arr1+4)& (0+255),w,b
  4818   00136C  EC1C  F005         	call	_putch
  4819                           
  4820                           ;download.c: 40:         putch(arr1[5]);
  4821   001370  0100               	movlb	0	; () banked
  4822   001372  5183               	movf	(_arr1+5)& (0+255),w,b
  4823   001374  EC1C  F005         	call	_putch
  4824   001378                     
  4825                           ;download.c: 41:         putch(' ');
  4826   001378  0E20               	movlw	32
  4827   00137A  EC1C  F005         	call	_putch
  4828   00137E                     
  4829                           ;download.c: 42:         putch(arr1[6]);
  4830   00137E  0100               	movlb	0	; () banked
  4831   001380  5184               	movf	(_arr1+6)& (0+255),w,b
  4832   001382  EC1C  F005         	call	_putch
  4833   001386                     
  4834                           ;download.c: 43:         putch(arr1[7]);
  4835   001386  0100               	movlb	0	; () banked
  4836   001388  5185               	movf	(_arr1+7)& (0+255),w,b
  4837   00138A  EC1C  F005         	call	_putch
  4838   00138E                     
  4839                           ;download.c: 44:         putch(' ');
  4840   00138E  0E20               	movlw	32
  4841   001390  EC1C  F005         	call	_putch
  4842                           
  4843                           ;download.c: 45:         putch(arr1[8]);
  4844   001394  0100               	movlb	0	; () banked
  4845   001396  5186               	movf	(_arr1+8)& (0+255),w,b
  4846   001398  EC1C  F005         	call	_putch
  4847                           
  4848                           ;download.c: 46:         putch(arr1[9]);
  4849   00139C  0100               	movlb	0	; () banked
  4850   00139E  5187               	movf	(_arr1+9)& (0+255),w,b
  4851   0013A0  EC1C  F005         	call	_putch
  4852   0013A4                     
  4853                           ;download.c: 47:         puts("\n\r");
  4854   0013A4  0EFC               	movlw	low STR_13
  4855   0013A6  6E02               	movwf	puts@s^0,c
  4856   0013A8  0E2F               	movlw	high STR_13
  4857   0013AA  6E03               	movwf	(puts@s+1)^0,c
  4858   0013AC  ECB8  F005         	call	_puts	;wreg free
  4859   0013B0                     
  4860                           ;download.c: 48:     }
  4861   0013B0  4A04               	infsnz	download_log@j^0,f,c
  4862   0013B2  2A05               	incf	(download_log@j+1)^0,f,c
  4863   0013B4  BE05               	btfsc	(download_log@j+1)^0,7,c
  4864   0013B6  EFE6  F009         	goto	u3161
  4865   0013BA  5005               	movf	(download_log@j+1)^0,w,c
  4866   0013BC  E109               	bnz	u3160
  4867   0013BE  0E0A               	movlw	10
  4868   0013C0  5C04               	subwf	download_log@j^0,w,c
  4869   0013C2  A0D8               	btfss	status,0,c
  4870   0013C4  EFE6  F009         	goto	u3161
  4871   0013C8  EFE8  F009         	goto	u3160
  4872   0013CC                     u3161:
  4873   0013CC  EF7D  F009         	goto	l3778
  4874   0013D0                     u3160:
  4875   0013D0                     
  4876                           ;download.c: 51:     index = 1;
  4877   0013D0  0E01               	movlw	1
  4878   0013D2  0100               	movlb	0	; () banked
  4879   0013D4  6F7D               	movwf	download_log@index& (0+255),b
  4880                           
  4881                           ;download.c: 54:     main_f = 2;
  4882   0013D6  0E02               	movlw	2
  4883   0013D8  6E51               	movwf	_main_f^0,c
  4884   0013DA                     
  4885                           ; BSR set to: 0
  4886   0013DA  0012               	return		;funcret
  4887   0013DC                     __end_of_download_log:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function _read_ext_eeprom *****************
  4891 ;; Defined at:
  4892 ;;		line 21 in file "ext_eeprom.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  address         1    wreg     unsigned char 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;  address         1    1[COMRAM] unsigned char 
  4897 ;;  data            1    2[COMRAM] unsigned char 
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  1    wreg      unsigned char 
  4900 ;; Registers used:
  4901 ;;		wreg, status,2, cstack
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4907 ;;      Params:         0       0       0       0       0       0       0
  4908 ;;      Locals:         2       0       0       0       0       0       0
  4909 ;;      Temps:          0       0       0       0       0       0       0
  4910 ;;      Totals:         2       0       0       0       0       0       0
  4911 ;;Total ram usage:        2 bytes
  4912 ;; Hardware stack levels used: 1
  4913 ;; Hardware stack levels required when called: 3
  4914 ;; This function calls:
  4915 ;;		_i2c_read
  4916 ;;		_i2c_rep_start
  4917 ;;		_i2c_start
  4918 ;;		_i2c_stop
  4919 ;;		_i2c_write
  4920 ;; This function is called by:
  4921 ;;		_download_log
  4922 ;;		_setpassword
  4923 ;;		_view_log
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           	psect	text16
  4928   000B1C                     __ptext16:
  4929                           	callstack 0
  4930   000B1C                     _read_ext_eeprom:
  4931                           	callstack 26
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;incstack = 0
  4935                           ;read_ext_eeprom@address stored from wreg
  4936   000B1C  6E02               	movwf	read_ext_eeprom@address^0,c
  4937   000B1E                     
  4938                           ;ext_eeprom.c: 21: unsigned char read_ext_eeprom(unsigned char address);ext_eeprom.c: 22
      +                          : {;ext_eeprom.c: 23:  unsigned char data;;ext_eeprom.c: 25:  i2c_start();
  4939   000B1E  ECDC  F004         	call	_i2c_start	;wreg free
  4940   000B22                     
  4941                           ;ext_eeprom.c: 26:  i2c_write(0xA0);
  4942   000B22  0EA0               	movlw	160
  4943   000B24  ECEC  F004         	call	_i2c_write
  4944   000B28                     
  4945                           ;ext_eeprom.c: 27:  i2c_write(address);
  4946   000B28  5002               	movf	read_ext_eeprom@address^0,w,c
  4947   000B2A  ECEC  F004         	call	_i2c_write
  4948   000B2E                     
  4949                           ;ext_eeprom.c: 28:  i2c_rep_start();
  4950   000B2E  ECE8  F004         	call	_i2c_rep_start	;wreg free
  4951   000B32                     
  4952                           ;ext_eeprom.c: 29:  i2c_write(0xA1);
  4953   000B32  0EA1               	movlw	161
  4954   000B34  ECEC  F004         	call	_i2c_write
  4955                           
  4956                           ;ext_eeprom.c: 30:  data = i2c_read();
  4957   000B38  ECF2  F004         	call	_i2c_read	;wreg free
  4958   000B3C  6E03               	movwf	read_ext_eeprom@data^0,c
  4959   000B3E                     
  4960                           ;ext_eeprom.c: 31:  i2c_stop();
  4961   000B3E  ECE0  F004         	call	_i2c_stop	;wreg free
  4962                           
  4963                           ;ext_eeprom.c: 33:  return data;
  4964   000B42  5003               	movf	read_ext_eeprom@data^0,w,c
  4965   000B44  0012               	return		;funcret
  4966   000B46                     __end_of_read_ext_eeprom:
  4967                           	callstack 0
  4968                           
  4969 ;; *************** function _puts *****************
  4970 ;; Defined at:
  4971 ;;		line 40 in file "uart.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;  s               2    1[COMRAM] PTR const unsigned char 
  4974 ;;		 -> STR_14(3), STR_13(3), STR_12(23), 
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;		None
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  2    1[COMRAM] int 
  4979 ;; Registers used:
  4980 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4986 ;;      Params:         2       0       0       0       0       0       0
  4987 ;;      Locals:         0       0       0       0       0       0       0
  4988 ;;      Temps:          0       0       0       0       0       0       0
  4989 ;;      Totals:         2       0       0       0       0       0       0
  4990 ;;Total ram usage:        2 bytes
  4991 ;; Hardware stack levels used: 1
  4992 ;; Hardware stack levels required when called: 1
  4993 ;; This function calls:
  4994 ;;		_putch
  4995 ;; This function is called by:
  4996 ;;		_download_log
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text17
  5001   000B70                     __ptext17:
  5002                           	callstack 0
  5003   000B70                     _puts:
  5004                           	callstack 28
  5005   000B70                     
  5006                           ;uart.c: 40: int puts(const char *s);uart.c: 41: {;uart.c: 42:  while(*s)
  5007   000B70  EFC4  F005         	goto	l3238
  5008   000B74                     l3234:
  5009                           
  5010                           ;uart.c: 43:  {;uart.c: 44:   putch(*s++);
  5011   000B74  C002  FFF6         	movff	puts@s,tblptrl
  5012   000B78  C003  FFF7         	movff	puts@s+1,tblptrh
  5013   000B7C                     	if	0	;tblptru may be non-zero
  5014   000B7C                     	endif
  5015   000B7C                     	if	0	;tblptru may be non-zero
  5016   000B7C                     	endif
  5017   000B7C  0008               	tblrd		*
  5018   000B7E  50F5               	movf	tablat,w,c
  5019   000B80  EC1C  F005         	call	_putch
  5020   000B84  4A02               	infsnz	puts@s^0,f,c
  5021   000B86  2A03               	incf	(puts@s+1)^0,f,c
  5022   000B88                     l3238:
  5023                           
  5024                           ;uart.c: 42:  while(*s)
  5025   000B88  C002  FFF6         	movff	puts@s,tblptrl
  5026   000B8C  C003  FFF7         	movff	puts@s+1,tblptrh
  5027   000B90                     	if	0	;tblptru may be non-zero
  5028   000B90                     	endif
  5029   000B90                     	if	0	;tblptru may be non-zero
  5030   000B90                     	endif
  5031   000B90  0008               	tblrd		*
  5032   000B92  50F5               	movf	tablat,w,c
  5033   000B94  0900               	iorlw	0
  5034   000B96  A4D8               	btfss	status,2,c
  5035   000B98  EFD0  F005         	goto	u2341
  5036   000B9C  EFD2  F005         	goto	u2340
  5037   000BA0                     u2341:
  5038   000BA0  EFBA  F005         	goto	l3234
  5039   000BA4                     u2340:
  5040   000BA4  0012               	return		;funcret
  5041   000BA6                     __end_of_puts:
  5042                           	callstack 0
  5043                           
  5044 ;; *************** function _putch *****************
  5045 ;; Defined at:
  5046 ;;		line 29 in file "uart.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  byte            1    wreg     unsigned char 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  byte            1    0[COMRAM] unsigned char 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  1    wreg      void 
  5053 ;; Registers used:
  5054 ;;		wreg
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5060 ;;      Params:         0       0       0       0       0       0       0
  5061 ;;      Locals:         1       0       0       0       0       0       0
  5062 ;;      Temps:          0       0       0       0       0       0       0
  5063 ;;      Totals:         1       0       0       0       0       0       0
  5064 ;;Total ram usage:        1 bytes
  5065 ;; Hardware stack levels used: 1
  5066 ;; This function calls:
  5067 ;;		Nothing
  5068 ;; This function is called by:
  5069 ;;		_puts
  5070 ;;		_download_log
  5071 ;;		_getche
  5072 ;; This function uses a non-reentrant model
  5073 ;;
  5074                           
  5075                           	psect	text18
  5076   000A38                     __ptext18:
  5077                           	callstack 0
  5078   000A38                     _putch:
  5079                           	callstack 28
  5080                           
  5081                           ;incstack = 0
  5082                           ;putch@byte stored from wreg
  5083   000A38  6E01               	movwf	putch@byte^0,c
  5084   000A3A                     l456:
  5085                           
  5086                           ;uart.c: 33:  while(!TXIF)
  5087   000A3A  A89E               	btfss	3998,4,c	;volatile
  5088   000A3C  EF22  F005         	goto	u2081
  5089   000A40  EF24  F005         	goto	u2080
  5090   000A44                     u2081:
  5091   000A44  EF1D  F005         	goto	l456
  5092   000A48                     u2080:
  5093   000A48                     
  5094                           ;uart.c: 37:  TXREG = byte;
  5095   000A48  C001  FFAD         	movff	putch@byte,4013	;volatile
  5096   000A4C  0012               	return		;funcret
  5097   000A4E                     __end_of_putch:
  5098                           	callstack 0
  5099                           
  5100 ;; *************** function _dashboard *****************
  5101 ;; Defined at:
  5102 ;;		line 100 in file "dashboard.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;  key             1    wreg     unsigned char 
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;  key             1   27[COMRAM] unsigned char 
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  1    wreg      void 
  5109 ;; Registers used:
  5110 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5116 ;;      Params:         0       0       0       0       0       0       0
  5117 ;;      Locals:         1       0       0       0       0       0       0
  5118 ;;      Temps:          0       0       0       0       0       0       0
  5119 ;;      Totals:         1       0       0       0       0       0       0
  5120 ;;Total ram usage:        1 bytes
  5121 ;; Hardware stack levels used: 1
  5122 ;; Hardware stack levels required when called: 5
  5123 ;; This function calls:
  5124 ;;		_clcd_print
  5125 ;;		_display_time
  5126 ;;		_get_time
  5127 ;;		_read_switches
  5128 ;;		_speed
  5129 ;;		_store_event
  5130 ;; This function is called by:
  5131 ;;		_main
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           	psect	text19
  5136   001720                     __ptext19:
  5137                           	callstack 0
  5138   001720                     _dashboard:
  5139                           	callstack 25
  5140   001720                     l571:
  5141   001720                     
  5142                           ;dashboard.c: 103:     {;dashboard.c: 103:     {;dashboard.c: 105:         key = read_sw
      +                          itches(1);;dashboard.c: 105:         key = read_switches(1);
  5143   001720  0E01               	movlw	1
  5144   001722  EC19  F007         	call	_read_switches
  5145   001726  6E1C               	movwf	dashboard@key^0,c
  5146   001728                     
  5147                           ;dashboard.c: 108:         clcd_print("TIME", (0x80 + (2)));;dashboard.c: 108:         c
      +                          lcd_print("TIME", (0x80 + (2)));
  5148   001728  0EDC               	movlw	low STR_23
  5149   00172A  6E03               	movwf	clcd_print@data^0,c
  5150   00172C  0E2F               	movlw	high STR_23
  5151   00172E  6E04               	movwf	(clcd_print@data+1)^0,c
  5152   001730  0E82               	movlw	130
  5153   001732  6E05               	movwf	clcd_print@addr^0,c
  5154   001734  ECAD  F006         	call	_clcd_print	;wreg free
  5155   001738                     
  5156                           ;dashboard.c: 109:         clcd_print("EV", (0x80 + (9)));;dashboard.c: 109:         clc
      +                          d_print("EV", (0x80 + (9)));
  5157   001738  0EF9               	movlw	low STR_24
  5158   00173A  6E03               	movwf	clcd_print@data^0,c
  5159   00173C  0E2F               	movlw	high STR_24
  5160   00173E  6E04               	movwf	(clcd_print@data+1)^0,c
  5161   001740  0E89               	movlw	137
  5162   001742  6E05               	movwf	clcd_print@addr^0,c
  5163   001744  ECAD  F006         	call	_clcd_print	;wreg free
  5164   001748                     
  5165                           ;dashboard.c: 110:         clcd_print("SP", (0x80 + (12)));;dashboard.c: 110:         cl
      +                          cd_print("SP", (0x80 + (12)));
  5166   001748  0EF3               	movlw	low STR_25
  5167   00174A  6E03               	movwf	clcd_print@data^0,c
  5168   00174C  0E2F               	movlw	high STR_25
  5169   00174E  6E04               	movwf	(clcd_print@data+1)^0,c
  5170   001750  0E8C               	movlw	140
  5171   001752  6E05               	movwf	clcd_print@addr^0,c
  5172   001754  ECAD  F006         	call	_clcd_print	;wreg free
  5173   001758                     
  5174                           ;dashboard.c: 113:         get_time();;dashboard.c: 113:         get_time();
  5175   001758  EC54  F007         	call	_get_time	;wreg free
  5176                           
  5177                           ;dashboard.c: 114:         display_time();;dashboard.c: 114:         display_time();
  5178   00175C  EC01  F005         	call	_display_time	;wreg free
  5179   001760                     
  5180                           ;dashboard.c: 115:         speed();;dashboard.c: 115:         speed();
  5181   001760  EC3C  F008         	call	_speed	;wreg free
  5182   001764                     
  5183                           ;dashboard.c: 118:         if (key == 2);dashboard.c: 118:         if (key == 2)
  5184   001764  0E02               	movlw	2
  5185   001766  181C               	xorwf	dashboard@key^0,w,c
  5186   001768  A4D8               	btfss	status,2,c
  5187   00176A  EFB9  F00B         	goto	u2451
  5188   00176E  EFBB  F00B         	goto	u2450
  5189   001772                     u2451:
  5190   001772  EFCD  F00B         	goto	l3382
  5191   001776                     u2450:
  5192   001776                     
  5193                           ;dashboard.c: 119:         {;dashboard.c: 119:         {;dashboard.c: 121:             c
      +                          lear_f = 0;;dashboard.c: 121:             clear_f = 0;
  5194   001776  0E00               	movlw	0
  5195   001778  6E4C               	movwf	_clear_f^0,c
  5196   00177A                     
  5197                           ;dashboard.c: 122:             store_event(key);;dashboard.c: 122:             store_eve
      +                          nt(key);
  5198   00177A  501C               	movf	dashboard@key^0,w,c
  5199   00177C  ECF8  F00A         	call	_store_event
  5200   001780                     
  5201                           ;dashboard.c: 123:             if (i >= 0 && i < 5);dashboard.c: 123:             if (i 
      +                          >= 0 && i < 5)
  5202   001780  504A               	movf	(_i+1)^0,w,c
  5203   001782  E107               	bnz	u2461
  5204   001784  0E05               	movlw	5
  5205   001786  5C49               	subwf	_i^0,w,c
  5206   001788  B0D8               	btfsc	status,0,c
  5207   00178A  EFC9  F00B         	goto	u2461
  5208   00178E  EFCB  F00B         	goto	u2460
  5209   001792                     u2461:
  5210   001792  EFCD  F00B         	goto	l3382
  5211   001796                     u2460:
  5212   001796                     
  5213                           ;dashboard.c: 124:                 i++;;dashboard.c: 124:                 i++;
  5214   001796  4A49               	infsnz	_i^0,f,c
  5215   001798  2A4A               	incf	(_i+1)^0,f,c
  5216   00179A                     l3382:
  5217                           
  5218                           ;dashboard.c: 126:         if (key == 3);dashboard.c: 126:         if (key == 3)
  5219   00179A  0E03               	movlw	3
  5220   00179C  181C               	xorwf	dashboard@key^0,w,c
  5221   00179E  A4D8               	btfss	status,2,c
  5222   0017A0  EFD4  F00B         	goto	u2471
  5223   0017A4  EFD6  F00B         	goto	u2470
  5224   0017A8                     u2471:
  5225   0017A8  EFF4  F00B         	goto	l3394
  5226   0017AC                     u2470:
  5227   0017AC                     
  5228                           ;dashboard.c: 127:         {;dashboard.c: 127:         {;dashboard.c: 129:             c
      +                          lear_f = 0;;dashboard.c: 129:             clear_f = 0;
  5229   0017AC  0E00               	movlw	0
  5230   0017AE  6E4C               	movwf	_clear_f^0,c
  5231   0017B0                     
  5232                           ;dashboard.c: 130:             store_event(key);;dashboard.c: 130:             store_eve
      +                          nt(key);
  5233   0017B0  501C               	movf	dashboard@key^0,w,c
  5234   0017B2  ECF8  F00A         	call	_store_event
  5235   0017B6                     
  5236                           ;dashboard.c: 131:             if (i > 1 && i < 6);dashboard.c: 131:             if (i >
      +                           1 && i < 6)
  5237   0017B6  504A               	movf	(_i+1)^0,w,c
  5238   0017B8  E109               	bnz	u2480
  5239   0017BA  0E02               	movlw	2
  5240   0017BC  5C49               	subwf	_i^0,w,c
  5241   0017BE  A0D8               	btfss	status,0,c
  5242   0017C0  EFE4  F00B         	goto	u2481
  5243   0017C4  EFE6  F00B         	goto	u2480
  5244   0017C8                     u2481:
  5245   0017C8  EFF4  F00B         	goto	l3394
  5246   0017CC                     u2480:
  5247   0017CC  504A               	movf	(_i+1)^0,w,c
  5248   0017CE  E107               	bnz	u2491
  5249   0017D0  0E06               	movlw	6
  5250   0017D2  5C49               	subwf	_i^0,w,c
  5251   0017D4  B0D8               	btfsc	status,0,c
  5252   0017D6  EFEF  F00B         	goto	u2491
  5253   0017DA  EFF1  F00B         	goto	u2490
  5254   0017DE                     u2491:
  5255   0017DE  EFF4  F00B         	goto	l3394
  5256   0017E2                     u2490:
  5257   0017E2                     
  5258                           ;dashboard.c: 132:                 i--;;dashboard.c: 132:                 i--;
  5259   0017E2  0649               	decf	_i^0,f,c
  5260   0017E4  A0D8               	btfss	status,0,c
  5261   0017E6  064A               	decf	(_i+1)^0,f,c
  5262   0017E8                     l3394:
  5263                           
  5264                           ;dashboard.c: 134:         if (key == 1);dashboard.c: 134:         if (key == 1)
  5265   0017E8  041C               	decf	dashboard@key^0,w,c
  5266   0017EA  A4D8               	btfss	status,2,c
  5267   0017EC  EFFA  F00B         	goto	u2501
  5268   0017F0  EFFC  F00B         	goto	u2500
  5269   0017F4                     u2501:
  5270   0017F4  EF05  F00C         	goto	l3402
  5271   0017F8                     u2500:
  5272   0017F8                     
  5273                           ;dashboard.c: 135:         {;dashboard.c: 135:         {;dashboard.c: 137:             c
      +                          lear_f = 0;;dashboard.c: 137:             clear_f = 0;
  5274   0017F8  0E00               	movlw	0
  5275   0017FA  6E4C               	movwf	_clear_f^0,c
  5276   0017FC                     
  5277                           ;dashboard.c: 138:             store_event(key);;dashboard.c: 138:             store_eve
      +                          nt(key);
  5278   0017FC  501C               	movf	dashboard@key^0,w,c
  5279   0017FE  ECF8  F00A         	call	_store_event
  5280   001802                     
  5281                           ;dashboard.c: 139:             i = 6;;dashboard.c: 139:             i = 6;
  5282   001802  0E00               	movlw	0
  5283   001804  6E4A               	movwf	(_i+1)^0,c
  5284   001806  0E06               	movlw	6
  5285   001808  6E49               	movwf	_i^0,c
  5286   00180A                     l3402:
  5287                           
  5288                           ;dashboard.c: 141:         if (i == 6 && (key == 2 || key == 3));dashboard.c: 141:      
      +                             if (i == 6 && (key == 2 || key == 3))
  5289   00180A  0E06               	movlw	6
  5290   00180C  1849               	xorwf	_i^0,w,c
  5291   00180E  104A               	iorwf	(_i+1)^0,w,c
  5292   001810  A4D8               	btfss	status,2,c
  5293   001812  EF0D  F00C         	goto	u2511
  5294   001816  EF0F  F00C         	goto	u2510
  5295   00181A                     u2511:
  5296   00181A  EF25  F00C         	goto	l3410
  5297   00181E                     u2510:
  5298   00181E  0E02               	movlw	2
  5299   001820  181C               	xorwf	dashboard@key^0,w,c
  5300   001822  B4D8               	btfsc	status,2,c
  5301   001824  EF16  F00C         	goto	u2521
  5302   001828  EF18  F00C         	goto	u2520
  5303   00182C                     u2521:
  5304   00182C  EF21  F00C         	goto	l3408
  5305   001830                     u2520:
  5306   001830  0E03               	movlw	3
  5307   001832  181C               	xorwf	dashboard@key^0,w,c
  5308   001834  A4D8               	btfss	status,2,c
  5309   001836  EF1F  F00C         	goto	u2531
  5310   00183A  EF21  F00C         	goto	u2530
  5311   00183E                     u2531:
  5312   00183E  EF25  F00C         	goto	l3410
  5313   001842                     u2530:
  5314   001842                     l3408:
  5315                           
  5316                           ;dashboard.c: 142:             i = 2;;dashboard.c: 142:             i = 2;
  5317   001842  0E00               	movlw	0
  5318   001844  6E4A               	movwf	(_i+1)^0,c
  5319   001846  0E02               	movlw	2
  5320   001848  6E49               	movwf	_i^0,c
  5321   00184A                     l3410:
  5322                           
  5323                           ;dashboard.c: 145:         clcd_print(gear[i], (0xC0 + (9)));;dashboard.c: 145:         
      +                          clcd_print(gear[i], (0xC0 + (9)));
  5324   00184A  90D8               	bcf	status,0,c
  5325   00184C  3449               	rlcf	_i^0,w,c
  5326   00184E  6ED9               	movwf	fsr2l,c
  5327   001850  344A               	rlcf	(_i+1)^0,w,c
  5328   001852  6EDA               	movwf	fsr2h,c
  5329   001854  0E60               	movlw	low _gear
  5330   001856  26D9               	addwf	fsr2l,f,c
  5331   001858  0E00               	movlw	high _gear
  5332   00185A  22DA               	addwfc	fsr2h,f,c
  5333   00185C  CFDE F003          	movff	postinc2,clcd_print@data
  5334   001860  CFDD F004          	movff	postdec2,clcd_print@data+1
  5335   001864  0EC9               	movlw	201
  5336   001866  6E05               	movwf	clcd_print@addr^0,c
  5337   001868  ECAD  F006         	call	_clcd_print	;wreg free
  5338   00186C                     
  5339                           ;dashboard.c: 148:         if (key == 5);dashboard.c: 148:         if (key == 5)
  5340   00186C  0E05               	movlw	5
  5341   00186E  181C               	xorwf	dashboard@key^0,w,c
  5342   001870  A4D8               	btfss	status,2,c
  5343   001872  EF3D  F00C         	goto	u2541
  5344   001876  EF3F  F00C         	goto	u2540
  5345   00187A                     u2541:
  5346   00187A  EF90  F00B         	goto	l571
  5347   00187E                     u2540:
  5348   00187E                     
  5349                           ;dashboard.c: 149:         {;dashboard.c: 149:         {;dashboard.c: 151:             m
      +                          ain_f = 1;;dashboard.c: 151:             main_f = 1;
  5350   00187E  0E01               	movlw	1
  5351   001880  6E51               	movwf	_main_f^0,c
  5352   001882  0012               	return		;funcret
  5353   001884                     __end_of_dashboard:
  5354                           	callstack 0
  5355                           
  5356 ;; *************** function _store_event *****************
  5357 ;; Defined at:
  5358 ;;		line 21 in file "dashboard.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;  key             1    wreg     unsigned char 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  key             1    0[COMRAM] unsigned char 
  5363 ;;  i               1   26[COMRAM] unsigned char 
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  1    wreg      void 
  5366 ;; Registers used:
  5367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5373 ;;      Params:         0       0       0       0       0       0       0
  5374 ;;      Locals:         1       0       0       0       0       0       0
  5375 ;;      Temps:          2       0       0       0       0       0       0
  5376 ;;      Totals:         3       0       0       0       0       0       0
  5377 ;;Total ram usage:        3 bytes
  5378 ;; Hardware stack levels used: 1
  5379 ;; Hardware stack levels required when called: 3
  5380 ;; This function calls:
  5381 ;;		___aldiv
  5382 ;;		___almod
  5383 ;;		_write_ext_eeprom
  5384 ;; This function is called by:
  5385 ;;		_dashboard
  5386 ;;		_settime
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text20
  5391   0015F0                     __ptext20:
  5392                           	callstack 0
  5393   0015F0                     _store_event:
  5394                           	callstack 26
  5395   0015F0                     
  5396                           ;dashboard.c: 21: void store_event(char key);dashboard.c: 21: void store_event(char key)
      +                          ;dashboard.c: 22: {;dashboard.c: 22: {;dashboard.c: 25:     arr[0] = time[0];;dashboard.
      +                          c: 25:     arr[0] = time[0];
  5397   0015F0  C052  F089         	movff	_time,_arr
  5398                           
  5399                           ;dashboard.c: 26:     arr[1] = time[1];;dashboard.c: 26:     arr[1] = time[1];
  5400   0015F4  C053  F08A         	movff	_time+1,_arr+1
  5401                           
  5402                           ;dashboard.c: 27:     arr[2] = time[3];;dashboard.c: 27:     arr[2] = time[3];
  5403   0015F8  C055  F08B         	movff	_time+3,_arr+2
  5404                           
  5405                           ;dashboard.c: 28:     arr[3] = time[4];;dashboard.c: 28:     arr[3] = time[4];
  5406   0015FC  C056  F08C         	movff	_time+4,_arr+3
  5407                           
  5408                           ;dashboard.c: 29:     arr[4] = time[6];;dashboard.c: 29:     arr[4] = time[6];
  5409   001600  C058  F08D         	movff	_time+6,_arr+4
  5410                           
  5411                           ;dashboard.c: 30:     arr[5] = time[7];;dashboard.c: 30:     arr[5] = time[7];
  5412   001604  C059  F08E         	movff	_time+7,_arr+5
  5413   001608                     
  5414                           ;dashboard.c: 31:     arr[6] = gear[i][0];;dashboard.c: 31:     arr[6] = gear[i][0];
  5415   001608  90D8               	bcf	status,0,c
  5416   00160A  3449               	rlcf	_i^0,w,c
  5417   00160C  6ED9               	movwf	fsr2l,c
  5418   00160E  344A               	rlcf	(_i+1)^0,w,c
  5419   001610  6EDA               	movwf	fsr2h,c
  5420   001612  0E60               	movlw	low _gear
  5421   001614  26D9               	addwf	fsr2l,f,c
  5422   001616  0E00               	movlw	high _gear
  5423   001618  22DA               	addwfc	fsr2h,f,c
  5424   00161A  CFDE FFF6          	movff	postinc2,tblptrl
  5425   00161E  CFDD FFF7          	movff	postdec2,tblptrh
  5426   001622                     	if	0	;tblptru may be non-zero
  5427   001622                     	endif
  5428   001622                     	if	0	;tblptru may be non-zero
  5429   001622                     	endif
  5430   001622  0008               	tblrd		*
  5431   001624  CFF5 F08F          	movff	tablat,_arr+6
  5432                           
  5433                           ;dashboard.c: 32:     arr[7] = gear[i][1];;dashboard.c: 32:     arr[7] = gear[i][1];
  5434   001628  90D8               	bcf	status,0,c
  5435   00162A  3449               	rlcf	_i^0,w,c
  5436   00162C  6ED9               	movwf	fsr2l,c
  5437   00162E  344A               	rlcf	(_i+1)^0,w,c
  5438   001630  6EDA               	movwf	fsr2h,c
  5439   001632  0E60               	movlw	low _gear
  5440   001634  26D9               	addwf	fsr2l,f,c
  5441   001636  0E00               	movlw	high _gear
  5442   001638  22DA               	addwfc	fsr2h,f,c
  5443   00163A  CFDE F019          	movff	postinc2,??_store_event
  5444   00163E  CFDD F01A          	movff	postdec2,??_store_event+1
  5445   001642  0E01               	movlw	1
  5446   001644  2619               	addwf	??_store_event^0,f,c
  5447   001646  0E00               	movlw	0
  5448   001648  221A               	addwfc	(??_store_event+1)^0,f,c
  5449   00164A  C019  FFF6         	movff	??_store_event,tblptrl
  5450   00164E  C01A  FFF7         	movff	??_store_event+1,tblptrh
  5451   001652                     	if	0	;tblptru may be non-zero
  5452   001652                     	endif
  5453   001652                     	if	0	;tblptru may be non-zero
  5454   001652                     	endif
  5455   001652  0008               	tblrd		*
  5456   001654  CFF5 F090          	movff	tablat,_arr+7
  5457   001658                     
  5458                           ;dashboard.c: 33:     arr[8] = ((adc_v / 10 % 10) + 48);;dashboard.c: 33:     arr[8] = (
      +                          (adc_v / 10 % 10) + 48);
  5459   001658  0E0A               	movlw	10
  5460   00165A  6E05               	movwf	___aldiv@divisor^0,c
  5461   00165C  0E00               	movlw	0
  5462   00165E  6E06               	movwf	(___aldiv@divisor+1)^0,c
  5463   001660  0E00               	movlw	0
  5464   001662  6E07               	movwf	(___aldiv@divisor+2)^0,c
  5465   001664  0E00               	movlw	0
  5466   001666  6E08               	movwf	(___aldiv@divisor+3)^0,c
  5467   001668  C03D  F001         	movff	_adc_v,___aldiv@dividend
  5468   00166C  C03E  F002         	movff	_adc_v+1,___aldiv@dividend+1
  5469   001670  C03F  F003         	movff	_adc_v+2,___aldiv@dividend+2
  5470   001674  C040  F004         	movff	_adc_v+3,___aldiv@dividend+3
  5471   001678  EC72  F00A         	call	___aldiv	;wreg free
  5472   00167C  C001  F00F         	movff	?___aldiv,___almod@dividend
  5473   001680  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
  5474   001684  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
  5475   001688  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
  5476   00168C  0E0A               	movlw	10
  5477   00168E  6E13               	movwf	___almod@divisor^0,c
  5478   001690  0E00               	movlw	0
  5479   001692  6E14               	movwf	(___almod@divisor+1)^0,c
  5480   001694  0E00               	movlw	0
  5481   001696  6E15               	movwf	(___almod@divisor+2)^0,c
  5482   001698  0E00               	movlw	0
  5483   00169A  6E16               	movwf	(___almod@divisor+3)^0,c
  5484   00169C  ECF7  F008         	call	___almod	;wreg free
  5485   0016A0  500F               	movf	?___almod^0,w,c
  5486   0016A2  0F30               	addlw	48
  5487   0016A4  0100               	movlb	0	; () banked
  5488   0016A6  6F91               	movwf	(_arr+8)& (0+255),b
  5489   0016A8                     
  5490                           ; BSR set to: 0
  5491                           ;dashboard.c: 34:     arr[9] = ((adc_v % 10) + 48);;dashboard.c: 34:     arr[9] = ((adc_
      +                          v % 10) + 48);
  5492   0016A8  C03D  F00F         	movff	_adc_v,___almod@dividend
  5493   0016AC  C03E  F010         	movff	_adc_v+1,___almod@dividend+1
  5494   0016B0  C03F  F011         	movff	_adc_v+2,___almod@dividend+2
  5495   0016B4  C040  F012         	movff	_adc_v+3,___almod@dividend+3
  5496   0016B8  0E0A               	movlw	10
  5497   0016BA  6E13               	movwf	___almod@divisor^0,c
  5498   0016BC  0E00               	movlw	0
  5499   0016BE  6E14               	movwf	(___almod@divisor+1)^0,c
  5500   0016C0  0E00               	movlw	0
  5501   0016C2  6E15               	movwf	(___almod@divisor+2)^0,c
  5502   0016C4  0E00               	movlw	0
  5503   0016C6  6E16               	movwf	(___almod@divisor+3)^0,c
  5504   0016C8  ECF7  F008         	call	___almod	;wreg free
  5505   0016CC  500F               	movf	?___almod^0,w,c
  5506   0016CE  0F30               	addlw	48
  5507   0016D0  0100               	movlb	0	; () banked
  5508   0016D2  6F92               	movwf	(_arr+9)& (0+255),b
  5509   0016D4                     
  5510                           ; BSR set to: 0
  5511                           ;dashboard.c: 37:     for (char i = 0; i < 10; i++);dashboard.c: 37:     for (char i = 0
      +                          ; i < 10; i++)
  5512   0016D4  0E00               	movlw	0
  5513   0016D6  6E1B               	movwf	store_event@i^0,c
  5514   0016D8                     l3254:
  5515                           
  5516                           ;dashboard.c: 38:         write_ext_eeprom((lap * 10) + i, arr[i]);;dashboard.c: 38:    
      +                               write_ext_eeprom((lap * 10) + i, arr[i]);
  5517   0016D8  0E89               	movlw	low _arr
  5518   0016DA  241B               	addwf	store_event@i^0,w,c
  5519   0016DC  6ED9               	movwf	fsr2l,c
  5520   0016DE  6ADA               	clrf	fsr2h,c
  5521   0016E0  0E00               	movlw	high _arr
  5522   0016E2  22DA               	addwfc	fsr2h,f,c
  5523   0016E4  50DF               	movf	indf2,w,c
  5524   0016E6  6E02               	movwf	write_ext_eeprom@data^0,c
  5525   0016E8  505D               	movf	_lap^0,w,c
  5526   0016EA  0D0A               	mullw	10
  5527   0016EC  50F3               	movf	243,w,c
  5528   0016EE  241B               	addwf	store_event@i^0,w,c
  5529   0016F0  EC0B  F006         	call	_write_ext_eeprom
  5530   0016F4  2A1B               	incf	store_event@i^0,f,c
  5531   0016F6  0E09               	movlw	9
  5532   0016F8  641B               	cpfsgt	store_event@i^0,c
  5533   0016FA  EF81  F00B         	goto	u2351
  5534   0016FE  EF83  F00B         	goto	u2350
  5535   001702                     u2351:
  5536   001702  EF6C  F00B         	goto	l3254
  5537   001706                     u2350:
  5538   001706                     
  5539                           ;dashboard.c: 41:     lap++;;dashboard.c: 41:     lap++;
  5540   001706  2A5D               	incf	_lap^0,f,c
  5541   001708                     
  5542                           ;dashboard.c: 42:     if (lap == 11);dashboard.c: 42:     if (lap == 11)
  5543   001708  0E0B               	movlw	11
  5544   00170A  185D               	xorwf	_lap^0,w,c
  5545   00170C  A4D8               	btfss	status,2,c
  5546   00170E  EF8B  F00B         	goto	u2361
  5547   001712  EF8D  F00B         	goto	u2360
  5548   001716                     u2361:
  5549   001716  EF8F  F00B         	goto	l556
  5550   00171A                     u2360:
  5551   00171A                     
  5552                           ;dashboard.c: 43:     {;dashboard.c: 43:     {;dashboard.c: 44:         lap = 1;;dashboa
      +                          rd.c: 44:         lap = 1;
  5553   00171A  0E01               	movlw	1
  5554   00171C  6E5D               	movwf	_lap^0,c
  5555   00171E                     l556:
  5556   00171E  0012               	return		;funcret
  5557   001720                     __end_of_store_event:
  5558                           	callstack 0
  5559                           
  5560 ;; *************** function _speed *****************
  5561 ;; Defined at:
  5562 ;;		line 49 in file "dashboard.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;		None
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  r               2   24[COMRAM] int 
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  1    wreg      void 
  5569 ;; Registers used:
  5570 ;;		wreg, status,2, status,0, cstack
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5576 ;;      Params:         0       0       0       0       0       0       0
  5577 ;;      Locals:         2       0       0       0       0       0       0
  5578 ;;      Temps:          0       0       0       0       0       0       0
  5579 ;;      Totals:         2       0       0       0       0       0       0
  5580 ;;Total ram usage:        2 bytes
  5581 ;; Hardware stack levels used: 1
  5582 ;; Hardware stack levels required when called: 2
  5583 ;; This function calls:
  5584 ;;		___aldiv
  5585 ;;		___almod
  5586 ;;		___awdiv
  5587 ;;		_clcd_putch
  5588 ;;		_read_adc
  5589 ;; This function is called by:
  5590 ;;		_dashboard
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           	psect	text21
  5595   001078                     __ptext21:
  5596                           	callstack 0
  5597   001078                     _speed:
  5598                           	callstack 27
  5599   001078                     
  5600                           ;dashboard.c: 53:     adc_v = read_adc(0x04);;dashboard.c: 53:     adc_v = read_adc(0x04
      +                          );
  5601   001078  0E04               	movlw	4
  5602   00107A  EC2B  F006         	call	_read_adc
  5603   00107E  C001  F03D         	movff	?_read_adc,_adc_v
  5604   001082  C002  F03E         	movff	?_read_adc+1,_adc_v+1
  5605   001086  6A3F               	clrf	(_adc_v+2)^0,c
  5606   001088  6A40               	clrf	(_adc_v+3)^0,c
  5607   00108A                     
  5608                           ;dashboard.c: 55:     if (adc_v <= 1000);dashboard.c: 55:     if (adc_v <= 1000)
  5609   00108A  BE40               	btfsc	(_adc_v+3)^0,7,c
  5610   00108C  EF56  F008         	goto	u2370
  5611   001090  5040               	movf	(_adc_v+3)^0,w,c
  5612   001092  103F               	iorwf	(_adc_v+2)^0,w,c
  5613   001094  E109               	bnz	u2371
  5614   001096  0EE9               	movlw	233
  5615   001098  5C3D               	subwf	_adc_v^0,w,c
  5616   00109A  0E03               	movlw	3
  5617   00109C  583E               	subwfb	(_adc_v+1)^0,w,c
  5618   00109E  B0D8               	btfsc	status,0,c
  5619   0010A0  EF54  F008         	goto	u2371
  5620   0010A4  EF56  F008         	goto	u2370
  5621   0010A8                     u2371:
  5622   0010A8  EF94  F008         	goto	l560
  5623   0010AC                     u2370:
  5624   0010AC                     
  5625                           ;dashboard.c: 56:     {;dashboard.c: 56:     {;dashboard.c: 57:         clcd_putch('0' +
      +                           (adc_v / 100), (0xC0 + (12)));;dashboard.c: 57:         clcd_putch('0' + (adc_v / 100),
      +                           (0xC0 + (12)));
  5626   0010AC  0ECC               	movlw	204
  5627   0010AE  6E0F               	movwf	clcd_putch@addr^0,c
  5628   0010B0  C03D  F001         	movff	_adc_v,___aldiv@dividend
  5629   0010B4  C03E  F002         	movff	_adc_v+1,___aldiv@dividend+1
  5630   0010B8  C03F  F003         	movff	_adc_v+2,___aldiv@dividend+2
  5631   0010BC  C040  F004         	movff	_adc_v+3,___aldiv@dividend+3
  5632   0010C0  0E64               	movlw	100
  5633   0010C2  6E05               	movwf	___aldiv@divisor^0,c
  5634   0010C4  0E00               	movlw	0
  5635   0010C6  6E06               	movwf	(___aldiv@divisor+1)^0,c
  5636   0010C8  0E00               	movlw	0
  5637   0010CA  6E07               	movwf	(___aldiv@divisor+2)^0,c
  5638   0010CC  0E00               	movlw	0
  5639   0010CE  6E08               	movwf	(___aldiv@divisor+3)^0,c
  5640   0010D0  EC72  F00A         	call	___aldiv	;wreg free
  5641   0010D4  5001               	movf	?___aldiv^0,w,c
  5642   0010D6  0F30               	addlw	48
  5643   0010D8  EC32  F005         	call	_clcd_putch
  5644                           
  5645                           ;dashboard.c: 58:         int r = adc_v % 100;;dashboard.c: 58:         int r = adc_v % 
      +                          100;
  5646   0010DC  C03D  F00F         	movff	_adc_v,___almod@dividend
  5647   0010E0  C03E  F010         	movff	_adc_v+1,___almod@dividend+1
  5648   0010E4  C03F  F011         	movff	_adc_v+2,___almod@dividend+2
  5649   0010E8  C040  F012         	movff	_adc_v+3,___almod@dividend+3
  5650   0010EC  0E64               	movlw	100
  5651   0010EE  6E13               	movwf	___almod@divisor^0,c
  5652   0010F0  0E00               	movlw	0
  5653   0010F2  6E14               	movwf	(___almod@divisor+1)^0,c
  5654   0010F4  0E00               	movlw	0
  5655   0010F6  6E15               	movwf	(___almod@divisor+2)^0,c
  5656   0010F8  0E00               	movlw	0
  5657   0010FA  6E16               	movwf	(___almod@divisor+3)^0,c
  5658   0010FC  ECF7  F008         	call	___almod	;wreg free
  5659   001100  C00F  F019         	movff	?___almod,speed@r
  5660   001104  C010  F01A         	movff	?___almod+1,speed@r+1
  5661                           
  5662                           ;dashboard.c: 59:         clcd_putch('0' + (r / 10), (0xC0 + (13)));;dashboard.c: 59:   
      +                                clcd_putch('0' + (r / 10), (0xC0 + (13)));
  5663   001108  0ECD               	movlw	205
  5664   00110A  6E0F               	movwf	clcd_putch@addr^0,c
  5665   00110C  C019  F001         	movff	speed@r,___awdiv@dividend
  5666   001110  C01A  F002         	movff	speed@r+1,___awdiv@dividend+1
  5667   001114  0E00               	movlw	0
  5668   001116  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5669   001118  0E0A               	movlw	10
  5670   00111A  6E03               	movwf	___awdiv@divisor^0,c
  5671   00111C  EC95  F008         	call	___awdiv	;wreg free
  5672   001120  5001               	movf	?___awdiv^0,w,c
  5673   001122  0F30               	addlw	48
  5674   001124  EC32  F005         	call	_clcd_putch
  5675   001128                     l560:
  5676   001128  0012               	return		;funcret
  5677   00112A                     __end_of_speed:
  5678                           	callstack 0
  5679                           
  5680 ;; *************** function _read_adc *****************
  5681 ;; Defined at:
  5682 ;;		line 43 in file "adc.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;  channel         1    wreg     unsigned char 
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;  channel         1    6[COMRAM] unsigned char 
  5687 ;;  reg_val         2    4[COMRAM] unsigned short 
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  2    0[COMRAM] unsigned short 
  5690 ;; Registers used:
  5691 ;;		wreg, status,2, status,0
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5697 ;;      Params:         2       0       0       0       0       0       0
  5698 ;;      Locals:         3       0       0       0       0       0       0
  5699 ;;      Temps:          2       0       0       0       0       0       0
  5700 ;;      Totals:         7       0       0       0       0       0       0
  5701 ;;Total ram usage:        7 bytes
  5702 ;; Hardware stack levels used: 1
  5703 ;; This function calls:
  5704 ;;		Nothing
  5705 ;; This function is called by:
  5706 ;;		_speed
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text22
  5711   000C56                     __ptext22:
  5712                           	callstack 0
  5713   000C56                     _read_adc:
  5714                           	callstack 28
  5715                           
  5716                           ;incstack = 0
  5717                           ;read_adc@channel stored from wreg
  5718   000C56  6E07               	movwf	read_adc@channel^0,c
  5719   000C58                     
  5720                           ;adc.c: 43: unsigned short read_adc(unsigned char channel);adc.c: 43: unsigned short rea
      +                          d_adc(unsigned char channel);adc.c: 44: {;adc.c: 44: {;adc.c: 45:  unsigned short reg_va
      +                          l;;adc.c: 45:  unsigned short reg_val;;adc.c: 48:  ADCON0 = (ADCON0 & 0xC3) | (channel <
      +                          < 2);;adc.c: 48:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
  5721   000C58  C007  F003         	movff	read_adc@channel,??_read_adc
  5722   000C5C  90D8               	bcf	status,0,c
  5723   000C5E  3603               	rlcf	??_read_adc^0,f,c
  5724   000C60  90D8               	bcf	status,0,c
  5725   000C62  3603               	rlcf	??_read_adc^0,f,c
  5726   000C64  50C2               	movf	194,w,c	;volatile
  5727   000C66  0BC3               	andlw	195
  5728   000C68  1003               	iorwf	??_read_adc^0,w,c
  5729   000C6A  6EC2               	movwf	194,c	;volatile
  5730   000C6C                     
  5731                           ;adc.c: 51:  GO = 1;;adc.c: 51:  GO = 1;
  5732   000C6C  82C2               	bsf	4034,1,c	;volatile
  5733   000C6E                     l117:
  5734   000C6E  B2C2               	btfsc	4034,1,c	;volatile
  5735   000C70  EF3C  F006         	goto	u1921
  5736   000C74  EF3E  F006         	goto	u1920
  5737   000C78                     u1921:
  5738   000C78  EF37  F006         	goto	l117
  5739   000C7C                     u1920:
  5740   000C7C                     
  5741                           ;adc.c: 53:  reg_val = (ADRESH << 8) | ADRESL;;adc.c: 53:  reg_val = (ADRESH << 8) | ADR
      +                          ESL;
  5742   000C7C  50C3               	movf	195,w,c	;volatile
  5743   000C7E  CFC4 F003          	movff	4036,??_read_adc	;volatile
  5744   000C82  6A04               	clrf	(??_read_adc+1)^0,c
  5745   000C84  C003  F004         	movff	??_read_adc,??_read_adc+1
  5746   000C88  6A03               	clrf	??_read_adc^0,c
  5747   000C8A  1003               	iorwf	??_read_adc^0,w,c
  5748   000C8C  6E05               	movwf	read_adc@reg_val^0,c
  5749   000C8E  5004               	movf	(??_read_adc+1)^0,w,c
  5750   000C90  6E06               	movwf	(read_adc@reg_val+1)^0,c
  5751   000C92                     
  5752                           ;adc.c: 55:  return reg_val;;adc.c: 55:  return reg_val;
  5753   000C92  C005  F001         	movff	read_adc@reg_val,?_read_adc
  5754   000C96  C006  F002         	movff	read_adc@reg_val+1,?_read_adc+1
  5755   000C9A  0012               	return		;funcret
  5756   000C9C                     __end_of_read_adc:
  5757                           	callstack 0
  5758                           
  5759 ;; *************** function ___awdiv *****************
  5760 ;; Defined at:
  5761 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  dividend        2    0[COMRAM] int 
  5764 ;;  divisor         2    2[COMRAM] int 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  quotient        2    6[COMRAM] int 
  5767 ;;  sign            1    5[COMRAM] unsigned char 
  5768 ;;  counter         1    4[COMRAM] unsigned char 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  2    0[COMRAM] int 
  5771 ;; Registers used:
  5772 ;;		wreg, status,2, status,0
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5778 ;;      Params:         4       0       0       0       0       0       0
  5779 ;;      Locals:         4       0       0       0       0       0       0
  5780 ;;      Temps:          0       0       0       0       0       0       0
  5781 ;;      Totals:         8       0       0       0       0       0       0
  5782 ;;Total ram usage:        8 bytes
  5783 ;; Hardware stack levels used: 1
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_speed
  5788 ;;		_settime
  5789 ;;		_setpassword
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text23
  5794   00112A                     __ptext23:
  5795                           	callstack 0
  5796   00112A                     ___awdiv:
  5797                           	callstack 29
  5798   00112A  0E00               	movlw	0
  5799   00112C  6E06               	movwf	___awdiv@sign^0,c
  5800   00112E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5801   001130  EF9E  F008         	goto	u2210
  5802   001134  EF9C  F008         	goto	u2211
  5803   001138                     u2211:
  5804   001138  EFA4  F008         	goto	l3092
  5805   00113C                     u2210:
  5806   00113C  6C03               	negf	___awdiv@divisor^0,c
  5807   00113E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5808   001140  B0D8               	btfsc	status,0,c
  5809   001142  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5810   001144  0E01               	movlw	1
  5811   001146  6E06               	movwf	___awdiv@sign^0,c
  5812   001148                     l3092:
  5813   001148  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5814   00114A  EFAB  F008         	goto	u2220
  5815   00114E  EFA9  F008         	goto	u2221
  5816   001152                     u2221:
  5817   001152  EFB1  F008         	goto	l3098
  5818   001156                     u2220:
  5819   001156  6C01               	negf	___awdiv@dividend^0,c
  5820   001158  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5821   00115A  B0D8               	btfsc	status,0,c
  5822   00115C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5823   00115E  0E01               	movlw	1
  5824   001160  1A06               	xorwf	___awdiv@sign^0,f,c
  5825   001162                     l3098:
  5826   001162  0E00               	movlw	0
  5827   001164  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5828   001166  0E00               	movlw	0
  5829   001168  6E07               	movwf	___awdiv@quotient^0,c
  5830   00116A  5003               	movf	___awdiv@divisor^0,w,c
  5831   00116C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5832   00116E  B4D8               	btfsc	status,2,c
  5833   001170  EFBC  F008         	goto	u2231
  5834   001174  EFBE  F008         	goto	u2230
  5835   001178                     u2231:
  5836   001178  EFE6  F008         	goto	l3120
  5837   00117C                     u2230:
  5838   00117C  0E01               	movlw	1
  5839   00117E  6E05               	movwf	___awdiv@counter^0,c
  5840   001180  EFC6  F008         	goto	l3106
  5841   001184                     l3104:
  5842   001184  90D8               	bcf	status,0,c
  5843   001186  3603               	rlcf	___awdiv@divisor^0,f,c
  5844   001188  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5845   00118A  2A05               	incf	___awdiv@counter^0,f,c
  5846   00118C                     l3106:
  5847   00118C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5848   00118E  EFCB  F008         	goto	u2241
  5849   001192  EFCD  F008         	goto	u2240
  5850   001196                     u2241:
  5851   001196  EFC2  F008         	goto	l3104
  5852   00119A                     u2240:
  5853   00119A                     l3108:
  5854   00119A  90D8               	bcf	status,0,c
  5855   00119C  3607               	rlcf	___awdiv@quotient^0,f,c
  5856   00119E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5857   0011A0  5003               	movf	___awdiv@divisor^0,w,c
  5858   0011A2  5C01               	subwf	___awdiv@dividend^0,w,c
  5859   0011A4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5860   0011A6  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5861   0011A8  A0D8               	btfss	status,0,c
  5862   0011AA  EFD9  F008         	goto	u2251
  5863   0011AE  EFDB  F008         	goto	u2250
  5864   0011B2                     u2251:
  5865   0011B2  EFE0  F008         	goto	l3116
  5866   0011B6                     u2250:
  5867   0011B6  5003               	movf	___awdiv@divisor^0,w,c
  5868   0011B8  5E01               	subwf	___awdiv@dividend^0,f,c
  5869   0011BA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5870   0011BC  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5871   0011BE  8007               	bsf	___awdiv@quotient^0,0,c
  5872   0011C0                     l3116:
  5873   0011C0  90D8               	bcf	status,0,c
  5874   0011C2  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5875   0011C4  3203               	rrcf	___awdiv@divisor^0,f,c
  5876   0011C6  2E05               	decfsz	___awdiv@counter^0,f,c
  5877   0011C8  EFCD  F008         	goto	l3108
  5878   0011CC                     l3120:
  5879   0011CC  5006               	movf	___awdiv@sign^0,w,c
  5880   0011CE  B4D8               	btfsc	status,2,c
  5881   0011D0  EFEC  F008         	goto	u2261
  5882   0011D4  EFEE  F008         	goto	u2260
  5883   0011D8                     u2261:
  5884   0011D8  EFF2  F008         	goto	l3124
  5885   0011DC                     u2260:
  5886   0011DC  6C07               	negf	___awdiv@quotient^0,c
  5887   0011DE  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5888   0011E0  B0D8               	btfsc	status,0,c
  5889   0011E2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5890   0011E4                     l3124:
  5891   0011E4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5892   0011E8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5893   0011EC  0012               	return		;funcret
  5894   0011EE                     __end_of___awdiv:
  5895                           	callstack 0
  5896                           
  5897 ;; *************** function ___almod *****************
  5898 ;; Defined at:
  5899 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\almod.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;  dividend        4   14[COMRAM] long 
  5902 ;;  divisor         4   18[COMRAM] long 
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;  sign            1   23[COMRAM] unsigned char 
  5905 ;;  counter         1   22[COMRAM] unsigned char 
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  4   14[COMRAM] long 
  5908 ;; Registers used:
  5909 ;;		wreg, status,2, status,0
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5915 ;;      Params:         8       0       0       0       0       0       0
  5916 ;;      Locals:         2       0       0       0       0       0       0
  5917 ;;      Temps:          0       0       0       0       0       0       0
  5918 ;;      Totals:        10       0       0       0       0       0       0
  5919 ;;Total ram usage:       10 bytes
  5920 ;; Hardware stack levels used: 1
  5921 ;; This function calls:
  5922 ;;		Nothing
  5923 ;; This function is called by:
  5924 ;;		_store_event
  5925 ;;		_speed
  5926 ;; This function uses a non-reentrant model
  5927 ;;
  5928                           
  5929                           	psect	text24
  5930   0011EE                     __ptext24:
  5931                           	callstack 0
  5932   0011EE                     ___almod:
  5933                           	callstack 28
  5934   0011EE  0E00               	movlw	0
  5935   0011F0  6E18               	movwf	___almod@sign^0,c
  5936   0011F2  BE12               	btfsc	(___almod@dividend+3)^0,7,c
  5937   0011F4  EF00  F009         	goto	u2150
  5938   0011F8  EFFE  F008         	goto	u2151
  5939   0011FC                     u2151:
  5940   0011FC  EF0A  F009         	goto	l3056
  5941   001200                     u2150:
  5942   001200  1E12               	comf	(___almod@dividend+3)^0,f,c
  5943   001202  1E11               	comf	(___almod@dividend+2)^0,f,c
  5944   001204  1E10               	comf	(___almod@dividend+1)^0,f,c
  5945   001206  6C0F               	negf	___almod@dividend^0,c
  5946   001208  0E00               	movlw	0
  5947   00120A  2210               	addwfc	(___almod@dividend+1)^0,f,c
  5948   00120C  2211               	addwfc	(___almod@dividend+2)^0,f,c
  5949   00120E  2212               	addwfc	(___almod@dividend+3)^0,f,c
  5950   001210  0E01               	movlw	1
  5951   001212  6E18               	movwf	___almod@sign^0,c
  5952   001214                     l3056:
  5953   001214  BE16               	btfsc	(___almod@divisor+3)^0,7,c
  5954   001216  EF11  F009         	goto	u2160
  5955   00121A  EF0F  F009         	goto	u2161
  5956   00121E                     u2161:
  5957   00121E  EF19  F009         	goto	l3060
  5958   001222                     u2160:
  5959   001222  1E16               	comf	(___almod@divisor+3)^0,f,c
  5960   001224  1E15               	comf	(___almod@divisor+2)^0,f,c
  5961   001226  1E14               	comf	(___almod@divisor+1)^0,f,c
  5962   001228  6C13               	negf	___almod@divisor^0,c
  5963   00122A  0E00               	movlw	0
  5964   00122C  2214               	addwfc	(___almod@divisor+1)^0,f,c
  5965   00122E  2215               	addwfc	(___almod@divisor+2)^0,f,c
  5966   001230  2216               	addwfc	(___almod@divisor+3)^0,f,c
  5967   001232                     l3060:
  5968   001232  5013               	movf	___almod@divisor^0,w,c
  5969   001234  1014               	iorwf	(___almod@divisor+1)^0,w,c
  5970   001236  1015               	iorwf	(___almod@divisor+2)^0,w,c
  5971   001238  1016               	iorwf	(___almod@divisor+3)^0,w,c
  5972   00123A  B4D8               	btfsc	status,2,c
  5973   00123C  EF22  F009         	goto	u2171
  5974   001240  EF24  F009         	goto	u2170
  5975   001244                     u2171:
  5976   001244  EF54  F009         	goto	l3076
  5977   001248                     u2170:
  5978   001248  0E01               	movlw	1
  5979   00124A  6E17               	movwf	___almod@counter^0,c
  5980   00124C  EF2E  F009         	goto	l3066
  5981   001250                     l3064:
  5982   001250  90D8               	bcf	status,0,c
  5983   001252  3613               	rlcf	___almod@divisor^0,f,c
  5984   001254  3614               	rlcf	(___almod@divisor+1)^0,f,c
  5985   001256  3615               	rlcf	(___almod@divisor+2)^0,f,c
  5986   001258  3616               	rlcf	(___almod@divisor+3)^0,f,c
  5987   00125A  2A17               	incf	___almod@counter^0,f,c
  5988   00125C                     l3066:
  5989   00125C  AE16               	btfss	(___almod@divisor+3)^0,7,c
  5990   00125E  EF33  F009         	goto	u2181
  5991   001262  EF35  F009         	goto	u2180
  5992   001266                     u2181:
  5993   001266  EF28  F009         	goto	l3064
  5994   00126A                     u2180:
  5995   00126A                     l3068:
  5996   00126A  5013               	movf	___almod@divisor^0,w,c
  5997   00126C  5C0F               	subwf	___almod@dividend^0,w,c
  5998   00126E  5014               	movf	(___almod@divisor+1)^0,w,c
  5999   001270  5810               	subwfb	(___almod@dividend+1)^0,w,c
  6000   001272  5015               	movf	(___almod@divisor+2)^0,w,c
  6001   001274  5811               	subwfb	(___almod@dividend+2)^0,w,c
  6002   001276  5016               	movf	(___almod@divisor+3)^0,w,c
  6003   001278  5812               	subwfb	(___almod@dividend+3)^0,w,c
  6004   00127A  A0D8               	btfss	status,0,c
  6005   00127C  EF42  F009         	goto	u2191
  6006   001280  EF44  F009         	goto	u2190
  6007   001284                     u2191:
  6008   001284  EF4C  F009         	goto	l3072
  6009   001288                     u2190:
  6010   001288  5013               	movf	___almod@divisor^0,w,c
  6011   00128A  5E0F               	subwf	___almod@dividend^0,f,c
  6012   00128C  5014               	movf	(___almod@divisor+1)^0,w,c
  6013   00128E  5A10               	subwfb	(___almod@dividend+1)^0,f,c
  6014   001290  5015               	movf	(___almod@divisor+2)^0,w,c
  6015   001292  5A11               	subwfb	(___almod@dividend+2)^0,f,c
  6016   001294  5016               	movf	(___almod@divisor+3)^0,w,c
  6017   001296  5A12               	subwfb	(___almod@dividend+3)^0,f,c
  6018   001298                     l3072:
  6019   001298  90D8               	bcf	status,0,c
  6020   00129A  3216               	rrcf	(___almod@divisor+3)^0,f,c
  6021   00129C  3215               	rrcf	(___almod@divisor+2)^0,f,c
  6022   00129E  3214               	rrcf	(___almod@divisor+1)^0,f,c
  6023   0012A0  3213               	rrcf	___almod@divisor^0,f,c
  6024   0012A2  2E17               	decfsz	___almod@counter^0,f,c
  6025   0012A4  EF35  F009         	goto	l3068
  6026   0012A8                     l3076:
  6027   0012A8  5018               	movf	___almod@sign^0,w,c
  6028   0012AA  B4D8               	btfsc	status,2,c
  6029   0012AC  EF5A  F009         	goto	u2201
  6030   0012B0  EF5C  F009         	goto	u2200
  6031   0012B4                     u2201:
  6032   0012B4  EF64  F009         	goto	l3080
  6033   0012B8                     u2200:
  6034   0012B8  1E12               	comf	(___almod@dividend+3)^0,f,c
  6035   0012BA  1E11               	comf	(___almod@dividend+2)^0,f,c
  6036   0012BC  1E10               	comf	(___almod@dividend+1)^0,f,c
  6037   0012BE  6C0F               	negf	___almod@dividend^0,c
  6038   0012C0  0E00               	movlw	0
  6039   0012C2  2210               	addwfc	(___almod@dividend+1)^0,f,c
  6040   0012C4  2211               	addwfc	(___almod@dividend+2)^0,f,c
  6041   0012C6  2212               	addwfc	(___almod@dividend+3)^0,f,c
  6042   0012C8                     l3080:
  6043   0012C8  C00F  F00F         	movff	___almod@dividend,?___almod
  6044   0012CC  C010  F010         	movff	___almod@dividend+1,?___almod+1
  6045   0012D0  C011  F011         	movff	___almod@dividend+2,?___almod+2
  6046   0012D4  C012  F012         	movff	___almod@dividend+3,?___almod+3
  6047   0012D8  0012               	return		;funcret
  6048   0012DA                     __end_of___almod:
  6049                           	callstack 0
  6050                           
  6051 ;; *************** function ___aldiv *****************
  6052 ;; Defined at:
  6053 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\aldiv.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;  dividend        4    0[COMRAM] long 
  6056 ;;  divisor         4    4[COMRAM] long 
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;  quotient        4   10[COMRAM] long 
  6059 ;;  sign            1    9[COMRAM] unsigned char 
  6060 ;;  counter         1    8[COMRAM] unsigned char 
  6061 ;; Return value:  Size  Location     Type
  6062 ;;                  4    0[COMRAM] long 
  6063 ;; Registers used:
  6064 ;;		wreg, status,2, status,0
  6065 ;; Tracked objects:
  6066 ;;		On entry : 0/0
  6067 ;;		On exit  : 0/0
  6068 ;;		Unchanged: 0/0
  6069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6070 ;;      Params:         8       0       0       0       0       0       0
  6071 ;;      Locals:         6       0       0       0       0       0       0
  6072 ;;      Temps:          0       0       0       0       0       0       0
  6073 ;;      Totals:        14       0       0       0       0       0       0
  6074 ;;Total ram usage:       14 bytes
  6075 ;; Hardware stack levels used: 1
  6076 ;; This function calls:
  6077 ;;		Nothing
  6078 ;; This function is called by:
  6079 ;;		_store_event
  6080 ;;		_speed
  6081 ;; This function uses a non-reentrant model
  6082 ;;
  6083                           
  6084                           	psect	text25
  6085   0014E4                     __ptext25:
  6086                           	callstack 0
  6087   0014E4                     ___aldiv:
  6088                           	callstack 28
  6089   0014E4  0E00               	movlw	0
  6090   0014E6  6E0A               	movwf	___aldiv@sign^0,c
  6091   0014E8  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  6092   0014EA  EF7B  F00A         	goto	u2090
  6093   0014EE  EF79  F00A         	goto	u2091
  6094   0014F2                     u2091:
  6095   0014F2  EF85  F00A         	goto	l3012
  6096   0014F6                     u2090:
  6097   0014F6  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  6098   0014F8  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  6099   0014FA  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  6100   0014FC  6C05               	negf	___aldiv@divisor^0,c
  6101   0014FE  0E00               	movlw	0
  6102   001500  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  6103   001502  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  6104   001504  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  6105   001506  0E01               	movlw	1
  6106   001508  6E0A               	movwf	___aldiv@sign^0,c
  6107   00150A                     l3012:
  6108   00150A  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  6109   00150C  EF8C  F00A         	goto	u2100
  6110   001510  EF8A  F00A         	goto	u2101
  6111   001514                     u2101:
  6112   001514  EF96  F00A         	goto	l3018
  6113   001518                     u2100:
  6114   001518  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  6115   00151A  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  6116   00151C  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  6117   00151E  6C01               	negf	___aldiv@dividend^0,c
  6118   001520  0E00               	movlw	0
  6119   001522  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  6120   001524  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  6121   001526  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  6122   001528  0E01               	movlw	1
  6123   00152A  1A0A               	xorwf	___aldiv@sign^0,f,c
  6124   00152C                     l3018:
  6125   00152C  0E00               	movlw	0
  6126   00152E  6E0B               	movwf	___aldiv@quotient^0,c
  6127   001530  0E00               	movlw	0
  6128   001532  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  6129   001534  0E00               	movlw	0
  6130   001536  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  6131   001538  0E00               	movlw	0
  6132   00153A  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  6133   00153C  5005               	movf	___aldiv@divisor^0,w,c
  6134   00153E  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  6135   001540  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  6136   001542  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  6137   001544  B4D8               	btfsc	status,2,c
  6138   001546  EFA7  F00A         	goto	u2111
  6139   00154A  EFA9  F00A         	goto	u2110
  6140   00154E                     u2111:
  6141   00154E  EFDF  F00A         	goto	l3040
  6142   001552                     u2110:
  6143   001552  0E01               	movlw	1
  6144   001554  6E09               	movwf	___aldiv@counter^0,c
  6145   001556  EFB3  F00A         	goto	l3026
  6146   00155A                     l3024:
  6147   00155A  90D8               	bcf	status,0,c
  6148   00155C  3605               	rlcf	___aldiv@divisor^0,f,c
  6149   00155E  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  6150   001560  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  6151   001562  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  6152   001564  2A09               	incf	___aldiv@counter^0,f,c
  6153   001566                     l3026:
  6154   001566  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  6155   001568  EFB8  F00A         	goto	u2121
  6156   00156C  EFBA  F00A         	goto	u2120
  6157   001570                     u2121:
  6158   001570  EFAD  F00A         	goto	l3024
  6159   001574                     u2120:
  6160   001574                     l3028:
  6161   001574  90D8               	bcf	status,0,c
  6162   001576  360B               	rlcf	___aldiv@quotient^0,f,c
  6163   001578  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  6164   00157A  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  6165   00157C  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  6166   00157E  5005               	movf	___aldiv@divisor^0,w,c
  6167   001580  5C01               	subwf	___aldiv@dividend^0,w,c
  6168   001582  5006               	movf	(___aldiv@divisor+1)^0,w,c
  6169   001584  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  6170   001586  5007               	movf	(___aldiv@divisor+2)^0,w,c
  6171   001588  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  6172   00158A  5008               	movf	(___aldiv@divisor+3)^0,w,c
  6173   00158C  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  6174   00158E  A0D8               	btfss	status,0,c
  6175   001590  EFCC  F00A         	goto	u2131
  6176   001594  EFCE  F00A         	goto	u2130
  6177   001598                     u2131:
  6178   001598  EFD7  F00A         	goto	l3036
  6179   00159C                     u2130:
  6180   00159C  5005               	movf	___aldiv@divisor^0,w,c
  6181   00159E  5E01               	subwf	___aldiv@dividend^0,f,c
  6182   0015A0  5006               	movf	(___aldiv@divisor+1)^0,w,c
  6183   0015A2  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  6184   0015A4  5007               	movf	(___aldiv@divisor+2)^0,w,c
  6185   0015A6  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  6186   0015A8  5008               	movf	(___aldiv@divisor+3)^0,w,c
  6187   0015AA  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  6188   0015AC  800B               	bsf	___aldiv@quotient^0,0,c
  6189   0015AE                     l3036:
  6190   0015AE  90D8               	bcf	status,0,c
  6191   0015B0  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  6192   0015B2  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  6193   0015B4  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  6194   0015B6  3205               	rrcf	___aldiv@divisor^0,f,c
  6195   0015B8  2E09               	decfsz	___aldiv@counter^0,f,c
  6196   0015BA  EFBA  F00A         	goto	l3028
  6197   0015BE                     l3040:
  6198   0015BE  500A               	movf	___aldiv@sign^0,w,c
  6199   0015C0  B4D8               	btfsc	status,2,c
  6200   0015C2  EFE5  F00A         	goto	u2141
  6201   0015C6  EFE7  F00A         	goto	u2140
  6202   0015CA                     u2141:
  6203   0015CA  EFEF  F00A         	goto	l3044
  6204   0015CE                     u2140:
  6205   0015CE  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  6206   0015D0  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  6207   0015D2  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  6208   0015D4  6C0B               	negf	___aldiv@quotient^0,c
  6209   0015D6  0E00               	movlw	0
  6210   0015D8  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  6211   0015DA  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  6212   0015DC  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  6213   0015DE                     l3044:
  6214   0015DE  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  6215   0015E2  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  6216   0015E6  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  6217   0015EA  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  6218   0015EE  0012               	return		;funcret
  6219   0015F0                     __end_of___aldiv:
  6220                           	callstack 0
  6221                           
  6222 ;; *************** function _get_time *****************
  6223 ;; Defined at:
  6224 ;;		line 70 in file "dashboard.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;		None
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  1    wreg      void 
  6231 ;; Registers used:
  6232 ;;		wreg, status,2, status,0, cstack
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6238 ;;      Params:         0       0       0       0       0       0       0
  6239 ;;      Locals:         0       0       0       0       0       0       0
  6240 ;;      Temps:          0       0       0       0       0       0       0
  6241 ;;      Totals:         0       0       0       0       0       0       0
  6242 ;;Total ram usage:        0 bytes
  6243 ;; Hardware stack levels used: 1
  6244 ;; Hardware stack levels required when called: 4
  6245 ;; This function calls:
  6246 ;;		_read_ds1307
  6247 ;; This function is called by:
  6248 ;;		_dashboard
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           	psect	text26
  6253   000EA8                     __ptext26:
  6254                           	callstack 0
  6255   000EA8                     _get_time:
  6256                           	callstack 25
  6257   000EA8                     
  6258                           ;dashboard.c: 73:     clock_reg[0] = read_ds1307(0x02);;dashboard.c: 73:     clock_reg[0
      +                          ] = read_ds1307(0x02);
  6259   000EA8  0E02               	movlw	2
  6260   000EAA  EC79  F005         	call	_read_ds1307
  6261   000EAE  0100               	movlb	0	; () banked
  6262   000EB0  6F93               	movwf	_clock_reg& (0+255),b
  6263                           
  6264                           ;dashboard.c: 74:     clock_reg[1] = read_ds1307(0x01);;dashboard.c: 74:     clock_reg[1
      +                          ] = read_ds1307(0x01);
  6265   000EB2  0E01               	movlw	1
  6266   000EB4  EC79  F005         	call	_read_ds1307
  6267   000EB8  0100               	movlb	0	; () banked
  6268   000EBA  6F94               	movwf	(_clock_reg+1)& (0+255),b
  6269                           
  6270                           ;dashboard.c: 75:     clock_reg[2] = read_ds1307(0x00);;dashboard.c: 75:     clock_reg[2
      +                          ] = read_ds1307(0x00);
  6271   000EBC  0E00               	movlw	0
  6272   000EBE  EC79  F005         	call	_read_ds1307
  6273   000EC2  0100               	movlb	0	; () banked
  6274   000EC4  6F95               	movwf	(_clock_reg+2)& (0+255),b
  6275   000EC6                     
  6276                           ; BSR set to: 0
  6277                           ;dashboard.c: 78:     if (clock_reg[0] & 0x40);dashboard.c: 78:     if (clock_reg[0] & 0
      +                          x40)
  6278   000EC6  AD93               	btfss	_clock_reg& (0+255),6,b
  6279   000EC8  EF68  F007         	goto	u2381
  6280   000ECC  EF6A  F007         	goto	u2380
  6281   000ED0                     u2381:
  6282   000ED0  EF75  F007         	goto	l3280
  6283   000ED4                     u2380:
  6284   000ED4                     
  6285                           ; BSR set to: 0
  6286                           ;dashboard.c: 79:     {;dashboard.c: 79:     {;dashboard.c: 80:         time[0] = '0' + 
      +                          ((clock_reg[0] >> 4) & 0x01);;dashboard.c: 80:         time[0] = '0' + ((clock_reg[0] >>
      +                           4) & 0x01);
  6287   000ED4  3993               	swapf	_clock_reg& (0+255),w,b
  6288   000ED6  0B0F               	andlw	15
  6289   000ED8  0B01               	andlw	1
  6290   000EDA  0F30               	addlw	48
  6291   000EDC  6E52               	movwf	_time^0,c
  6292                           
  6293                           ;dashboard.c: 81:         time[1] = '0' + (clock_reg[0] & 0x0F);;dashboard.c: 81:       
      +                            time[1] = '0' + (clock_reg[0] & 0x0F);
  6294   000EDE  5193               	movf	_clock_reg& (0+255),w,b
  6295   000EE0  0B0F               	andlw	15
  6296   000EE2  0F30               	addlw	48
  6297   000EE4  6E53               	movwf	(_time+1)^0,c
  6298                           
  6299                           ;dashboard.c: 82:     };dashboard.c: 82:     }
  6300   000EE6  EF7E  F007         	goto	l3282
  6301   000EEA                     l3280:
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;dashboard.c: 84:     {;dashboard.c: 84:     {;dashboard.c: 85:         time[0] = '0' + 
      +                          ((clock_reg[0] >> 4) & 0x03);;dashboard.c: 85:         time[0] = '0' + ((clock_reg[0] >>
      +                           4) & 0x03);
  6305   000EEA  3993               	swapf	_clock_reg& (0+255),w,b
  6306   000EEC  0B0F               	andlw	15
  6307   000EEE  0B03               	andlw	3
  6308   000EF0  0F30               	addlw	48
  6309   000EF2  6E52               	movwf	_time^0,c
  6310                           
  6311                           ;dashboard.c: 86:         time[1] = '0' + (clock_reg[0] & 0x0F);;dashboard.c: 86:       
      +                            time[1] = '0' + (clock_reg[0] & 0x0F);
  6312   000EF4  5193               	movf	_clock_reg& (0+255),w,b
  6313   000EF6  0B0F               	andlw	15
  6314   000EF8  0F30               	addlw	48
  6315   000EFA  6E53               	movwf	(_time+1)^0,c
  6316   000EFC                     l3282:
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;dashboard.c: 90:     time[2] = ':';;dashboard.c: 90:     time[2] = ':';
  6320   000EFC  0E3A               	movlw	58
  6321   000EFE  6E54               	movwf	(_time+2)^0,c
  6322   000F00                     
  6323                           ; BSR set to: 0
  6324                           ;dashboard.c: 91:     time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);;dashboard.c: 91:    
      +                           time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  6325   000F00  3994               	swapf	(_clock_reg+1)& (0+255),w,b
  6326   000F02  0B0F               	andlw	15
  6327   000F04  0B0F               	andlw	15
  6328   000F06  0F30               	addlw	48
  6329   000F08  6E55               	movwf	(_time+3)^0,c
  6330   000F0A                     
  6331                           ; BSR set to: 0
  6332                           ;dashboard.c: 92:     time[4] = '0' + (clock_reg[1] & 0x0F);;dashboard.c: 92:     time[4
      +                          ] = '0' + (clock_reg[1] & 0x0F);
  6333   000F0A  5194               	movf	(_clock_reg+1)& (0+255),w,b
  6334   000F0C  0B0F               	andlw	15
  6335   000F0E  0F30               	addlw	48
  6336   000F10  6E56               	movwf	(_time+4)^0,c
  6337   000F12                     
  6338                           ; BSR set to: 0
  6339                           ;dashboard.c: 93:     time[5] = ':';;dashboard.c: 93:     time[5] = ':';
  6340   000F12  0E3A               	movlw	58
  6341   000F14  6E57               	movwf	(_time+5)^0,c
  6342                           
  6343                           ;dashboard.c: 94:     time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);;dashboard.c: 94:    
      +                           time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  6344   000F16  3995               	swapf	(_clock_reg+2)& (0+255),w,b
  6345   000F18  0B0F               	andlw	15
  6346   000F1A  0B0F               	andlw	15
  6347   000F1C  0F30               	addlw	48
  6348   000F1E  6E58               	movwf	(_time+6)^0,c
  6349                           
  6350                           ;dashboard.c: 95:     time[7] = '0' + (clock_reg[2] & 0x0F);;dashboard.c: 95:     time[7
      +                          ] = '0' + (clock_reg[2] & 0x0F);
  6351   000F20  5195               	movf	(_clock_reg+2)& (0+255),w,b
  6352   000F22  0B0F               	andlw	15
  6353   000F24  0F30               	addlw	48
  6354   000F26  6E59               	movwf	(_time+7)^0,c
  6355   000F28                     
  6356                           ; BSR set to: 0
  6357                           ;dashboard.c: 96:     time[8] = '\0';;dashboard.c: 96:     time[8] = '\0';
  6358   000F28  0E00               	movlw	0
  6359   000F2A  6E5A               	movwf	(_time+8)^0,c
  6360   000F2C                     
  6361                           ; BSR set to: 0
  6362   000F2C  0012               	return		;funcret
  6363   000F2E                     __end_of_get_time:
  6364                           	callstack 0
  6365                           
  6366 ;; *************** function _read_ds1307 *****************
  6367 ;; Defined at:
  6368 ;;		line 55 in file "ds1307.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;  address         1    wreg     unsigned char 
  6371 ;; Auto vars:     Size  Location     Type
  6372 ;;  address         1    1[COMRAM] unsigned char 
  6373 ;;  data            1    2[COMRAM] unsigned char 
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  1    wreg      unsigned char 
  6376 ;; Registers used:
  6377 ;;		wreg, status,2, cstack
  6378 ;; Tracked objects:
  6379 ;;		On entry : 0/0
  6380 ;;		On exit  : 0/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6383 ;;      Params:         0       0       0       0       0       0       0
  6384 ;;      Locals:         2       0       0       0       0       0       0
  6385 ;;      Temps:          0       0       0       0       0       0       0
  6386 ;;      Totals:         2       0       0       0       0       0       0
  6387 ;;Total ram usage:        2 bytes
  6388 ;; Hardware stack levels used: 1
  6389 ;; Hardware stack levels required when called: 3
  6390 ;; This function calls:
  6391 ;;		_i2c_read
  6392 ;;		_i2c_rep_start
  6393 ;;		_i2c_start
  6394 ;;		_i2c_stop
  6395 ;;		_i2c_write
  6396 ;; This function is called by:
  6397 ;;		_init_ds1307
  6398 ;;		_get_time
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           
  6402                           	psect	text27
  6403   000AF2                     __ptext27:
  6404                           	callstack 0
  6405   000AF2                     _read_ds1307:
  6406                           	callstack 25
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;incstack = 0
  6410                           ;read_ds1307@address stored from wreg
  6411   000AF2  6E02               	movwf	read_ds1307@address^0,c
  6412   000AF4                     
  6413                           ;ds1307.c: 55: unsigned char read_ds1307(unsigned char address);ds1307.c: 56: {;ds1307.c
      +                          : 57:  unsigned char data;;ds1307.c: 59:  i2c_start();
  6414   000AF4  ECDC  F004         	call	_i2c_start	;wreg free
  6415   000AF8                     
  6416                           ;ds1307.c: 60:  i2c_write(0xD0);
  6417   000AF8  0ED0               	movlw	208
  6418   000AFA  ECEC  F004         	call	_i2c_write
  6419   000AFE                     
  6420                           ;ds1307.c: 61:  i2c_write(address);
  6421   000AFE  5002               	movf	read_ds1307@address^0,w,c
  6422   000B00  ECEC  F004         	call	_i2c_write
  6423   000B04                     
  6424                           ;ds1307.c: 62:  i2c_rep_start();
  6425   000B04  ECE8  F004         	call	_i2c_rep_start	;wreg free
  6426   000B08                     
  6427                           ;ds1307.c: 63:  i2c_write(0xD1);
  6428   000B08  0ED1               	movlw	209
  6429   000B0A  ECEC  F004         	call	_i2c_write
  6430                           
  6431                           ;ds1307.c: 64:  data = i2c_read();
  6432   000B0E  ECF2  F004         	call	_i2c_read	;wreg free
  6433   000B12  6E03               	movwf	read_ds1307@data^0,c
  6434   000B14                     
  6435                           ;ds1307.c: 65:  i2c_stop();
  6436   000B14  ECE0  F004         	call	_i2c_stop	;wreg free
  6437                           
  6438                           ;ds1307.c: 67:  return data;
  6439   000B18  5003               	movf	read_ds1307@data^0,w,c
  6440   000B1A  0012               	return		;funcret
  6441   000B1C                     __end_of_read_ds1307:
  6442                           	callstack 0
  6443                           
  6444 ;; *************** function _i2c_rep_start *****************
  6445 ;; Defined at:
  6446 ;;		line 50 in file "i2c.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;		None
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;		None
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  1    wreg      void 
  6453 ;; Registers used:
  6454 ;;		cstack
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6460 ;;      Params:         0       0       0       0       0       0       0
  6461 ;;      Locals:         0       0       0       0       0       0       0
  6462 ;;      Temps:          0       0       0       0       0       0       0
  6463 ;;      Totals:         0       0       0       0       0       0       0
  6464 ;;Total ram usage:        0 bytes
  6465 ;; Hardware stack levels used: 1
  6466 ;; Hardware stack levels required when called: 1
  6467 ;; This function calls:
  6468 ;;		_i2c_idle
  6469 ;; This function is called by:
  6470 ;;		_read_ds1307
  6471 ;;		_read_ext_eeprom
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475                           	psect	text28
  6476   0009D0                     __ptext28:
  6477                           	callstack 0
  6478   0009D0                     _i2c_rep_start:
  6479                           	callstack 27
  6480   0009D0                     
  6481                           ;i2c.c: 52:  RSEN = 1;
  6482   0009D0  82C5               	bsf	4037,1,c	;volatile
  6483   0009D2                     
  6484                           ;i2c.c: 53:  i2c_idle();
  6485   0009D2  ECF8  F004         	call	_i2c_idle	;wreg free
  6486   0009D6  0012               	return		;funcret
  6487   0009D8                     __end_of_i2c_rep_start:
  6488                           	callstack 0
  6489                           
  6490 ;; *************** function _i2c_read *****************
  6491 ;; Defined at:
  6492 ;;		line 74 in file "i2c.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;		None
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;		None
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  1    wreg      unsigned char 
  6499 ;; Registers used:
  6500 ;;		wreg, status,2, cstack
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6506 ;;      Params:         0       0       0       0       0       0       0
  6507 ;;      Locals:         0       0       0       0       0       0       0
  6508 ;;      Temps:          0       0       0       0       0       0       0
  6509 ;;      Totals:         0       0       0       0       0       0       0
  6510 ;;Total ram usage:        0 bytes
  6511 ;; Hardware stack levels used: 1
  6512 ;; Hardware stack levels required when called: 2
  6513 ;; This function calls:
  6514 ;;		_i2c_no_ack
  6515 ;;		_i2c_rx_mode
  6516 ;; This function is called by:
  6517 ;;		_read_ds1307
  6518 ;;		_read_ext_eeprom
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           	psect	text29
  6523   0009E4                     __ptext29:
  6524                           	callstack 0
  6525   0009E4                     _i2c_read:
  6526                           	callstack 26
  6527   0009E4                     
  6528                           ;i2c.c: 76:  i2c_rx_mode();
  6529   0009E4  ECE4  F004         	call	_i2c_rx_mode	;wreg free
  6530                           
  6531                           ;i2c.c: 77:  i2c_no_ack();
  6532   0009E8  ECD9  F004         	call	_i2c_no_ack	;wreg free
  6533   0009EC                     
  6534                           ;i2c.c: 79:  return SSPBUF;
  6535   0009EC  50C9               	movf	201,w,c	;volatile
  6536   0009EE  0012               	return		;funcret
  6537   0009F0                     __end_of_i2c_read:
  6538                           	callstack 0
  6539                           
  6540 ;; *************** function _i2c_rx_mode *****************
  6541 ;; Defined at:
  6542 ;;		line 62 in file "i2c.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;		None
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;		None
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  1    wreg      void 
  6549 ;; Registers used:
  6550 ;;		cstack
  6551 ;; Tracked objects:
  6552 ;;		On entry : 0/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6556 ;;      Params:         0       0       0       0       0       0       0
  6557 ;;      Locals:         0       0       0       0       0       0       0
  6558 ;;      Temps:          0       0       0       0       0       0       0
  6559 ;;      Totals:         0       0       0       0       0       0       0
  6560 ;;Total ram usage:        0 bytes
  6561 ;; Hardware stack levels used: 1
  6562 ;; Hardware stack levels required when called: 1
  6563 ;; This function calls:
  6564 ;;		_i2c_idle
  6565 ;; This function is called by:
  6566 ;;		_i2c_read
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570                           	psect	text30
  6571   0009C8                     __ptext30:
  6572                           	callstack 0
  6573   0009C8                     _i2c_rx_mode:
  6574                           	callstack 26
  6575   0009C8                     
  6576                           ;i2c.c: 64:  RCEN = 1;
  6577   0009C8  86C5               	bsf	4037,3,c	;volatile
  6578   0009CA                     
  6579                           ;i2c.c: 65:  i2c_idle();
  6580   0009CA  ECF8  F004         	call	_i2c_idle	;wreg free
  6581   0009CE  0012               	return		;funcret
  6582   0009D0                     __end_of_i2c_rx_mode:
  6583                           	callstack 0
  6584                           
  6585 ;; *************** function _i2c_no_ack *****************
  6586 ;; Defined at:
  6587 ;;		line 68 in file "i2c.c"
  6588 ;; Parameters:    Size  Location     Type
  6589 ;;		None
  6590 ;; Auto vars:     Size  Location     Type
  6591 ;;		None
  6592 ;; Return value:  Size  Location     Type
  6593 ;;                  1    wreg      void 
  6594 ;; Registers used:
  6595 ;;		None
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6601 ;;      Params:         0       0       0       0       0       0       0
  6602 ;;      Locals:         0       0       0       0       0       0       0
  6603 ;;      Temps:          0       0       0       0       0       0       0
  6604 ;;      Totals:         0       0       0       0       0       0       0
  6605 ;;Total ram usage:        0 bytes
  6606 ;; Hardware stack levels used: 1
  6607 ;; This function calls:
  6608 ;;		Nothing
  6609 ;; This function is called by:
  6610 ;;		_i2c_read
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           	psect	text31
  6615   0009B2                     __ptext31:
  6616                           	callstack 0
  6617   0009B2                     _i2c_no_ack:
  6618                           	callstack 27
  6619   0009B2                     
  6620                           ;i2c.c: 70:  ACKDT = 1;
  6621   0009B2  8AC5               	bsf	4037,5,c	;volatile
  6622                           
  6623                           ;i2c.c: 71:  ACKEN = 1;
  6624   0009B4  88C5               	bsf	4037,4,c	;volatile
  6625   0009B6  0012               	return		;funcret
  6626   0009B8                     __end_of_i2c_no_ack:
  6627                           	callstack 0
  6628                           
  6629 ;; *************** function _display_time *****************
  6630 ;; Defined at:
  6631 ;;		line 64 in file "dashboard.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;		None
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6645 ;;      Params:         0       0       0       0       0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0
  6648 ;;      Totals:         0       0       0       0       0       0       0
  6649 ;;Total ram usage:        0 bytes
  6650 ;; Hardware stack levels used: 1
  6651 ;; Hardware stack levels required when called: 2
  6652 ;; This function calls:
  6653 ;;		_clcd_print
  6654 ;; This function is called by:
  6655 ;;		_dashboard
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text32
  6660   000A02                     __ptext32:
  6661                           	callstack 0
  6662   000A02                     _display_time:
  6663                           	callstack 27
  6664   000A02                     
  6665                           ;dashboard.c: 66:     clcd_print(time, (0xC0 + (0)));;dashboard.c: 66:     clcd_print(ti
      +                          me, (0xC0 + (0)));
  6666   000A02  0E52               	movlw	low _time
  6667   000A04  6E03               	movwf	clcd_print@data^0,c
  6668   000A06  0E00               	movlw	high _time
  6669   000A08  6E04               	movwf	(clcd_print@data+1)^0,c
  6670   000A0A  0EC0               	movlw	192
  6671   000A0C  6E05               	movwf	clcd_print@addr^0,c
  6672   000A0E  ECAD  F006         	call	_clcd_print	;wreg free
  6673   000A12  0012               	return		;funcret
  6674   000A14                     __end_of_display_time:
  6675                           	callstack 0
  6676                           
  6677 ;; *************** function _clear_log *****************
  6678 ;; Defined at:
  6679 ;;		line 13 in file "clear_log.c"
  6680 ;; Parameters:    Size  Location     Type
  6681 ;;  key             1    wreg     unsigned char 
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;  key             1    5[COMRAM] unsigned char 
  6684 ;;  long_press_d    2    8[COMRAM] int 
  6685 ;;  t               2    6[COMRAM] int 
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  1    wreg      void 
  6688 ;; Registers used:
  6689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6695 ;;      Params:         0       0       0       0       0       0       0
  6696 ;;      Locals:         5       0       0       0       0       0       0
  6697 ;;      Temps:          0       0       0       0       0       0       0
  6698 ;;      Totals:         5       0       0       0       0       0       0
  6699 ;;Total ram usage:        5 bytes
  6700 ;; Hardware stack levels used: 1
  6701 ;; Hardware stack levels required when called: 2
  6702 ;; This function calls:
  6703 ;;		_clcd_print
  6704 ;;		_read_switches
  6705 ;; This function is called by:
  6706 ;;		_main
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710                           	psect	text33
  6711   000F2E                     __ptext33:
  6712                           	callstack 0
  6713   000F2E                     _clear_log:
  6714                           	callstack 28
  6715   000F2E                     
  6716                           ;clear_log.c: 13: void clear_log(char key);clear_log.c: 13: void clear_log(char key);cle
      +                          ar_log.c: 14: {;clear_log.c: 14: {;clear_log.c: 16:     lap = 1;;clear_log.c: 16:     la
      +                          p = 1;
  6717   000F2E  0E01               	movlw	1
  6718   000F30  6E5D               	movwf	_lap^0,c
  6719                           
  6720                           ;clear_log.c: 17:     clear_f = 1;;clear_log.c: 17:     clear_f = 1;
  6721   000F32  0E01               	movlw	1
  6722   000F34  6E4C               	movwf	_clear_f^0,c
  6723                           
  6724                           ;clear_log.c: 19:     int t = 0;;clear_log.c: 19:     int t = 0;
  6725   000F36  0E00               	movlw	0
  6726   000F38  6E08               	movwf	(clear_log@t+1)^0,c
  6727   000F3A  0E00               	movlw	0
  6728   000F3C  6E07               	movwf	clear_log@t^0,c
  6729                           
  6730                           ;clear_log.c: 20:     int long_press_detected = 0;;clear_log.c: 20:     int long_press_d
      +                          etected = 0;
  6731   000F3E  0E00               	movlw	0
  6732   000F40  6E0A               	movwf	(clear_log@long_press_detected+1)^0,c
  6733   000F42  0E00               	movlw	0
  6734   000F44  6E09               	movwf	clear_log@long_press_detected^0,c
  6735                           
  6736                           ;clear_log.c: 22:     while (t < 3800);clear_log.c: 22:     while (t < 3800)
  6737   000F46  EFCA  F007         	goto	l3830
  6738   000F4A                     l3818:
  6739                           
  6740                           ;clear_log.c: 23:     {;clear_log.c: 23:     {;clear_log.c: 24:         clcd_print("Logs
      +                           Cleared!!", (0x80 + (1)));;clear_log.c: 24:         clcd_print("Logs Cleared!!", (0x80 
      +                          + (1)));
  6741   000F4A  0E55               	movlw	low STR_15
  6742   000F4C  6E03               	movwf	clcd_print@data^0,c
  6743   000F4E  0E2F               	movlw	high STR_15
  6744   000F50  6E04               	movwf	(clcd_print@data+1)^0,c
  6745   000F52  0E81               	movlw	129
  6746   000F54  6E05               	movwf	clcd_print@addr^0,c
  6747   000F56  ECAD  F006         	call	_clcd_print	;wreg free
  6748   000F5A                     
  6749                           ;clear_log.c: 25:         key = read_switches(0);;clear_log.c: 25:         key = read_sw
      +                          itches(0);
  6750   000F5A  0E00               	movlw	0
  6751   000F5C  EC19  F007         	call	_read_switches
  6752   000F60  6E06               	movwf	clear_log@key^0,c
  6753   000F62                     
  6754                           ;clear_log.c: 27:         if (key == 6);clear_log.c: 27:         if (key == 6)
  6755   000F62  0E06               	movlw	6
  6756   000F64  1806               	xorwf	clear_log@key^0,w,c
  6757   000F66  A4D8               	btfss	status,2,c
  6758   000F68  EFB8  F007         	goto	u3171
  6759   000F6C  EFBA  F007         	goto	u3170
  6760   000F70                     u3171:
  6761   000F70  EFC2  F007         	goto	l3828
  6762   000F74                     u3170:
  6763   000F74                     
  6764                           ;clear_log.c: 28:         {;clear_log.c: 28:         {;clear_log.c: 29:             long
      +                          _press_detected = 1;;clear_log.c: 29:             long_press_detected = 1;
  6765   000F74  0E00               	movlw	0
  6766   000F76  6E0A               	movwf	(clear_log@long_press_detected+1)^0,c
  6767   000F78  0E01               	movlw	1
  6768   000F7A  6E09               	movwf	clear_log@long_press_detected^0,c
  6769   000F7C                     
  6770                           ;clear_log.c: 30:             t++;;clear_log.c: 30:             t++;
  6771   000F7C  4A07               	infsnz	clear_log@t^0,f,c
  6772   000F7E  2A08               	incf	(clear_log@t+1)^0,f,c
  6773                           
  6774                           ;clear_log.c: 31:         };clear_log.c: 31:         }
  6775   000F80  EFCA  F007         	goto	l3830
  6776   000F84                     l3828:
  6777                           
  6778                           ;clear_log.c: 33:         {;clear_log.c: 33:         {;clear_log.c: 34:             long
      +                          _press_detected = 0;;clear_log.c: 34:             long_press_detected = 0;
  6779   000F84  0E00               	movlw	0
  6780   000F86  6E0A               	movwf	(clear_log@long_press_detected+1)^0,c
  6781   000F88  0E00               	movlw	0
  6782   000F8A  6E09               	movwf	clear_log@long_press_detected^0,c
  6783                           
  6784                           ;clear_log.c: 35:             t = 0;;clear_log.c: 35:             t = 0;
  6785   000F8C  0E00               	movlw	0
  6786   000F8E  6E08               	movwf	(clear_log@t+1)^0,c
  6787   000F90  0E00               	movlw	0
  6788   000F92  6E07               	movwf	clear_log@t^0,c
  6789   000F94                     l3830:
  6790                           
  6791                           ;clear_log.c: 22:     while (t < 3800);clear_log.c: 22:     while (t < 3800)
  6792   000F94  BE08               	btfsc	(clear_log@t+1)^0,7,c
  6793   000F96  EFD6  F007         	goto	u3181
  6794   000F9A  0ED8               	movlw	216
  6795   000F9C  5C07               	subwf	clear_log@t^0,w,c
  6796   000F9E  0E0E               	movlw	14
  6797   000FA0  5808               	subwfb	(clear_log@t+1)^0,w,c
  6798   000FA2  A0D8               	btfss	status,0,c
  6799   000FA4  EFD6  F007         	goto	u3181
  6800   000FA8  EFD8  F007         	goto	u3180
  6801   000FAC                     u3181:
  6802   000FAC  EFA5  F007         	goto	l3818
  6803   000FB0                     u3180:
  6804   000FB0                     
  6805                           ;clear_log.c: 39:     if (long_press_detected);clear_log.c: 39:     if (long_press_detec
      +                          ted)
  6806   000FB0  5009               	movf	clear_log@long_press_detected^0,w,c
  6807   000FB2  100A               	iorwf	(clear_log@long_press_detected+1)^0,w,c
  6808   000FB4  B4D8               	btfsc	status,2,c
  6809   000FB6  EFDF  F007         	goto	u3191
  6810   000FBA  EFE1  F007         	goto	u3190
  6811   000FBE                     u3191:
  6812   000FBE  EFE3  F007         	goto	l512
  6813   000FC2                     u3190:
  6814   000FC2                     
  6815                           ;clear_log.c: 40:     {;clear_log.c: 40:     {;clear_log.c: 41:         main_f = 2;;clea
      +                          r_log.c: 41:         main_f = 2;
  6816   000FC2  0E02               	movlw	2
  6817   000FC4  6E51               	movwf	_main_f^0,c
  6818   000FC6                     l512:
  6819   000FC6  0012               	return		;funcret
  6820   000FC8                     __end_of_clear_log:
  6821                           	callstack 0
  6822                           
  6823 ;; *************** function _change_pass *****************
  6824 ;; Defined at:
  6825 ;;		line 9 in file "change_pwd.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;  key             1    wreg     unsigned char 
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;  key             1   42[COMRAM] unsigned char 
  6830 ;;  k               4   25[COMRAM] long 
  6831 ;;  k               4   29[COMRAM] long 
  6832 ;;  p               2   40[COMRAM] int 
  6833 ;;  new_password    5   33[COMRAM] unsigned char [5]
  6834 ;;  confirm_pass    5   20[COMRAM] unsigned char [5]
  6835 ;;  wait            4   43[COMRAM] long 
  6836 ;;  i               2   47[COMRAM] int 
  6837 ;;  pwd_flag        2   38[COMRAM] int 
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  1    wreg      void 
  6840 ;; Registers used:
  6841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6847 ;;      Params:         0       0       0       0       0       0       0
  6848 ;;      Locals:        29       0       0       0       0       0       0
  6849 ;;      Temps:          4       0       0       0       0       0       0
  6850 ;;      Totals:        33       0       0       0       0       0       0
  6851 ;;Total ram usage:       33 bytes
  6852 ;; Hardware stack levels used: 1
  6853 ;; Hardware stack levels required when called: 3
  6854 ;; This function calls:
  6855 ;;		_clcd_print
  6856 ;;		_clcd_putch
  6857 ;;		_clcd_write
  6858 ;;		_read_switches
  6859 ;;		_strcmp
  6860 ;;		_write_ext_eeprom
  6861 ;; This function is called by:
  6862 ;;		_main
  6863 ;; This function uses a non-reentrant model
  6864 ;;
  6865                           
  6866                           	psect	text34
  6867   00203A                     __ptext34:
  6868                           	callstack 0
  6869   00203A                     _change_pass:
  6870                           	callstack 27
  6871   00203A                     
  6872                           ;change_pwd.c: 9: void change_pass(char key);change_pwd.c: 9: void change_pass(char key)
      +                          ;change_pwd.c: 10: {;change_pwd.c: 10: {;change_pwd.c: 11:     clcd_write(0x01, 0);;chan
      +                          ge_pwd.c: 11:     clcd_write(0x01, 0);
  6873   00203A  0E00               	movlw	0
  6874   00203C  6E01               	movwf	clcd_write@control_bit^0,c
  6875   00203E  0E01               	movlw	1
  6876   002040  ECEE  F005         	call	_clcd_write
  6877   002044                     
  6878                           ;change_pwd.c: 12:     long int wait = 0;;change_pwd.c: 12:     long int wait = 0;
  6879   002044  0E00               	movlw	0
  6880   002046  6E2C               	movwf	change_pass@wait^0,c
  6881   002048  0E00               	movlw	0
  6882   00204A  6E2D               	movwf	(change_pass@wait+1)^0,c
  6883   00204C  0E00               	movlw	0
  6884   00204E  6E2E               	movwf	(change_pass@wait+2)^0,c
  6885   002050  0E00               	movlw	0
  6886   002052  6E2F               	movwf	(change_pass@wait+3)^0,c
  6887   002054                     
  6888                           ;change_pwd.c: 14:     char new_password[5];;change_pwd.c: 14:     char new_password[5];
      +                          ;change_pwd.c: 15:     char confirm_password[5];;change_pwd.c: 15:     char confirm_pass
      +                          word[5];;change_pwd.c: 16:     int pwd_flag = 0;;change_pwd.c: 16:     int pwd_flag = 0;
  6889   002054  0E00               	movlw	0
  6890   002056  6E28               	movwf	(change_pass@pwd_flag+1)^0,c
  6891   002058  0E00               	movlw	0
  6892   00205A  6E27               	movwf	change_pass@pwd_flag^0,c
  6893   00205C                     l4024:
  6894                           
  6895                           ;change_pwd.c: 19:     {;change_pwd.c: 19:     {;change_pwd.c: 21:         clcd_write(0x
      +                          01, 0);;change_pwd.c: 21:         clcd_write(0x01, 0);
  6896   00205C  0E00               	movlw	0
  6897   00205E  6E01               	movwf	clcd_write@control_bit^0,c
  6898   002060  0E01               	movlw	1
  6899   002062  ECEE  F005         	call	_clcd_write
  6900   002066                     
  6901                           ;change_pwd.c: 22:         clcd_print("Enter New Password", (0x80 + (0)));;change_pwd.c:
      +                           22:         clcd_print("Enter New Password", (0x80 + (0)));
  6902   002066  0EC0               	movlw	low STR_1
  6903   002068  6E03               	movwf	clcd_print@data^0,c
  6904   00206A  0E2E               	movlw	high STR_1
  6905   00206C  6E04               	movwf	(clcd_print@data+1)^0,c
  6906   00206E  0E80               	movlw	128
  6907   002070  6E05               	movwf	clcd_print@addr^0,c
  6908   002072  ECAD  F006         	call	_clcd_print	;wreg free
  6909   002076                     
  6910                           ;change_pwd.c: 23:         i = 0;;change_pwd.c: 23:         i = 0;
  6911   002076  0E00               	movlw	0
  6912   002078  6E31               	movwf	(change_pass@i+1)^0,c
  6913   00207A  0E00               	movlw	0
  6914   00207C  6E30               	movwf	change_pass@i^0,c
  6915                           
  6916                           ;change_pwd.c: 24:         while (i < 4);change_pwd.c: 24:         while (i < 4)
  6917   00207E  EFD1  F010         	goto	l4060
  6918   002082                     l4030:
  6919                           
  6920                           ;change_pwd.c: 25:         {;change_pwd.c: 25:         {;change_pwd.c: 26:             k
      +                          ey = read_switches(1);;change_pwd.c: 26:             key = read_switches(1);
  6921   002082  0E01               	movlw	1
  6922   002084  EC19  F007         	call	_read_switches
  6923   002088  6E2B               	movwf	change_pass@key^0,c
  6924   00208A                     
  6925                           ;change_pwd.c: 28:             if (wait++ < 2000);change_pwd.c: 28:             if (wait
      +                          ++ < 2000)
  6926   00208A  C02C  F011         	movff	change_pass@wait,??_change_pass
  6927   00208E  C02D  F012         	movff	change_pass@wait+1,??_change_pass+1
  6928   002092  C02E  F013         	movff	change_pass@wait+2,??_change_pass+2
  6929   002096  C02F  F014         	movff	change_pass@wait+3,??_change_pass+3
  6930   00209A  2A2C               	incf	change_pass@wait^0,f,c
  6931   00209C  0E00               	movlw	0
  6932   00209E  222D               	addwfc	(change_pass@wait+1)^0,f,c
  6933   0020A0  222E               	addwfc	(change_pass@wait+2)^0,f,c
  6934   0020A2  222F               	addwfc	(change_pass@wait+3)^0,f,c
  6935   0020A4  BE14               	btfsc	(??_change_pass+3)^0,7,c
  6936   0020A6  EF63  F010         	goto	u3450
  6937   0020AA  5014               	movf	(??_change_pass+3)^0,w,c
  6938   0020AC  1013               	iorwf	(??_change_pass+2)^0,w,c
  6939   0020AE  E109               	bnz	u3451
  6940   0020B0  0ED0               	movlw	208
  6941   0020B2  5C11               	subwf	??_change_pass^0,w,c
  6942   0020B4  0E07               	movlw	7
  6943   0020B6  5812               	subwfb	(??_change_pass+1)^0,w,c
  6944   0020B8  B0D8               	btfsc	status,0,c
  6945   0020BA  EF61  F010         	goto	u3451
  6946   0020BE  EF63  F010         	goto	u3450
  6947   0020C2                     u3451:
  6948   0020C2  EF6B  F010         	goto	l4036
  6949   0020C6                     u3450:
  6950   0020C6                     
  6951                           ;change_pwd.c: 29:                 clcd_putch('_', (0xC0 + (i)));;change_pwd.c: 29:     
      +                                      clcd_putch('_', (0xC0 + (i)));
  6952   0020C6  5030               	movf	change_pass@i^0,w,c
  6953   0020C8  0FC0               	addlw	192
  6954   0020CA  6E0F               	movwf	clcd_putch@addr^0,c
  6955   0020CC  0E5F               	movlw	95
  6956   0020CE  EC32  F005         	call	_clcd_putch
  6957   0020D2  EF9D  F010         	goto	l4044
  6958   0020D6                     l4036:
  6959   0020D6  BE2F               	btfsc	(change_pass@wait+3)^0,7,c
  6960   0020D8  EF7A  F010         	goto	u3461
  6961   0020DC  502F               	movf	(change_pass@wait+3)^0,w,c
  6962   0020DE  102E               	iorwf	(change_pass@wait+2)^0,w,c
  6963   0020E0  E10B               	bnz	u3460
  6964   0020E2  0ED1               	movlw	209
  6965   0020E4  5C2C               	subwf	change_pass@wait^0,w,c
  6966   0020E6  0E07               	movlw	7
  6967   0020E8  582D               	subwfb	(change_pass@wait+1)^0,w,c
  6968   0020EA  A0D8               	btfss	status,0,c
  6969   0020EC  EF7A  F010         	goto	u3461
  6970   0020F0  EF7C  F010         	goto	u3460
  6971   0020F4                     u3461:
  6972   0020F4  EF95  F010         	goto	l4042
  6973   0020F8                     u3460:
  6974   0020F8  BE2F               	btfsc	(change_pass@wait+3)^0,7,c
  6975   0020FA  EF8D  F010         	goto	u3470
  6976   0020FE  502F               	movf	(change_pass@wait+3)^0,w,c
  6977   002100  102E               	iorwf	(change_pass@wait+2)^0,w,c
  6978   002102  E109               	bnz	u3471
  6979   002104  0EA0               	movlw	160
  6980   002106  5C2C               	subwf	change_pass@wait^0,w,c
  6981   002108  0E0F               	movlw	15
  6982   00210A  582D               	subwfb	(change_pass@wait+1)^0,w,c
  6983   00210C  B0D8               	btfsc	status,0,c
  6984   00210E  EF8B  F010         	goto	u3471
  6985   002112  EF8D  F010         	goto	u3470
  6986   002116                     u3471:
  6987   002116  EF95  F010         	goto	l4042
  6988   00211A                     u3470:
  6989   00211A                     
  6990                           ;change_pwd.c: 31:                 clcd_putch(' ', (0xC0 + (i)));;change_pwd.c: 31:     
      +                                      clcd_putch(' ', (0xC0 + (i)));
  6991   00211A  5030               	movf	change_pass@i^0,w,c
  6992   00211C  0FC0               	addlw	192
  6993   00211E  6E0F               	movwf	clcd_putch@addr^0,c
  6994   002120  0E20               	movlw	32
  6995   002122  EC32  F005         	call	_clcd_putch
  6996   002126  EF9D  F010         	goto	l4044
  6997   00212A                     l4042:
  6998                           
  6999                           ;change_pwd.c: 33:                 wait = 0;;change_pwd.c: 33:                 wait = 0;
  7000   00212A  0E00               	movlw	0
  7001   00212C  6E2C               	movwf	change_pass@wait^0,c
  7002   00212E  0E00               	movlw	0
  7003   002130  6E2D               	movwf	(change_pass@wait+1)^0,c
  7004   002132  0E00               	movlw	0
  7005   002134  6E2E               	movwf	(change_pass@wait+2)^0,c
  7006   002136  0E00               	movlw	0
  7007   002138  6E2F               	movwf	(change_pass@wait+3)^0,c
  7008   00213A                     l4044:
  7009                           
  7010                           ;change_pwd.c: 35:             if (key == 5);change_pwd.c: 35:             if (key == 5)
  7011   00213A  0E05               	movlw	5
  7012   00213C  182B               	xorwf	change_pass@key^0,w,c
  7013   00213E  A4D8               	btfss	status,2,c
  7014   002140  EFA4  F010         	goto	u3481
  7015   002144  EFA6  F010         	goto	u3480
  7016   002148                     u3481:
  7017   002148  EFB8  F010         	goto	l4052
  7018   00214C                     u3480:
  7019   00214C                     
  7020                           ;change_pwd.c: 36:             {;change_pwd.c: 36:             {;change_pwd.c: 37:      
      +                                     clcd_putch('*', (0xC0 + (i)));;change_pwd.c: 37:                 clcd_putch('
      +                          *', (0xC0 + (i)));
  7021   00214C  5030               	movf	change_pass@i^0,w,c
  7022   00214E  0FC0               	addlw	192
  7023   002150  6E0F               	movwf	clcd_putch@addr^0,c
  7024   002152  0E2A               	movlw	42
  7025   002154  EC32  F005         	call	_clcd_putch
  7026   002158                     
  7027                           ;change_pwd.c: 38:                 new_password[i++] = '0';;change_pwd.c: 38:           
      +                                new_password[i++] = '0';
  7028   002158  0E22               	movlw	low change_pass@new_password
  7029   00215A  2430               	addwf	change_pass@i^0,w,c
  7030   00215C  6ED9               	movwf	fsr2l,c
  7031   00215E  0E00               	movlw	high change_pass@new_password
  7032   002160  2031               	addwfc	(change_pass@i+1)^0,w,c
  7033   002162  6EDA               	movwf	fsr2h,c
  7034   002164  0E30               	movlw	48
  7035   002166  6EDF               	movwf	indf2,c
  7036   002168                     l4050:
  7037   002168  4A30               	infsnz	change_pass@i^0,f,c
  7038   00216A  2A31               	incf	(change_pass@i+1)^0,f,c
  7039                           
  7040                           ;change_pwd.c: 39:             };change_pwd.c: 39:             }
  7041   00216C  EFD1  F010         	goto	l4060
  7042   002170                     l4052:
  7043   002170  0E06               	movlw	6
  7044   002172  182B               	xorwf	change_pass@key^0,w,c
  7045   002174  A4D8               	btfss	status,2,c
  7046   002176  EFBF  F010         	goto	u3491
  7047   00217A  EFC1  F010         	goto	u3490
  7048   00217E                     u3491:
  7049   00217E  EFD1  F010         	goto	l4060
  7050   002182                     u3490:
  7051   002182                     
  7052                           ;change_pwd.c: 41:             {;change_pwd.c: 41:             {;change_pwd.c: 42:      
      +                                     clcd_putch('*', (0xC0 + (i)));;change_pwd.c: 42:                 clcd_putch('
      +                          *', (0xC0 + (i)));
  7053   002182  5030               	movf	change_pass@i^0,w,c
  7054   002184  0FC0               	addlw	192
  7055   002186  6E0F               	movwf	clcd_putch@addr^0,c
  7056   002188  0E2A               	movlw	42
  7057   00218A  EC32  F005         	call	_clcd_putch
  7058   00218E                     
  7059                           ;change_pwd.c: 43:                 new_password[i++] = '1';;change_pwd.c: 43:           
      +                                new_password[i++] = '1';
  7060   00218E  0E22               	movlw	low change_pass@new_password
  7061   002190  2430               	addwf	change_pass@i^0,w,c
  7062   002192  6ED9               	movwf	fsr2l,c
  7063   002194  0E00               	movlw	high change_pass@new_password
  7064   002196  2031               	addwfc	(change_pass@i+1)^0,w,c
  7065   002198  6EDA               	movwf	fsr2h,c
  7066   00219A  0E31               	movlw	49
  7067   00219C  6EDF               	movwf	indf2,c
  7068   00219E  EFB4  F010         	goto	l4050
  7069   0021A2                     l4060:
  7070                           
  7071                           ;change_pwd.c: 24:         while (i < 4);change_pwd.c: 24:         while (i < 4)
  7072   0021A2  BE31               	btfsc	(change_pass@i+1)^0,7,c
  7073   0021A4  EFDD  F010         	goto	u3501
  7074   0021A8  5031               	movf	(change_pass@i+1)^0,w,c
  7075   0021AA  E109               	bnz	u3500
  7076   0021AC  0E04               	movlw	4
  7077   0021AE  5C30               	subwf	change_pass@i^0,w,c
  7078   0021B0  A0D8               	btfss	status,0,c
  7079   0021B2  EFDD  F010         	goto	u3501
  7080   0021B6  EFDF  F010         	goto	u3500
  7081   0021BA                     u3501:
  7082   0021BA  EF41  F010         	goto	l4030
  7083   0021BE                     u3500:
  7084   0021BE                     
  7085                           ;change_pwd.c: 46:         new_password[i] = '\0';;change_pwd.c: 46:         new_passwor
      +                          d[i] = '\0';
  7086   0021BE  0E22               	movlw	low change_pass@new_password
  7087   0021C0  2430               	addwf	change_pass@i^0,w,c
  7088   0021C2  6ED9               	movwf	fsr2l,c
  7089   0021C4  0E00               	movlw	high change_pass@new_password
  7090   0021C6  2031               	addwfc	(change_pass@i+1)^0,w,c
  7091   0021C8  6EDA               	movwf	fsr2h,c
  7092   0021CA  6ADF               	clrf	indf2,c
  7093   0021CC                     
  7094                           ;change_pwd.c: 49:         clcd_write(0x01, 0);;change_pwd.c: 49:         clcd_write(0x0
      +                          1, 0);
  7095   0021CC  0E00               	movlw	0
  7096   0021CE  6E01               	movwf	clcd_write@control_bit^0,c
  7097   0021D0  0E01               	movlw	1
  7098   0021D2  ECEE  F005         	call	_clcd_write
  7099   0021D6                     
  7100                           ;change_pwd.c: 50:         clcd_print("Confirm Password", (0x80 + (0)));;change_pwd.c: 5
      +                          0:         clcd_print("Confirm Password", (0x80 + (0)));
  7101   0021D6  0EF5               	movlw	low STR_2
  7102   0021D8  6E03               	movwf	clcd_print@data^0,c
  7103   0021DA  0E2E               	movlw	high STR_2
  7104   0021DC  6E04               	movwf	(clcd_print@data+1)^0,c
  7105   0021DE  0E80               	movlw	128
  7106   0021E0  6E05               	movwf	clcd_print@addr^0,c
  7107   0021E2  ECAD  F006         	call	_clcd_print	;wreg free
  7108   0021E6                     
  7109                           ;change_pwd.c: 51:         i = 0;;change_pwd.c: 51:         i = 0;
  7110   0021E6  0E00               	movlw	0
  7111   0021E8  6E31               	movwf	(change_pass@i+1)^0,c
  7112   0021EA  0E00               	movlw	0
  7113   0021EC  6E30               	movwf	change_pass@i^0,c
  7114                           
  7115                           ;change_pwd.c: 52:         while (i < 4);change_pwd.c: 52:         while (i < 4)
  7116   0021EE  EF89  F011         	goto	l4100
  7117   0021F2                     l4070:
  7118                           
  7119                           ;change_pwd.c: 53:         {;change_pwd.c: 53:         {;change_pwd.c: 54:             k
      +                          ey = read_switches(1);;change_pwd.c: 54:             key = read_switches(1);
  7120   0021F2  0E01               	movlw	1
  7121   0021F4  EC19  F007         	call	_read_switches
  7122   0021F8  6E2B               	movwf	change_pass@key^0,c
  7123   0021FA                     
  7124                           ;change_pwd.c: 56:             if (wait++ < 2000);change_pwd.c: 56:             if (wait
      +                          ++ < 2000)
  7125   0021FA  C02C  F011         	movff	change_pass@wait,??_change_pass
  7126   0021FE  C02D  F012         	movff	change_pass@wait+1,??_change_pass+1
  7127   002202  C02E  F013         	movff	change_pass@wait+2,??_change_pass+2
  7128   002206  C02F  F014         	movff	change_pass@wait+3,??_change_pass+3
  7129   00220A  2A2C               	incf	change_pass@wait^0,f,c
  7130   00220C  0E00               	movlw	0
  7131   00220E  222D               	addwfc	(change_pass@wait+1)^0,f,c
  7132   002210  222E               	addwfc	(change_pass@wait+2)^0,f,c
  7133   002212  222F               	addwfc	(change_pass@wait+3)^0,f,c
  7134   002214  BE14               	btfsc	(??_change_pass+3)^0,7,c
  7135   002216  EF1B  F011         	goto	u3510
  7136   00221A  5014               	movf	(??_change_pass+3)^0,w,c
  7137   00221C  1013               	iorwf	(??_change_pass+2)^0,w,c
  7138   00221E  E109               	bnz	u3511
  7139   002220  0ED0               	movlw	208
  7140   002222  5C11               	subwf	??_change_pass^0,w,c
  7141   002224  0E07               	movlw	7
  7142   002226  5812               	subwfb	(??_change_pass+1)^0,w,c
  7143   002228  B0D8               	btfsc	status,0,c
  7144   00222A  EF19  F011         	goto	u3511
  7145   00222E  EF1B  F011         	goto	u3510
  7146   002232                     u3511:
  7147   002232  EF23  F011         	goto	l4076
  7148   002236                     u3510:
  7149   002236                     
  7150                           ;change_pwd.c: 57:                 clcd_putch('_', (0xC0 + (i)));;change_pwd.c: 57:     
      +                                      clcd_putch('_', (0xC0 + (i)));
  7151   002236  5030               	movf	change_pass@i^0,w,c
  7152   002238  0FC0               	addlw	192
  7153   00223A  6E0F               	movwf	clcd_putch@addr^0,c
  7154   00223C  0E5F               	movlw	95
  7155   00223E  EC32  F005         	call	_clcd_putch
  7156   002242  EF55  F011         	goto	l4084
  7157   002246                     l4076:
  7158   002246  BE2F               	btfsc	(change_pass@wait+3)^0,7,c
  7159   002248  EF32  F011         	goto	u3521
  7160   00224C  502F               	movf	(change_pass@wait+3)^0,w,c
  7161   00224E  102E               	iorwf	(change_pass@wait+2)^0,w,c
  7162   002250  E10B               	bnz	u3520
  7163   002252  0ED1               	movlw	209
  7164   002254  5C2C               	subwf	change_pass@wait^0,w,c
  7165   002256  0E07               	movlw	7
  7166   002258  582D               	subwfb	(change_pass@wait+1)^0,w,c
  7167   00225A  A0D8               	btfss	status,0,c
  7168   00225C  EF32  F011         	goto	u3521
  7169   002260  EF34  F011         	goto	u3520
  7170   002264                     u3521:
  7171   002264  EF4D  F011         	goto	l4082
  7172   002268                     u3520:
  7173   002268  BE2F               	btfsc	(change_pass@wait+3)^0,7,c
  7174   00226A  EF45  F011         	goto	u3530
  7175   00226E  502F               	movf	(change_pass@wait+3)^0,w,c
  7176   002270  102E               	iorwf	(change_pass@wait+2)^0,w,c
  7177   002272  E109               	bnz	u3531
  7178   002274  0EA0               	movlw	160
  7179   002276  5C2C               	subwf	change_pass@wait^0,w,c
  7180   002278  0E0F               	movlw	15
  7181   00227A  582D               	subwfb	(change_pass@wait+1)^0,w,c
  7182   00227C  B0D8               	btfsc	status,0,c
  7183   00227E  EF43  F011         	goto	u3531
  7184   002282  EF45  F011         	goto	u3530
  7185   002286                     u3531:
  7186   002286  EF4D  F011         	goto	l4082
  7187   00228A                     u3530:
  7188   00228A                     
  7189                           ;change_pwd.c: 59:                 clcd_putch(' ', (0xC0 + (i)));;change_pwd.c: 59:     
      +                                      clcd_putch(' ', (0xC0 + (i)));
  7190   00228A  5030               	movf	change_pass@i^0,w,c
  7191   00228C  0FC0               	addlw	192
  7192   00228E  6E0F               	movwf	clcd_putch@addr^0,c
  7193   002290  0E20               	movlw	32
  7194   002292  EC32  F005         	call	_clcd_putch
  7195   002296  EF55  F011         	goto	l4084
  7196   00229A                     l4082:
  7197                           
  7198                           ;change_pwd.c: 61:                 wait = 0;;change_pwd.c: 61:                 wait = 0;
  7199   00229A  0E00               	movlw	0
  7200   00229C  6E2C               	movwf	change_pass@wait^0,c
  7201   00229E  0E00               	movlw	0
  7202   0022A0  6E2D               	movwf	(change_pass@wait+1)^0,c
  7203   0022A2  0E00               	movlw	0
  7204   0022A4  6E2E               	movwf	(change_pass@wait+2)^0,c
  7205   0022A6  0E00               	movlw	0
  7206   0022A8  6E2F               	movwf	(change_pass@wait+3)^0,c
  7207   0022AA                     l4084:
  7208                           
  7209                           ;change_pwd.c: 63:             if (key == 5);change_pwd.c: 63:             if (key == 5)
  7210   0022AA  0E05               	movlw	5
  7211   0022AC  182B               	xorwf	change_pass@key^0,w,c
  7212   0022AE  A4D8               	btfss	status,2,c
  7213   0022B0  EF5C  F011         	goto	u3541
  7214   0022B4  EF5E  F011         	goto	u3540
  7215   0022B8                     u3541:
  7216   0022B8  EF70  F011         	goto	l4092
  7217   0022BC                     u3540:
  7218   0022BC                     
  7219                           ;change_pwd.c: 64:             {;change_pwd.c: 64:             {;change_pwd.c: 65:      
      +                                     clcd_putch('*', (0xC0 + (i)));;change_pwd.c: 65:                 clcd_putch('
      +                          *', (0xC0 + (i)));
  7220   0022BC  5030               	movf	change_pass@i^0,w,c
  7221   0022BE  0FC0               	addlw	192
  7222   0022C0  6E0F               	movwf	clcd_putch@addr^0,c
  7223   0022C2  0E2A               	movlw	42
  7224   0022C4  EC32  F005         	call	_clcd_putch
  7225   0022C8                     
  7226                           ;change_pwd.c: 66:                 confirm_password[i++] = '0';;change_pwd.c: 66:       
      +                                    confirm_password[i++] = '0';
  7227   0022C8  0E15               	movlw	low change_pass@confirm_password
  7228   0022CA  2430               	addwf	change_pass@i^0,w,c
  7229   0022CC  6ED9               	movwf	fsr2l,c
  7230   0022CE  0E00               	movlw	high change_pass@confirm_password
  7231   0022D0  2031               	addwfc	(change_pass@i+1)^0,w,c
  7232   0022D2  6EDA               	movwf	fsr2h,c
  7233   0022D4  0E30               	movlw	48
  7234   0022D6  6EDF               	movwf	indf2,c
  7235   0022D8                     l4090:
  7236   0022D8  4A30               	infsnz	change_pass@i^0,f,c
  7237   0022DA  2A31               	incf	(change_pass@i+1)^0,f,c
  7238                           
  7239                           ;change_pwd.c: 67:             };change_pwd.c: 67:             }
  7240   0022DC  EF89  F011         	goto	l4100
  7241   0022E0                     l4092:
  7242   0022E0  0E06               	movlw	6
  7243   0022E2  182B               	xorwf	change_pass@key^0,w,c
  7244   0022E4  A4D8               	btfss	status,2,c
  7245   0022E6  EF77  F011         	goto	u3551
  7246   0022EA  EF79  F011         	goto	u3550
  7247   0022EE                     u3551:
  7248   0022EE  EF89  F011         	goto	l4100
  7249   0022F2                     u3550:
  7250   0022F2                     
  7251                           ;change_pwd.c: 69:             {;change_pwd.c: 69:             {;change_pwd.c: 70:      
      +                                     clcd_putch('*', (0xC0 + (i)));;change_pwd.c: 70:                 clcd_putch('
      +                          *', (0xC0 + (i)));
  7252   0022F2  5030               	movf	change_pass@i^0,w,c
  7253   0022F4  0FC0               	addlw	192
  7254   0022F6  6E0F               	movwf	clcd_putch@addr^0,c
  7255   0022F8  0E2A               	movlw	42
  7256   0022FA  EC32  F005         	call	_clcd_putch
  7257   0022FE                     
  7258                           ;change_pwd.c: 71:                 confirm_password[i++] = '1';;change_pwd.c: 71:       
      +                                    confirm_password[i++] = '1';
  7259   0022FE  0E15               	movlw	low change_pass@confirm_password
  7260   002300  2430               	addwf	change_pass@i^0,w,c
  7261   002302  6ED9               	movwf	fsr2l,c
  7262   002304  0E00               	movlw	high change_pass@confirm_password
  7263   002306  2031               	addwfc	(change_pass@i+1)^0,w,c
  7264   002308  6EDA               	movwf	fsr2h,c
  7265   00230A  0E31               	movlw	49
  7266   00230C  6EDF               	movwf	indf2,c
  7267   00230E  EF6C  F011         	goto	l4090
  7268   002312                     l4100:
  7269                           
  7270                           ;change_pwd.c: 52:         while (i < 4);change_pwd.c: 52:         while (i < 4)
  7271   002312  BE31               	btfsc	(change_pass@i+1)^0,7,c
  7272   002314  EF95  F011         	goto	u3561
  7273   002318  5031               	movf	(change_pass@i+1)^0,w,c
  7274   00231A  E109               	bnz	u3560
  7275   00231C  0E04               	movlw	4
  7276   00231E  5C30               	subwf	change_pass@i^0,w,c
  7277   002320  A0D8               	btfss	status,0,c
  7278   002322  EF95  F011         	goto	u3561
  7279   002326  EF97  F011         	goto	u3560
  7280   00232A                     u3561:
  7281   00232A  EFF9  F010         	goto	l4070
  7282   00232E                     u3560:
  7283   00232E                     
  7284                           ;change_pwd.c: 74:         confirm_password[i] = '\0';;change_pwd.c: 74:         confirm
      +                          _password[i] = '\0';
  7285   00232E  0E15               	movlw	low change_pass@confirm_password
  7286   002330  2430               	addwf	change_pass@i^0,w,c
  7287   002332  6ED9               	movwf	fsr2l,c
  7288   002334  0E00               	movlw	high change_pass@confirm_password
  7289   002336  2031               	addwfc	(change_pass@i+1)^0,w,c
  7290   002338  6EDA               	movwf	fsr2h,c
  7291   00233A  6ADF               	clrf	indf2,c
  7292   00233C                     
  7293                           ;change_pwd.c: 77:         if (strcmp(new_password, confirm_password) == 0);change_pwd.c
      +                          : 77:         if (strcmp(new_password, confirm_password) == 0)
  7294   00233C  0E22               	movlw	low change_pass@new_password
  7295   00233E  6E01               	movwf	strcmp@l^0,c
  7296   002340  0E00               	movlw	high change_pass@new_password
  7297   002342  6E02               	movwf	(strcmp@l+1)^0,c
  7298   002344  0E15               	movlw	low change_pass@confirm_password
  7299   002346  6E03               	movwf	strcmp@r^0,c
  7300   002348  0E00               	movlw	high change_pass@confirm_password
  7301   00234A  6E04               	movwf	(strcmp@r+1)^0,c
  7302   00234C  ECE3  F006         	call	_strcmp	;wreg free
  7303   002350  5001               	movf	?_strcmp^0,w,c
  7304   002352  1002               	iorwf	(?_strcmp+1)^0,w,c
  7305   002354  A4D8               	btfss	status,2,c
  7306   002356  EFAF  F011         	goto	u3571
  7307   00235A  EFB1  F011         	goto	u3570
  7308   00235E                     u3571:
  7309   00235E  EF10  F012         	goto	l4136
  7310   002362                     u3570:
  7311   002362                     
  7312                           ;change_pwd.c: 78:         {;change_pwd.c: 78:         {;change_pwd.c: 80:             f
      +                          or (int p = 0; p < 4; p++);change_pwd.c: 80:             for (int p = 0; p < 4; p++)
  7313   002362  0E00               	movlw	0
  7314   002364  6E2A               	movwf	(change_pass@p+1)^0,c
  7315   002366  0E00               	movlw	0
  7316   002368  6E29               	movwf	change_pass@p^0,c
  7317   00236A                     l4112:
  7318                           
  7319                           ;change_pwd.c: 81:             {;change_pwd.c: 81:             {;change_pwd.c: 82:      
      +                                     write_ext_eeprom(p, new_password[p]);;change_pwd.c: 82:                 write
      +                          _ext_eeprom(p, new_password[p]);
  7320   00236A  0E22               	movlw	low change_pass@new_password
  7321   00236C  2429               	addwf	change_pass@p^0,w,c
  7322   00236E  6ED9               	movwf	fsr2l,c
  7323   002370  0E00               	movlw	high change_pass@new_password
  7324   002372  202A               	addwfc	(change_pass@p+1)^0,w,c
  7325   002374  6EDA               	movwf	fsr2h,c
  7326   002376  50DF               	movf	indf2,w,c
  7327   002378  6E02               	movwf	write_ext_eeprom@data^0,c
  7328   00237A  5029               	movf	change_pass@p^0,w,c
  7329   00237C  EC0B  F006         	call	_write_ext_eeprom
  7330   002380                     
  7331                           ;change_pwd.c: 83:             };change_pwd.c: 83:             }
  7332   002380  4A29               	infsnz	change_pass@p^0,f,c
  7333   002382  2A2A               	incf	(change_pass@p+1)^0,f,c
  7334   002384  BE2A               	btfsc	(change_pass@p+1)^0,7,c
  7335   002386  EFCE  F011         	goto	u3581
  7336   00238A  502A               	movf	(change_pass@p+1)^0,w,c
  7337   00238C  E109               	bnz	u3580
  7338   00238E  0E04               	movlw	4
  7339   002390  5C29               	subwf	change_pass@p^0,w,c
  7340   002392  A0D8               	btfss	status,0,c
  7341   002394  EFCE  F011         	goto	u3581
  7342   002398  EFD0  F011         	goto	u3580
  7343   00239C                     u3581:
  7344   00239C  EFB5  F011         	goto	l4112
  7345   0023A0                     u3580:
  7346   0023A0                     
  7347                           ;change_pwd.c: 85:             pwd_flag = 1;;change_pwd.c: 85:             pwd_flag = 1;
  7348   0023A0  0E00               	movlw	0
  7349   0023A2  6E28               	movwf	(change_pass@pwd_flag+1)^0,c
  7350   0023A4  0E01               	movlw	1
  7351   0023A6  6E27               	movwf	change_pass@pwd_flag^0,c
  7352   0023A8                     
  7353                           ;change_pwd.c: 88:             {;change_pwd.c: 88:             {;change_pwd.c: 89:      
      +                                     clcd_write(0x01, 0);;change_pwd.c: 89:                 clcd_write(0x01, 0);
  7354   0023A8  0E00               	movlw	0
  7355   0023AA  6E01               	movwf	clcd_write@control_bit^0,c
  7356   0023AC  0E01               	movlw	1
  7357   0023AE  ECEE  F005         	call	_clcd_write
  7358   0023B2                     
  7359                           ;change_pwd.c: 90:                 clcd_print("Change Password", (0x80 + (0)));;change_p
      +                          wd.c: 90:                 clcd_print("Change Password", (0x80 + (0)));
  7360   0023B2  0E27               	movlw	low STR_3
  7361   0023B4  6E03               	movwf	clcd_print@data^0,c
  7362   0023B6  0E2F               	movlw	high STR_3
  7363   0023B8  6E04               	movwf	(clcd_print@data+1)^0,c
  7364   0023BA  0E80               	movlw	128
  7365   0023BC  6E05               	movwf	clcd_print@addr^0,c
  7366   0023BE  ECAD  F006         	call	_clcd_print	;wreg free
  7367   0023C2                     
  7368                           ;change_pwd.c: 91:                 clcd_print("Successful!!", (0xC0 + (2)));;change_pwd.
      +                          c: 91:                 clcd_print("Successful!!", (0xC0 + (2)));
  7369   0023C2  0E7F               	movlw	low STR_4
  7370   0023C4  6E03               	movwf	clcd_print@data^0,c
  7371   0023C6  0E2F               	movlw	high STR_4
  7372   0023C8  6E04               	movwf	(clcd_print@data+1)^0,c
  7373   0023CA  0EC2               	movlw	194
  7374   0023CC  6E05               	movwf	clcd_print@addr^0,c
  7375   0023CE  ECAD  F006         	call	_clcd_print	;wreg free
  7376   0023D2                     
  7377                           ;change_pwd.c: 92:                 for (long int k = 900000; k--;);;change_pwd.c: 92:   
      +                                        for (long int k = 900000; k--;);
  7378   0023D2  0EA0               	movlw	160
  7379   0023D4  6E1A               	movwf	change_pass@k^0,c
  7380   0023D6  0EBB               	movlw	187
  7381   0023D8  6E1B               	movwf	(change_pass@k+1)^0,c
  7382   0023DA  0E0D               	movlw	13
  7383   0023DC  6E1C               	movwf	(change_pass@k+2)^0,c
  7384   0023DE  0E00               	movlw	0
  7385   0023E0  6E1D               	movwf	(change_pass@k+3)^0,c
  7386   0023E2                     l4130:
  7387   0023E2  0EFF               	movlw	255
  7388   0023E4  261A               	addwf	change_pass@k^0,f,c
  7389   0023E6  0EFF               	movlw	255
  7390   0023E8  221B               	addwfc	(change_pass@k+1)^0,f,c
  7391   0023EA  0EFF               	movlw	255
  7392   0023EC  221C               	addwfc	(change_pass@k+2)^0,f,c
  7393   0023EE  0EFF               	movlw	255
  7394   0023F0  221D               	addwfc	(change_pass@k+3)^0,f,c
  7395   0023F2  281A               	incf	change_pass@k^0,w,c
  7396   0023F4  E10A               	bnz	u3591
  7397   0023F6  281B               	incf	(change_pass@k+1)^0,w,c
  7398   0023F8  E108               	bnz	u3591
  7399   0023FA  281C               	incf	(change_pass@k+2)^0,w,c
  7400   0023FC  E106               	bnz	u3591
  7401   0023FE  281D               	incf	(change_pass@k+3)^0,w,c
  7402   002400  A4D8               	btfss	status,2,c
  7403   002402  EF05  F012         	goto	u3591
  7404   002406  EF07  F012         	goto	u3590
  7405   00240A                     u3591:
  7406   00240A  EFF1  F011         	goto	l4130
  7407   00240E                     u3590:
  7408   00240E                     
  7409                           ;change_pwd.c: 94:                 main_f = 2;;change_pwd.c: 94:                 main_f 
      +                          = 2;
  7410   00240E  0E02               	movlw	2
  7411   002410  6E51               	movwf	_main_f^0,c
  7412   002412                     
  7413                           ;change_pwd.c: 95:                 clcd_write(0x01, 0);;change_pwd.c: 95:               
      +                            clcd_write(0x01, 0);
  7414   002412  0E00               	movlw	0
  7415   002414  6E01               	movwf	clcd_write@control_bit^0,c
  7416   002416  0E01               	movlw	1
  7417   002418  ECEE  F005         	call	_clcd_write
  7418   00241C  EF43  F012         	goto	l4146
  7419   002420                     l4136:
  7420                           
  7421                           ;change_pwd.c: 99:         {;change_pwd.c: 99:         {;change_pwd.c: 100:             
      +                          clcd_write(0x01, 0);;change_pwd.c: 100:             clcd_write(0x01, 0);
  7422   002420  0E00               	movlw	0
  7423   002422  6E01               	movwf	clcd_write@control_bit^0,c
  7424   002424  0E01               	movlw	1
  7425   002426  ECEE  F005         	call	_clcd_write
  7426   00242A                     
  7427                           ;change_pwd.c: 101:             clcd_print("Passwords Do Not", (0x80 + (0)));;change_pwd
      +                          .c: 101:             clcd_print("Passwords Do Not", (0x80 + (0)));
  7428   00242A  0E06               	movlw	low STR_5
  7429   00242C  6E03               	movwf	clcd_print@data^0,c
  7430   00242E  0E2F               	movlw	high STR_5
  7431   002430  6E04               	movwf	(clcd_print@data+1)^0,c
  7432   002432  0E80               	movlw	128
  7433   002434  6E05               	movwf	clcd_print@addr^0,c
  7434   002436  ECAD  F006         	call	_clcd_print	;wreg free
  7435   00243A                     
  7436                           ;change_pwd.c: 102:             clcd_print("Match", (0xC0 + (3)));;change_pwd.c: 102:   
      +                                    clcd_print("Match", (0xC0 + (3)));
  7437   00243A  0ED6               	movlw	low STR_6
  7438   00243C  6E03               	movwf	clcd_print@data^0,c
  7439   00243E  0E2F               	movlw	high STR_6
  7440   002440  6E04               	movwf	(clcd_print@data+1)^0,c
  7441   002442  0EC3               	movlw	195
  7442   002444  6E05               	movwf	clcd_print@addr^0,c
  7443   002446  ECAD  F006         	call	_clcd_print	;wreg free
  7444   00244A                     
  7445                           ;change_pwd.c: 103:             for (long int k = 900000; k--;);;change_pwd.c: 103:     
      +                                  for (long int k = 900000; k--;);
  7446   00244A  0EA0               	movlw	160
  7447   00244C  6E1E               	movwf	change_pass@k_176^0,c
  7448   00244E  0EBB               	movlw	187
  7449   002450  6E1F               	movwf	(change_pass@k_176+1)^0,c
  7450   002452  0E0D               	movlw	13
  7451   002454  6E20               	movwf	(change_pass@k_176+2)^0,c
  7452   002456  0E00               	movlw	0
  7453   002458  6E21               	movwf	(change_pass@k_176+3)^0,c
  7454   00245A                     l4144:
  7455   00245A  0EFF               	movlw	255
  7456   00245C  261E               	addwf	change_pass@k_176^0,f,c
  7457   00245E  0EFF               	movlw	255
  7458   002460  221F               	addwfc	(change_pass@k_176+1)^0,f,c
  7459   002462  0EFF               	movlw	255
  7460   002464  2220               	addwfc	(change_pass@k_176+2)^0,f,c
  7461   002466  0EFF               	movlw	255
  7462   002468  2221               	addwfc	(change_pass@k_176+3)^0,f,c
  7463   00246A  281E               	incf	change_pass@k_176^0,w,c
  7464   00246C  E10A               	bnz	u3601
  7465   00246E  281F               	incf	(change_pass@k_176+1)^0,w,c
  7466   002470  E108               	bnz	u3601
  7467   002472  2820               	incf	(change_pass@k_176+2)^0,w,c
  7468   002474  E106               	bnz	u3601
  7469   002476  2821               	incf	(change_pass@k_176+3)^0,w,c
  7470   002478  A4D8               	btfss	status,2,c
  7471   00247A  EF41  F012         	goto	u3601
  7472   00247E  EF43  F012         	goto	u3600
  7473   002482                     u3601:
  7474   002482  EF2D  F012         	goto	l4144
  7475   002486                     u3600:
  7476   002486                     l4146:
  7477                           
  7478                           ;change_pwd.c: 105:     } while (!pwd_flag);;change_pwd.c: 105:     } while (!pwd_flag);
  7479   002486  5027               	movf	change_pass@pwd_flag^0,w,c
  7480   002488  1028               	iorwf	(change_pass@pwd_flag+1)^0,w,c
  7481   00248A  B4D8               	btfsc	status,2,c
  7482   00248C  EF4A  F012         	goto	u3611
  7483   002490  EF4C  F012         	goto	u3610
  7484   002494                     u3611:
  7485   002494  EF2E  F010         	goto	l4024
  7486   002498                     u3610:
  7487   002498  0012               	return		;funcret
  7488   00249A                     __end_of_change_pass:
  7489                           	callstack 0
  7490                           
  7491 ;; *************** function _write_ext_eeprom *****************
  7492 ;; Defined at:
  7493 ;;		line 11 in file "ext_eeprom.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  address         1    wreg     unsigned char 
  7496 ;;  data            1    1[COMRAM] unsigned char 
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;  address         1    4[COMRAM] unsigned char 
  7499 ;;  i               2    2[COMRAM] int 
  7500 ;; Return value:  Size  Location     Type
  7501 ;;                  1    wreg      void 
  7502 ;; Registers used:
  7503 ;;		wreg, status,2, status,0, cstack
  7504 ;; Tracked objects:
  7505 ;;		On entry : 0/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7509 ;;      Params:         1       0       0       0       0       0       0
  7510 ;;      Locals:         3       0       0       0       0       0       0
  7511 ;;      Temps:          0       0       0       0       0       0       0
  7512 ;;      Totals:         4       0       0       0       0       0       0
  7513 ;;Total ram usage:        4 bytes
  7514 ;; Hardware stack levels used: 1
  7515 ;; Hardware stack levels required when called: 2
  7516 ;; This function calls:
  7517 ;;		_i2c_start
  7518 ;;		_i2c_stop
  7519 ;;		_i2c_write
  7520 ;; This function is called by:
  7521 ;;		_main
  7522 ;;		_change_pass
  7523 ;;		_store_event
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527                           	psect	text35
  7528   000C16                     __ptext35:
  7529                           	callstack 0
  7530   000C16                     _write_ext_eeprom:
  7531                           	callstack 28
  7532                           
  7533                           ;incstack = 0
  7534                           ;write_ext_eeprom@address stored from wreg
  7535   000C16  6E05               	movwf	write_ext_eeprom@address^0,c
  7536   000C18                     
  7537                           ;ext_eeprom.c: 11: void write_ext_eeprom(unsigned char address, unsigned char data);ext_
      +                          eeprom.c: 12: {;ext_eeprom.c: 13:  i2c_start();
  7538   000C18  ECDC  F004         	call	_i2c_start	;wreg free
  7539   000C1C                     
  7540                           ;ext_eeprom.c: 14:  i2c_write(0xA0);
  7541   000C1C  0EA0               	movlw	160
  7542   000C1E  ECEC  F004         	call	_i2c_write
  7543   000C22                     
  7544                           ;ext_eeprom.c: 15:  i2c_write(address);
  7545   000C22  5005               	movf	write_ext_eeprom@address^0,w,c
  7546   000C24  ECEC  F004         	call	_i2c_write
  7547   000C28                     
  7548                           ;ext_eeprom.c: 16:  i2c_write(data);
  7549   000C28  5002               	movf	write_ext_eeprom@data^0,w,c
  7550   000C2A  ECEC  F004         	call	_i2c_write
  7551   000C2E                     
  7552                           ;ext_eeprom.c: 17:  i2c_stop();
  7553   000C2E  ECE0  F004         	call	_i2c_stop	;wreg free
  7554   000C32                     
  7555                           ;ext_eeprom.c: 18:         for(int i=3000;i--;);
  7556   000C32  0E0B               	movlw	11
  7557   000C34  6E04               	movwf	(write_ext_eeprom@i+1)^0,c
  7558   000C36  0EB8               	movlw	184
  7559   000C38  6E03               	movwf	write_ext_eeprom@i^0,c
  7560   000C3A                     l2882:
  7561   000C3A  0603               	decf	write_ext_eeprom@i^0,f,c
  7562   000C3C  A0D8               	btfss	status,0,c
  7563   000C3E  0604               	decf	(write_ext_eeprom@i+1)^0,f,c
  7564   000C40  2803               	incf	write_ext_eeprom@i^0,w,c
  7565   000C42  E106               	bnz	u1911
  7566   000C44  2804               	incf	(write_ext_eeprom@i+1)^0,w,c
  7567   000C46  A4D8               	btfss	status,2,c
  7568   000C48  EF28  F006         	goto	u1911
  7569   000C4C  EF2A  F006         	goto	u1910
  7570   000C50                     u1911:
  7571   000C50  EF1D  F006         	goto	l2882
  7572   000C54                     u1910:
  7573   000C54  0012               	return		;funcret
  7574   000C56                     __end_of_write_ext_eeprom:
  7575                           	callstack 0
  7576                           
  7577 ;; *************** function _i2c_write *****************
  7578 ;; Defined at:
  7579 ;;		line 56 in file "i2c.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;  data            1    wreg     unsigned char 
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;  data            1    0[COMRAM] unsigned char 
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  1    wreg      void 
  7586 ;; Registers used:
  7587 ;;		wreg, cstack
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7593 ;;      Params:         0       0       0       0       0       0       0
  7594 ;;      Locals:         1       0       0       0       0       0       0
  7595 ;;      Temps:          0       0       0       0       0       0       0
  7596 ;;      Totals:         1       0       0       0       0       0       0
  7597 ;;Total ram usage:        1 bytes
  7598 ;; Hardware stack levels used: 1
  7599 ;; Hardware stack levels required when called: 1
  7600 ;; This function calls:
  7601 ;;		_i2c_idle
  7602 ;; This function is called by:
  7603 ;;		_write_ds1307
  7604 ;;		_read_ds1307
  7605 ;;		_write_ext_eeprom
  7606 ;;		_read_ext_eeprom
  7607 ;; This function uses a non-reentrant model
  7608 ;;
  7609                           
  7610                           	psect	text36
  7611   0009D8                     __ptext36:
  7612                           	callstack 0
  7613   0009D8                     _i2c_write:
  7614                           	callstack 28
  7615                           
  7616                           ;incstack = 0
  7617                           ;i2c_write@data stored from wreg
  7618   0009D8  6E01               	movwf	i2c_write@data^0,c
  7619   0009DA                     
  7620                           ;i2c.c: 56: void i2c_write(unsigned char data);i2c.c: 57: {;i2c.c: 58:  SSPBUF = data;
  7621   0009DA  C001  FFC9         	movff	i2c_write@data,4041	;volatile
  7622   0009DE                     
  7623                           ;i2c.c: 59:  i2c_idle();
  7624   0009DE  ECF8  F004         	call	_i2c_idle	;wreg free
  7625   0009E2  0012               	return		;funcret
  7626   0009E4                     __end_of_i2c_write:
  7627                           	callstack 0
  7628                           
  7629 ;; *************** function _i2c_stop *****************
  7630 ;; Defined at:
  7631 ;;		line 44 in file "i2c.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;		None
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;		None
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1    wreg      void 
  7638 ;; Registers used:
  7639 ;;		cstack
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7645 ;;      Params:         0       0       0       0       0       0       0
  7646 ;;      Locals:         0       0       0       0       0       0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0
  7648 ;;      Totals:         0       0       0       0       0       0       0
  7649 ;;Total ram usage:        0 bytes
  7650 ;; Hardware stack levels used: 1
  7651 ;; Hardware stack levels required when called: 1
  7652 ;; This function calls:
  7653 ;;		_i2c_idle
  7654 ;; This function is called by:
  7655 ;;		_write_ds1307
  7656 ;;		_read_ds1307
  7657 ;;		_write_ext_eeprom
  7658 ;;		_read_ext_eeprom
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           	psect	text37
  7663   0009C0                     __ptext37:
  7664                           	callstack 0
  7665   0009C0                     _i2c_stop:
  7666                           	callstack 28
  7667   0009C0                     
  7668                           ;i2c.c: 46:  PEN = 1;
  7669   0009C0  84C5               	bsf	4037,2,c	;volatile
  7670   0009C2                     
  7671                           ;i2c.c: 47:  i2c_idle();
  7672   0009C2  ECF8  F004         	call	_i2c_idle	;wreg free
  7673   0009C6  0012               	return		;funcret
  7674   0009C8                     __end_of_i2c_stop:
  7675                           	callstack 0
  7676                           
  7677 ;; *************** function _i2c_start *****************
  7678 ;; Defined at:
  7679 ;;		line 38 in file "i2c.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;		None
  7682 ;; Auto vars:     Size  Location     Type
  7683 ;;		None
  7684 ;; Return value:  Size  Location     Type
  7685 ;;                  1    wreg      void 
  7686 ;; Registers used:
  7687 ;;		cstack
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7693 ;;      Params:         0       0       0       0       0       0       0
  7694 ;;      Locals:         0       0       0       0       0       0       0
  7695 ;;      Temps:          0       0       0       0       0       0       0
  7696 ;;      Totals:         0       0       0       0       0       0       0
  7697 ;;Total ram usage:        0 bytes
  7698 ;; Hardware stack levels used: 1
  7699 ;; Hardware stack levels required when called: 1
  7700 ;; This function calls:
  7701 ;;		_i2c_idle
  7702 ;; This function is called by:
  7703 ;;		_write_ds1307
  7704 ;;		_read_ds1307
  7705 ;;		_write_ext_eeprom
  7706 ;;		_read_ext_eeprom
  7707 ;; This function uses a non-reentrant model
  7708 ;;
  7709                           
  7710                           	psect	text38
  7711   0009B8                     __ptext38:
  7712                           	callstack 0
  7713   0009B8                     _i2c_start:
  7714                           	callstack 28
  7715   0009B8                     
  7716                           ;i2c.c: 40:  SEN = 1;
  7717   0009B8  80C5               	bsf	4037,0,c	;volatile
  7718   0009BA                     
  7719                           ;i2c.c: 41:  i2c_idle();
  7720   0009BA  ECF8  F004         	call	_i2c_idle	;wreg free
  7721   0009BE  0012               	return		;funcret
  7722   0009C0                     __end_of_i2c_start:
  7723                           	callstack 0
  7724                           
  7725 ;; *************** function _i2c_idle *****************
  7726 ;; Defined at:
  7727 ;;		line 24 in file "i2c.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;		None
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;		None
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  1    wreg      void 
  7734 ;; Registers used:
  7735 ;;		None
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7741 ;;      Params:         0       0       0       0       0       0       0
  7742 ;;      Locals:         0       0       0       0       0       0       0
  7743 ;;      Temps:          0       0       0       0       0       0       0
  7744 ;;      Totals:         0       0       0       0       0       0       0
  7745 ;;Total ram usage:        0 bytes
  7746 ;; Hardware stack levels used: 1
  7747 ;; This function calls:
  7748 ;;		Nothing
  7749 ;; This function is called by:
  7750 ;;		_i2c_start
  7751 ;;		_i2c_stop
  7752 ;;		_i2c_rep_start
  7753 ;;		_i2c_write
  7754 ;;		_i2c_rx_mode
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757                           
  7758                           	psect	text39
  7759   0009F0                     __ptext39:
  7760                           	callstack 0
  7761   0009F0                     _i2c_idle:
  7762                           	callstack 28
  7763   0009F0                     l400:
  7764   0009F0  A69E               	btfss	3998,3,c	;volatile
  7765   0009F2  EFFD  F004         	goto	u1871
  7766   0009F6  EFFF  F004         	goto	u1870
  7767   0009FA                     u1871:
  7768   0009FA  EFF8  F004         	goto	l400
  7769   0009FE                     u1870:
  7770   0009FE                     
  7771                           ;i2c.c: 27:  SSPIF = 0;
  7772   0009FE  969E               	bcf	3998,3,c	;volatile
  7773   000A00  0012               	return		;funcret
  7774   000A02                     __end_of_i2c_idle:
  7775                           	callstack 0
  7776                           
  7777 ;; *************** function _strcmp *****************
  7778 ;; Defined at:
  7779 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcmp.c"
  7780 ;; Parameters:    Size  Location     Type
  7781 ;;  l               2    0[COMRAM] PTR const unsigned char 
  7782 ;;		 -> change_pass@new_password(5), 
  7783 ;;  r               2    2[COMRAM] PTR const unsigned char 
  7784 ;;		 -> change_pass@confirm_password(5), 
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;		None
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  2    0[COMRAM] int 
  7789 ;; Registers used:
  7790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7796 ;;      Params:         4       0       0       0       0       0       0
  7797 ;;      Locals:         0       0       0       0       0       0       0
  7798 ;;      Temps:          2       0       0       0       0       0       0
  7799 ;;      Totals:         6       0       0       0       0       0       0
  7800 ;;Total ram usage:        6 bytes
  7801 ;; Hardware stack levels used: 1
  7802 ;; This function calls:
  7803 ;;		Nothing
  7804 ;; This function is called by:
  7805 ;;		_change_pass
  7806 ;; This function uses a non-reentrant model
  7807 ;;
  7808                           
  7809                           	psect	text40
  7810   000DC6                     __ptext40:
  7811                           	callstack 0
  7812   000DC6                     _strcmp:
  7813                           	callstack 29
  7814   000DC6  EFE9  F006         	goto	l3210
  7815   000DCA                     l3208:
  7816   000DCA  4A01               	infsnz	strcmp@l^0,f,c
  7817   000DCC  2A02               	incf	(strcmp@l+1)^0,f,c
  7818   000DCE  4A03               	infsnz	strcmp@r^0,f,c
  7819   000DD0  2A04               	incf	(strcmp@r+1)^0,f,c
  7820   000DD2                     l3210:
  7821   000DD2  C003  FFD9         	movff	strcmp@r,fsr2l
  7822   000DD6  C004  FFDA         	movff	strcmp@r+1,fsr2h
  7823   000DDA  C001  FFE1         	movff	strcmp@l,fsr1l
  7824   000DDE  C002  FFE2         	movff	strcmp@l+1,fsr1h
  7825   000DE2  50DE               	movf	postinc2,w,c
  7826   000DE4  18E6               	xorwf	postinc1,w,c
  7827   000DE6  A4D8               	btfss	status,2,c
  7828   000DE8  EFF8  F006         	goto	u2321
  7829   000DEC  EFFA  F006         	goto	u2320
  7830   000DF0                     u2321:
  7831   000DF0  EF06  F007         	goto	l3214
  7832   000DF4                     u2320:
  7833   000DF4  C001  FFD9         	movff	strcmp@l,fsr2l
  7834   000DF8  C002  FFDA         	movff	strcmp@l+1,fsr2h
  7835   000DFC  50DF               	movf	indf2,w,c
  7836   000DFE  A4D8               	btfss	status,2,c
  7837   000E00  EF04  F007         	goto	u2331
  7838   000E04  EF06  F007         	goto	u2330
  7839   000E08                     u2331:
  7840   000E08  EFE5  F006         	goto	l3208
  7841   000E0C                     u2330:
  7842   000E0C                     l3214:
  7843   000E0C  C001  FFD9         	movff	strcmp@l,fsr2l
  7844   000E10  C002  FFDA         	movff	strcmp@l+1,fsr2h
  7845   000E14  50DF               	movf	indf2,w,c
  7846   000E16  6E05               	movwf	??_strcmp^0,c
  7847   000E18  C003  FFD9         	movff	strcmp@r,fsr2l
  7848   000E1C  C004  FFDA         	movff	strcmp@r+1,fsr2h
  7849   000E20  50DF               	movf	indf2,w,c
  7850   000E22  6E06               	movwf	(??_strcmp+1)^0,c
  7851   000E24  5006               	movf	(??_strcmp+1)^0,w,c
  7852   000E26  5C05               	subwf	??_strcmp^0,w,c
  7853   000E28  6E01               	movwf	?_strcmp^0,c
  7854   000E2A  6A02               	clrf	(?_strcmp+1)^0,c
  7855   000E2C  A0D8               	btfss	status,0,c
  7856   000E2E  0602               	decf	(?_strcmp+1)^0,f,c
  7857   000E30  0012               	return		;funcret
  7858   000E32                     __end_of_strcmp:
  7859                           	callstack 0
  7860                           
  7861 ;; *************** function _read_switches *****************
  7862 ;; Defined at:
  7863 ;;		line 88 in file "keypad.c"
  7864 ;; Parameters:    Size  Location     Type
  7865 ;;  detection_ty    1    wreg     unsigned char 
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;  detection_ty    1    0[COMRAM] unsigned char 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  1    wreg      unsigned char 
  7870 ;; Registers used:
  7871 ;;		wreg, status,2, status,0, cstack
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7877 ;;      Params:         0       0       0       0       0       0       0
  7878 ;;      Locals:         1       0       0       0       0       0       0
  7879 ;;      Temps:          0       0       0       0       0       0       0
  7880 ;;      Totals:         1       0       0       0       0       0       0
  7881 ;;Total ram usage:        1 bytes
  7882 ;; Hardware stack levels used: 1
  7883 ;; Hardware stack levels required when called: 1
  7884 ;; This function calls:
  7885 ;;		_scan_key
  7886 ;; This function is called by:
  7887 ;;		_main
  7888 ;;		_change_pass
  7889 ;;		_menu
  7890 ;;		_clear_log
  7891 ;;		_dashboard
  7892 ;;		_settime
  7893 ;;		_setpassword
  7894 ;;		_view_log
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           
  7898                           	psect	text41
  7899   000E32                     __ptext41:
  7900                           	callstack 0
  7901   000E32                     _read_switches:
  7902                           	callstack 28
  7903                           
  7904                           ;incstack = 0
  7905                           ;read_switches@detection_type stored from wreg
  7906   000E32  6E01               	movwf	read_switches@detection_type^0,c
  7907   000E34                     
  7908                           ;keypad.c: 88: unsigned char read_switches(unsigned char detection_type);keypad.c: 88: u
      +                          nsigned char read_switches(unsigned char detection_type);keypad.c: 89: {;keypad.c: 89: {
      +                          ;keypad.c: 90:  static unsigned char once = 1, key;;keypad.c: 90:  static unsigned char 
      +                          once = 1, key;;keypad.c: 92:  if (detection_type == 1);keypad.c: 92:  if (detection_type
      +                           == 1)
  7909   000E34  0401               	decf	read_switches@detection_type^0,w,c
  7910   000E36  A4D8               	btfss	status,2,c
  7911   000E38  EF20  F007         	goto	u2271
  7912   000E3C  EF22  F007         	goto	u2270
  7913   000E40                     u2271:
  7914   000E40  EF46  F007         	goto	l3196
  7915   000E44                     u2270:
  7916   000E44                     
  7917                           ;keypad.c: 93:  {;keypad.c: 93:  {;keypad.c: 94:   key = scan_key();;keypad.c: 94:   key
      +                           = scan_key();
  7918   000E44  ECEE  F009         	call	_scan_key	;wreg free
  7919   000E48  6E4B               	movwf	read_switches@key^0,c
  7920   000E4A                     
  7921                           ;keypad.c: 95:   if(key != 0xFF && once );keypad.c: 95:   if(key != 0xFF && once )
  7922   000E4A  284B               	incf	read_switches@key^0,w,c
  7923   000E4C  B4D8               	btfsc	status,2,c
  7924   000E4E  EF2B  F007         	goto	u2281
  7925   000E52  EF2D  F007         	goto	u2280
  7926   000E56                     u2281:
  7927   000E56  EF3A  F007         	goto	l3192
  7928   000E5A                     u2280:
  7929   000E5A  505E               	movf	read_switches@once^0,w,c
  7930   000E5C  B4D8               	btfsc	status,2,c
  7931   000E5E  EF33  F007         	goto	u2291
  7932   000E62  EF35  F007         	goto	u2290
  7933   000E66                     u2291:
  7934   000E66  EF3A  F007         	goto	l3192
  7935   000E6A                     u2290:
  7936   000E6A                     
  7937                           ;keypad.c: 96:   {;keypad.c: 96:   {;keypad.c: 97:    once = 0;;keypad.c: 97:    once = 
      +                          0;
  7938   000E6A  0E00               	movlw	0
  7939   000E6C  6E5E               	movwf	read_switches@once^0,c
  7940                           
  7941                           ;keypad.c: 98:    return key;;keypad.c: 98:    return key;
  7942   000E6E  504B               	movf	read_switches@key^0,w,c
  7943   000E70  EF53  F007         	goto	l216
  7944   000E74                     l3192:
  7945   000E74  284B               	incf	read_switches@key^0,w,c
  7946   000E76  A4D8               	btfss	status,2,c
  7947   000E78  EF40  F007         	goto	u2301
  7948   000E7C  EF42  F007         	goto	u2300
  7949   000E80                     u2301:
  7950   000E80  EF52  F007         	goto	l3202
  7951   000E84                     u2300:
  7952   000E84                     
  7953                           ;keypad.c: 101:   {;keypad.c: 101:   {;keypad.c: 102:    once = 1;;keypad.c: 102:    onc
      +                          e = 1;
  7954   000E84  0E01               	movlw	1
  7955   000E86  6E5E               	movwf	read_switches@once^0,c
  7956   000E88  EF52  F007         	goto	l3202
  7957   000E8C                     l3196:
  7958   000E8C  5001               	movf	read_switches@detection_type^0,w,c
  7959   000E8E  A4D8               	btfss	status,2,c
  7960   000E90  EF4C  F007         	goto	u2311
  7961   000E94  EF4E  F007         	goto	u2310
  7962   000E98                     u2311:
  7963   000E98  EF52  F007         	goto	l3202
  7964   000E9C                     u2310:
  7965   000E9C                     
  7966                           ;keypad.c: 106:  {;keypad.c: 106:  {;keypad.c: 107:   return scan_key();;keypad.c: 107: 
      +                            return scan_key();
  7967   000E9C  ECEE  F009         	call	_scan_key	;wreg free
  7968   000EA0  EF53  F007         	goto	l216
  7969   000EA4                     l3202:
  7970                           
  7971                           ;keypad.c: 110:  return 0xFF;;keypad.c: 110:  return 0xFF;
  7972   000EA4  0EFF               	movlw	255
  7973   000EA6                     l216:
  7974   000EA6  0012               	return		;funcret
  7975   000EA8                     __end_of_read_switches:
  7976                           	callstack 0
  7977                           
  7978 ;; *************** function _scan_key *****************
  7979 ;; Defined at:
  7980 ;;		line 18 in file "keypad.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;		None
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;		None
  7985 ;; Return value:  Size  Location     Type
  7986 ;;                  1    wreg      unsigned char 
  7987 ;; Registers used:
  7988 ;;		wreg
  7989 ;; Tracked objects:
  7990 ;;		On entry : 0/0
  7991 ;;		On exit  : 0/0
  7992 ;;		Unchanged: 0/0
  7993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7994 ;;      Params:         0       0       0       0       0       0       0
  7995 ;;      Locals:         0       0       0       0       0       0       0
  7996 ;;      Temps:          0       0       0       0       0       0       0
  7997 ;;      Totals:         0       0       0       0       0       0       0
  7998 ;;Total ram usage:        0 bytes
  7999 ;; Hardware stack levels used: 1
  8000 ;; This function calls:
  8001 ;;		Nothing
  8002 ;; This function is called by:
  8003 ;;		_read_switches
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           	psect	text42
  8008   0013DC                     __ptext42:
  8009                           	callstack 0
  8010   0013DC                     _scan_key:
  8011                           	callstack 28
  8012   0013DC                     
  8013                           ;keypad.c: 20:  PORTBbits.RB5 = 0;;keypad.c: 20:  PORTBbits.RB5 = 0;
  8014   0013DC  9A81               	bcf	129,5,c	;volatile
  8015                           
  8016                           ;keypad.c: 21:  PORTBbits.RB6 = 1;;keypad.c: 21:  PORTBbits.RB6 = 1;
  8017   0013DE  8C81               	bsf	129,6,c	;volatile
  8018                           
  8019                           ;keypad.c: 22:  PORTBbits.RB7 = 1;;keypad.c: 22:  PORTBbits.RB7 = 1;
  8020   0013E0  8E81               	bsf	129,7,c	;volatile
  8021                           
  8022                           ;keypad.c: 24:  if (PORTBbits.RB1 == 0);keypad.c: 24:  if (PORTBbits.RB1 == 0)
  8023   0013E2  B281               	btfsc	129,1,c	;volatile
  8024   0013E4  EFF6  F009         	goto	u1961
  8025   0013E8  EFF8  F009         	goto	u1960
  8026   0013EC                     u1961:
  8027   0013EC  EFFB  F009         	goto	l186
  8028   0013F0                     u1960:
  8029   0013F0                     
  8030                           ;keypad.c: 25:  {;keypad.c: 25:  {;keypad.c: 26:   return 1;;keypad.c: 26:   return 1;
  8031   0013F0  0E01               	movlw	1
  8032   0013F2  EF71  F00A         	goto	l187
  8033   0013F6                     l186:
  8034   0013F6  B481               	btfsc	129,2,c	;volatile
  8035   0013F8  EF00  F00A         	goto	u1971
  8036   0013FC  EF02  F00A         	goto	u1970
  8037   001400                     u1971:
  8038   001400  EF05  F00A         	goto	l189
  8039   001404                     u1970:
  8040   001404                     
  8041                           ;keypad.c: 29:  {;keypad.c: 29:  {;keypad.c: 30:   return 4;;keypad.c: 30:   return 4;
  8042   001404  0E04               	movlw	4
  8043   001406  EF71  F00A         	goto	l187
  8044   00140A                     l189:
  8045   00140A  B681               	btfsc	129,3,c	;volatile
  8046   00140C  EF0A  F00A         	goto	u1981
  8047   001410  EF0C  F00A         	goto	u1980
  8048   001414                     u1981:
  8049   001414  EF0F  F00A         	goto	l191
  8050   001418                     u1980:
  8051   001418                     
  8052                           ;keypad.c: 33:  {;keypad.c: 33:  {;keypad.c: 34:   return 7;;keypad.c: 34:   return 7;
  8053   001418  0E07               	movlw	7
  8054   00141A  EF71  F00A         	goto	l187
  8055   00141E                     l191:
  8056   00141E  B881               	btfsc	129,4,c	;volatile
  8057   001420  EF14  F00A         	goto	u1991
  8058   001424  EF16  F00A         	goto	u1990
  8059   001428                     u1991:
  8060   001428  EF19  F00A         	goto	l188
  8061   00142C                     u1990:
  8062   00142C                     
  8063                           ;keypad.c: 37:  {;keypad.c: 37:  {;keypad.c: 38:   return 10;;keypad.c: 38:   return 10;
  8064   00142C  0E0A               	movlw	10
  8065   00142E  EF71  F00A         	goto	l187
  8066   001432                     l188:
  8067                           
  8068                           ;keypad.c: 41:  PORTBbits.RB5 = 1;;keypad.c: 41:  PORTBbits.RB5 = 1;
  8069   001432  8A81               	bsf	129,5,c	;volatile
  8070                           
  8071                           ;keypad.c: 42:  PORTBbits.RB6 = 0;;keypad.c: 42:  PORTBbits.RB6 = 0;
  8072   001434  9C81               	bcf	129,6,c	;volatile
  8073                           
  8074                           ;keypad.c: 43:  PORTBbits.RB7 = 1;;keypad.c: 43:  PORTBbits.RB7 = 1;
  8075   001436  8E81               	bsf	129,7,c	;volatile
  8076                           
  8077                           ;keypad.c: 45:  if (PORTBbits.RB1 == 0);keypad.c: 45:  if (PORTBbits.RB1 == 0)
  8078   001438  B281               	btfsc	129,1,c	;volatile
  8079   00143A  EF21  F00A         	goto	u2001
  8080   00143E  EF23  F00A         	goto	u2000
  8081   001442                     u2001:
  8082   001442  EF26  F00A         	goto	l194
  8083   001446                     u2000:
  8084   001446                     
  8085                           ;keypad.c: 46:  {;keypad.c: 46:  {;keypad.c: 47:   return 2;;keypad.c: 47:   return 2;
  8086   001446  0E02               	movlw	2
  8087   001448  EF71  F00A         	goto	l187
  8088   00144C                     l194:
  8089   00144C  B481               	btfsc	129,2,c	;volatile
  8090   00144E  EF2B  F00A         	goto	u2011
  8091   001452  EF2D  F00A         	goto	u2010
  8092   001456                     u2011:
  8093   001456  EF30  F00A         	goto	l196
  8094   00145A                     u2010:
  8095   00145A                     
  8096                           ;keypad.c: 50:  {;keypad.c: 50:  {;keypad.c: 51:   return 5;;keypad.c: 51:   return 5;
  8097   00145A  0E05               	movlw	5
  8098   00145C  EF71  F00A         	goto	l187
  8099   001460                     l196:
  8100   001460  B681               	btfsc	129,3,c	;volatile
  8101   001462  EF35  F00A         	goto	u2021
  8102   001466  EF37  F00A         	goto	u2020
  8103   00146A                     u2021:
  8104   00146A  EF3A  F00A         	goto	l198
  8105   00146E                     u2020:
  8106   00146E                     
  8107                           ;keypad.c: 54:  {;keypad.c: 54:  {;keypad.c: 55:   return 8;;keypad.c: 55:   return 8;
  8108   00146E  0E08               	movlw	8
  8109   001470  EF71  F00A         	goto	l187
  8110   001474                     l198:
  8111   001474  B881               	btfsc	129,4,c	;volatile
  8112   001476  EF3F  F00A         	goto	u2031
  8113   00147A  EF41  F00A         	goto	u2030
  8114   00147E                     u2031:
  8115   00147E  EF44  F00A         	goto	l195
  8116   001482                     u2030:
  8117   001482                     
  8118                           ;keypad.c: 58:  {;keypad.c: 58:  {;keypad.c: 59:   return 11;;keypad.c: 59:   return 11;
  8119   001482  0E0B               	movlw	11
  8120   001484  EF71  F00A         	goto	l187
  8121   001488                     l195:
  8122                           
  8123                           ;keypad.c: 62:  PORTBbits.RB5 = 1;;keypad.c: 62:  PORTBbits.RB5 = 1;
  8124   001488  8A81               	bsf	129,5,c	;volatile
  8125                           
  8126                           ;keypad.c: 63:  PORTBbits.RB6 = 1;;keypad.c: 63:  PORTBbits.RB6 = 1;
  8127   00148A  8C81               	bsf	129,6,c	;volatile
  8128                           
  8129                           ;keypad.c: 64:  PORTBbits.RB7 = 0;;keypad.c: 64:  PORTBbits.RB7 = 0;
  8130   00148C  9E81               	bcf	129,7,c	;volatile
  8131                           
  8132                           ;keypad.c: 66:  PORTBbits.RB7 = 0;;keypad.c: 66:  PORTBbits.RB7 = 0;
  8133   00148E  9E81               	bcf	129,7,c	;volatile
  8134                           
  8135                           ;keypad.c: 68:  if (PORTBbits.RB1 == 0);keypad.c: 68:  if (PORTBbits.RB1 == 0)
  8136   001490  B281               	btfsc	129,1,c	;volatile
  8137   001492  EF4D  F00A         	goto	u2041
  8138   001496  EF4F  F00A         	goto	u2040
  8139   00149A                     u2041:
  8140   00149A  EF52  F00A         	goto	l201
  8141   00149E                     u2040:
  8142   00149E                     
  8143                           ;keypad.c: 69:  {;keypad.c: 69:  {;keypad.c: 70:   return 3;;keypad.c: 70:   return 3;
  8144   00149E  0E03               	movlw	3
  8145   0014A0  EF71  F00A         	goto	l187
  8146   0014A4                     l201:
  8147   0014A4  B481               	btfsc	129,2,c	;volatile
  8148   0014A6  EF57  F00A         	goto	u2051
  8149   0014AA  EF59  F00A         	goto	u2050
  8150   0014AE                     u2051:
  8151   0014AE  EF5C  F00A         	goto	l203
  8152   0014B2                     u2050:
  8153   0014B2                     
  8154                           ;keypad.c: 73:  {;keypad.c: 73:  {;keypad.c: 74:   return 6;;keypad.c: 74:   return 6;
  8155   0014B2  0E06               	movlw	6
  8156   0014B4  EF71  F00A         	goto	l187
  8157   0014B8                     l203:
  8158   0014B8  B681               	btfsc	129,3,c	;volatile
  8159   0014BA  EF61  F00A         	goto	u2061
  8160   0014BE  EF63  F00A         	goto	u2060
  8161   0014C2                     u2061:
  8162   0014C2  EF66  F00A         	goto	l205
  8163   0014C6                     u2060:
  8164   0014C6                     
  8165                           ;keypad.c: 77:  {;keypad.c: 77:  {;keypad.c: 78:   return 9;;keypad.c: 78:   return 9;
  8166   0014C6  0E09               	movlw	9
  8167   0014C8  EF71  F00A         	goto	l187
  8168   0014CC                     l205:
  8169   0014CC  B881               	btfsc	129,4,c	;volatile
  8170   0014CE  EF6B  F00A         	goto	u2071
  8171   0014D2  EF6D  F00A         	goto	u2070
  8172   0014D6                     u2071:
  8173   0014D6  EF70  F00A         	goto	l204
  8174   0014DA                     u2070:
  8175   0014DA                     
  8176                           ;keypad.c: 81:  {;keypad.c: 81:  {;keypad.c: 82:   return 12;;keypad.c: 82:   return 12;
  8177   0014DA  0E0C               	movlw	12
  8178   0014DC  EF71  F00A         	goto	l187
  8179   0014E0                     l204:
  8180   0014E0                     
  8181                           ;keypad.c: 85:  return 0xFF;;keypad.c: 85:  return 0xFF;
  8182   0014E0  0EFF               	movlw	255
  8183   0014E2                     l187:
  8184   0014E2  0012               	return		;funcret
  8185   0014E4                     __end_of_scan_key:
  8186                           	callstack 0
  8187                           
  8188 ;; *************** function _clcd_putch *****************
  8189 ;; Defined at:
  8190 ;;		line 51 in file "clcd.c"
  8191 ;; Parameters:    Size  Location     Type
  8192 ;;  data            1    wreg     const unsigned char 
  8193 ;;  addr            1   14[COMRAM] unsigned char 
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;  data            1   15[COMRAM] const unsigned char 
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  1    wreg      void 
  8198 ;; Registers used:
  8199 ;;		wreg, status,2, cstack
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8205 ;;      Params:         1       0       0       0       0       0       0
  8206 ;;      Locals:         1       0       0       0       0       0       0
  8207 ;;      Temps:          0       0       0       0       0       0       0
  8208 ;;      Totals:         2       0       0       0       0       0       0
  8209 ;;Total ram usage:        2 bytes
  8210 ;; Hardware stack levels used: 1
  8211 ;; Hardware stack levels required when called: 1
  8212 ;; This function calls:
  8213 ;;		_clcd_write
  8214 ;; This function is called by:
  8215 ;;		_change_pass
  8216 ;;		_menu
  8217 ;;		_speed
  8218 ;;		_settime
  8219 ;;		_setpassword
  8220 ;;		_view_log
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           	psect	text43
  8225   000A64                     __ptext43:
  8226                           	callstack 0
  8227   000A64                     _clcd_putch:
  8228                           	callstack 28
  8229                           
  8230                           ;incstack = 0
  8231                           ;clcd_putch@data stored from wreg
  8232   000A64  6E10               	movwf	clcd_putch@data^0,c
  8233   000A66                     
  8234                           ;clcd.c: 51: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 51: v
      +                          oid clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 52: {;clcd.c: 52: {
      +                          ;clcd.c: 53:  clcd_write(addr, 0);;clcd.c: 53:  clcd_write(addr, 0);
  8235   000A66  0E00               	movlw	0
  8236   000A68  6E01               	movwf	clcd_write@control_bit^0,c
  8237   000A6A  500F               	movf	clcd_putch@addr^0,w,c
  8238   000A6C  ECEE  F005         	call	_clcd_write
  8239                           
  8240                           ;clcd.c: 54:  clcd_write(data, 1);;clcd.c: 54:  clcd_write(data, 1);
  8241   000A70  0E01               	movlw	1
  8242   000A72  6E01               	movwf	clcd_write@control_bit^0,c
  8243   000A74  5010               	movf	clcd_putch@data^0,w,c
  8244   000A76  ECEE  F005         	call	_clcd_write
  8245   000A7A  0012               	return		;funcret
  8246   000A7C                     __end_of_clcd_putch:
  8247                           	callstack 0
  8248                           
  8249 ;; *************** function _clcd_print *****************
  8250 ;; Defined at:
  8251 ;;		line 42 in file "clcd.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;  data            2    2[COMRAM] PTR const unsigned char 
  8254 ;;		 -> STR_37(8), STR_36(10), STR_35(9), STR_34(8), 
  8255 ;;		 -> STR_33(14), STR_32(15), STR_31(11), STR_30(15), 
  8256 ;;		 -> STR_29(17), STR_28(5), STR_27(5), STR_26(17), 
  8257 ;;		 -> STR_25(3), STR_24(3), STR_23(5), STR_22(3), 
  8258 ;;		 -> STR_21(3), STR_20(3), STR_19(3), STR_18(3), 
  8259 ;;		 -> STR_17(3), STR_16(3), STR_15(15), STR_11(16), 
  8260 ;;		 -> STR_10(9), STR_9(10), STR_8(13), STR_7(9), 
  8261 ;;		 -> STR_6(6), STR_5(17), STR_4(13), STR_3(16), 
  8262 ;;		 -> STR_2(17), STR_1(19), time(9), 
  8263 ;;  addr            1    4[COMRAM] unsigned char 
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;		None
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  1    wreg      void 
  8268 ;; Registers used:
  8269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8275 ;;      Params:         3       0       0       0       0       0       0
  8276 ;;      Locals:         0       0       0       0       0       0       0
  8277 ;;      Temps:          0       0       0       0       0       0       0
  8278 ;;      Totals:         3       0       0       0       0       0       0
  8279 ;;Total ram usage:        3 bytes
  8280 ;; Hardware stack levels used: 1
  8281 ;; Hardware stack levels required when called: 1
  8282 ;; This function calls:
  8283 ;;		_clcd_write
  8284 ;; This function is called by:
  8285 ;;		_change_pass
  8286 ;;		_menu
  8287 ;;		_clear_log
  8288 ;;		_display_time
  8289 ;;		_dashboard
  8290 ;;		_settime
  8291 ;;		_setpassword
  8292 ;;		_view_log
  8293 ;; This function uses a non-reentrant model
  8294 ;;
  8295                           
  8296                           	psect	text44
  8297   000D5A                     __ptext44:
  8298                           	callstack 0
  8299   000D5A                     _clcd_print:
  8300                           	callstack 28
  8301   000D5A                     
  8302                           ;clcd.c: 42: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 42: 
      +                          void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 43: {;clcd.c: 43:
      +                           {;clcd.c: 44:  clcd_write(addr, 0);;clcd.c: 44:  clcd_write(addr, 0);
  8303   000D5A  0E00               	movlw	0
  8304   000D5C  6E01               	movwf	clcd_write@control_bit^0,c
  8305   000D5E  5005               	movf	clcd_print@addr^0,w,c
  8306   000D60  ECEE  F005         	call	_clcd_write
  8307                           
  8308                           ;clcd.c: 45:  while (*data != '\0');clcd.c: 45:  while (*data != '\0')
  8309   000D64  EFCA  F006         	goto	l2900
  8310   000D68                     l2896:
  8311                           
  8312                           ;clcd.c: 46:  {;clcd.c: 46:  {;clcd.c: 47:   clcd_write(*data++, 1);;clcd.c: 47:   clcd_
      +                          write(*data++, 1);
  8313   000D68  0E01               	movlw	1
  8314   000D6A  6E01               	movwf	clcd_write@control_bit^0,c
  8315   000D6C  C003  FFF6         	movff	clcd_print@data,tblptrl
  8316   000D70  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  8317   000D74  6AF8               	clrf	tblptru,c
  8318   000D76  0E05               	movlw	(high __ramtop+-1)
  8319   000D78  64F7               	cpfsgt	tblptrh,c
  8320   000D7A  D003               	bra	u1937
  8321   000D7C  0008               	tblrd		*
  8322   000D7E  50F5               	movf	tablat,w,c
  8323   000D80  D005               	bra	u1930
  8324   000D82                     u1937:
  8325   000D82  CFF6 FFE9          	movff	tblptrl,fsr0l
  8326   000D86  CFF7 FFEA          	movff	tblptrh,fsr0h
  8327   000D8A  50EF               	movf	indf0,w,c
  8328   000D8C                     u1930:
  8329   000D8C  ECEE  F005         	call	_clcd_write
  8330   000D90  4A03               	infsnz	clcd_print@data^0,f,c
  8331   000D92  2A04               	incf	(clcd_print@data+1)^0,f,c
  8332   000D94                     l2900:
  8333                           
  8334                           ;clcd.c: 45:  while (*data != '\0');clcd.c: 45:  while (*data != '\0')
  8335   000D94  C003  FFF6         	movff	clcd_print@data,tblptrl
  8336   000D98  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  8337   000D9C  6AF8               	clrf	tblptru,c
  8338   000D9E  0E05               	movlw	(high __ramtop+-1)
  8339   000DA0  64F7               	cpfsgt	tblptrh,c
  8340   000DA2  D003               	bra	u1947
  8341   000DA4  0008               	tblrd		*
  8342   000DA6  50F5               	movf	tablat,w,c
  8343   000DA8  D005               	bra	u1940
  8344   000DAA                     u1947:
  8345   000DAA  CFF6 FFE9          	movff	tblptrl,fsr0l
  8346   000DAE  CFF7 FFEA          	movff	tblptrh,fsr0h
  8347   000DB2  50EF               	movf	indf0,w,c
  8348   000DB4                     u1940:
  8349   000DB4  0900               	iorlw	0
  8350   000DB6  A4D8               	btfss	status,2,c
  8351   000DB8  EFE0  F006         	goto	u1951
  8352   000DBC  EFE2  F006         	goto	u1950
  8353   000DC0                     u1951:
  8354   000DC0  EFB4  F006         	goto	l2896
  8355   000DC4                     u1950:
  8356   000DC4  0012               	return		;funcret
  8357   000DC6                     __end_of_clcd_print:
  8358                           	callstack 0
  8359                           
  8360 ;; *************** function _clcd_write *****************
  8361 ;; Defined at:
  8362 ;;		line 4 in file "clcd.c"
  8363 ;; Parameters:    Size  Location     Type
  8364 ;;  byte            1    wreg     unsigned char 
  8365 ;;  control_bit     1    0[COMRAM] unsigned char 
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;  byte            1    1[COMRAM] unsigned char 
  8368 ;; Return value:  Size  Location     Type
  8369 ;;                  1    wreg      void 
  8370 ;; Registers used:
  8371 ;;		wreg
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8377 ;;      Params:         1       0       0       0       0       0       0
  8378 ;;      Locals:         1       0       0       0       0       0       0
  8379 ;;      Temps:          0       0       0       0       0       0       0
  8380 ;;      Totals:         2       0       0       0       0       0       0
  8381 ;;Total ram usage:        2 bytes
  8382 ;; Hardware stack levels used: 1
  8383 ;; This function calls:
  8384 ;;		Nothing
  8385 ;; This function is called by:
  8386 ;;		_main
  8387 ;;		_change_pass
  8388 ;;		_menu
  8389 ;;		_init_clcd
  8390 ;;		_clcd_print
  8391 ;;		_clcd_putch
  8392 ;;		_settime
  8393 ;;		_setpassword
  8394 ;;		_view_log
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text45
  8399   000BDC                     __ptext45:
  8400                           	callstack 0
  8401   000BDC                     _clcd_write:
  8402                           	callstack 29
  8403                           
  8404                           ;incstack = 0
  8405                           ;clcd_write@byte stored from wreg
  8406   000BDC  6E02               	movwf	clcd_write@byte^0,c
  8407   000BDE                     
  8408                           ;clcd.c: 4: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 4: vo
      +                          id clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 5: {;clcd.c: 5: {;c
      +                          lcd.c: 6:  RC1 = control_bit;;clcd.c: 6:  RC1 = control_bit;
  8409   000BDE  B001               	btfsc	clcd_write@control_bit^0,0,c
  8410   000BE0  EFF4  F005         	goto	u1881
  8411   000BE4  EFF7  F005         	goto	u1880
  8412   000BE8                     u1881:
  8413   000BE8  8282               	bsf	3970,1,c	;volatile
  8414   000BEA  EFF8  F005         	goto	u1895
  8415   000BEE                     u1880:
  8416   000BEE  9282               	bcf	3970,1,c	;volatile
  8417   000BF0                     u1895:
  8418   000BF0                     
  8419                           ;clcd.c: 7:  PORTD = byte;;clcd.c: 7:  PORTD = byte;
  8420   000BF0  C002  FF83         	movff	clcd_write@byte,3971	;volatile
  8421   000BF4                     
  8422                           ;clcd.c: 10:  RC2 = 1;;clcd.c: 10:  RC2 = 1;
  8423   000BF4  8482               	bsf	3970,2,c	;volatile
  8424   000BF6                     
  8425                           ;clcd.c: 11:  RC2 = 0;;clcd.c: 11:  RC2 = 0;
  8426   000BF6  9482               	bcf	3970,2,c	;volatile
  8427   000BF8                     
  8428                           ;clcd.c: 13:  TRISD7 = 0xFF;;clcd.c: 13:  TRISD7 = 0xFF;
  8429   000BF8  8E95               	bsf	3989,7,c	;volatile
  8430   000BFA                     
  8431                           ;clcd.c: 14:  RC0 = 1;;clcd.c: 14:  RC0 = 1;
  8432   000BFA  8082               	bsf	3970,0,c	;volatile
  8433   000BFC                     
  8434                           ;clcd.c: 15:  RC1 = 0;;clcd.c: 15:  RC1 = 0;
  8435   000BFC  9282               	bcf	3970,1,c	;volatile
  8436   000BFE                     l2842:
  8437                           
  8438                           ;clcd.c: 18:  {;clcd.c: 18:  {;clcd.c: 19:   RC2 = 1;;clcd.c: 19:   RC2 = 1;
  8439   000BFE  8482               	bsf	3970,2,c	;volatile
  8440   000C00                     
  8441                           ;clcd.c: 20:   RC2 = 0;;clcd.c: 20:   RC2 = 0;
  8442   000C00  9482               	bcf	3970,2,c	;volatile
  8443   000C02                     
  8444                           ;clcd.c: 21:  } while (RD7);;clcd.c: 21:  } while (RD7);
  8445   000C02  BE83               	btfsc	3971,7,c	;volatile
  8446   000C04  EF06  F006         	goto	u1901
  8447   000C08  EF08  F006         	goto	u1900
  8448   000C0C                     u1901:
  8449   000C0C  EFFF  F005         	goto	l2842
  8450   000C10                     u1900:
  8451   000C10                     
  8452                           ;clcd.c: 23:  RC0 = 0;;clcd.c: 23:  RC0 = 0;
  8453   000C10  9082               	bcf	3970,0,c	;volatile
  8454                           
  8455                           ;clcd.c: 24:  TRISD7 = 0x00;;clcd.c: 24:  TRISD7 = 0x00;
  8456   000C12  9E95               	bcf	3989,7,c	;volatile
  8457   000C14  0012               	return		;funcret
  8458   000C16                     __end_of_clcd_write:
  8459                           	callstack 0
  8460                           
  8461                           	psect	rparam
  8462   000000                     
  8463                           	psect	idloc
  8464                           
  8465                           ;Config register IDLOC0 @ 0x200000
  8466                           ;	unspecified, using default values
  8467   200000                     	org	2097152
  8468   200000  FF                 	db	255
  8469                           
  8470                           ;Config register IDLOC1 @ 0x200001
  8471                           ;	unspecified, using default values
  8472   200001                     	org	2097153
  8473   200001  FF                 	db	255
  8474                           
  8475                           ;Config register IDLOC2 @ 0x200002
  8476                           ;	unspecified, using default values
  8477   200002                     	org	2097154
  8478   200002  FF                 	db	255
  8479                           
  8480                           ;Config register IDLOC3 @ 0x200003
  8481                           ;	unspecified, using default values
  8482   200003                     	org	2097155
  8483   200003  FF                 	db	255
  8484                           
  8485                           ;Config register IDLOC4 @ 0x200004
  8486                           ;	unspecified, using default values
  8487   200004                     	org	2097156
  8488   200004  FF                 	db	255
  8489                           
  8490                           ;Config register IDLOC5 @ 0x200005
  8491                           ;	unspecified, using default values
  8492   200005                     	org	2097157
  8493   200005  FF                 	db	255
  8494                           
  8495                           ;Config register IDLOC6 @ 0x200006
  8496                           ;	unspecified, using default values
  8497   200006                     	org	2097158
  8498   200006  FF                 	db	255
  8499                           
  8500                           ;Config register IDLOC7 @ 0x200007
  8501                           ;	unspecified, using default values
  8502   200007                     	org	2097159
  8503   200007  FF                 	db	255
  8504                           
  8505                           	psect	config
  8506                           
  8507                           ; Padding undefined space
  8508   300000                     	org	3145728
  8509   300000  FF                 	db	255
  8510                           
  8511                           ;Config register CONFIG1H @ 0x300001
  8512                           ;	unspecified, using default values
  8513                           ;	Oscillator Selection bits
  8514                           ;	OSC = 0x7, unprogrammed default
  8515                           ;	Fail-Safe Clock Monitor Enable bit
  8516                           ;	FCMEN = 0x0, unprogrammed default
  8517                           ;	Internal/External Oscillator Switchover bit
  8518                           ;	IESO = 0x0, unprogrammed default
  8519   300001                     	org	3145729
  8520   300001  07                 	db	7
  8521                           
  8522                           ;Config register CONFIG2L @ 0x300002
  8523                           ;	unspecified, using default values
  8524                           ;	Power-up Timer Enable bit
  8525                           ;	PWRT = 0x1, unprogrammed default
  8526                           ;	Brown-out Reset Enable bits
  8527                           ;	BOREN = 0x3, unprogrammed default
  8528                           ;	Brown-out Reset Voltage bits
  8529                           ;	BORV = 0x3, unprogrammed default
  8530   300002                     	org	3145730
  8531   300002  1F                 	db	31
  8532                           
  8533                           ;Config register CONFIG2H @ 0x300003
  8534                           ;	unspecified, using default values
  8535                           ;	Watchdog Timer Enable bit
  8536                           ;	WDT = 0x1, unprogrammed default
  8537                           ;	Watchdog Timer Postscale Select bits
  8538                           ;	WDTPS = 0xF, unprogrammed default
  8539   300003                     	org	3145731
  8540   300003  1F                 	db	31
  8541                           
  8542                           ; Padding undefined space
  8543   300004                     	org	3145732
  8544   300004  FF                 	db	255
  8545                           
  8546                           ;Config register CONFIG3H @ 0x300005
  8547                           ;	unspecified, using default values
  8548                           ;	PORTB A/D Enable bit
  8549                           ;	PBADEN = 0x1, unprogrammed default
  8550                           ;	Low-Power Timer 1 Oscillator Enable bit
  8551                           ;	LPT1OSC = 0x0, unprogrammed default
  8552                           ;	MCLR Pin Enable bit
  8553                           ;	MCLRE = 0x1, unprogrammed default
  8554   300005                     	org	3145733
  8555   300005  82                 	db	130
  8556                           
  8557                           ;Config register CONFIG4L @ 0x300006
  8558                           ;	unspecified, using default values
  8559                           ;	Stack Full/Underflow Reset Enable bit
  8560                           ;	STVREN = 0x1, unprogrammed default
  8561                           ;	Single-Supply ICSP Enable bit
  8562                           ;	LVP = 0x1, unprogrammed default
  8563                           ;	Boot Block Size Select bit
  8564                           ;	BBSIZ = 0x0, unprogrammed default
  8565                           ;	Extended Instruction Set Enable bit
  8566                           ;	XINST = 0x0, unprogrammed default
  8567                           ;	Background Debugger Enable bit
  8568                           ;	DEBUG = 0x1, unprogrammed default
  8569   300006                     	org	3145734
  8570   300006  85                 	db	133
  8571                           
  8572                           ; Padding undefined space
  8573   300007                     	org	3145735
  8574   300007  FF                 	db	255
  8575                           
  8576                           ;Config register CONFIG5L @ 0x300008
  8577                           ;	unspecified, using default values
  8578                           ;	Code Protection bit
  8579                           ;	CP0 = 0x1, unprogrammed default
  8580                           ;	Code Protection bit
  8581                           ;	CP1 = 0x1, unprogrammed default
  8582                           ;	Code Protection bit
  8583                           ;	CP2 = 0x1, unprogrammed default
  8584                           ;	Code Protection bit
  8585                           ;	CP3 = 0x1, unprogrammed default
  8586   300008                     	org	3145736
  8587   300008  0F                 	db	15
  8588                           
  8589                           ;Config register CONFIG5H @ 0x300009
  8590                           ;	unspecified, using default values
  8591                           ;	Boot Block Code Protection bit
  8592                           ;	CPB = 0x1, unprogrammed default
  8593                           ;	Data EEPROM Code Protection bit
  8594                           ;	CPD = 0x1, unprogrammed default
  8595   300009                     	org	3145737
  8596   300009  C0                 	db	192
  8597                           
  8598                           ;Config register CONFIG6L @ 0x30000A
  8599                           ;	unspecified, using default values
  8600                           ;	Write Protection bit
  8601                           ;	WRT0 = 0x1, unprogrammed default
  8602                           ;	Write Protection bit
  8603                           ;	WRT1 = 0x1, unprogrammed default
  8604                           ;	Write Protection bit
  8605                           ;	WRT2 = 0x1, unprogrammed default
  8606                           ;	Write Protection bit
  8607                           ;	WRT3 = 0x1, unprogrammed default
  8608   30000A                     	org	3145738
  8609   30000A  0F                 	db	15
  8610                           
  8611                           ;Config register CONFIG6H @ 0x30000B
  8612                           ;	unspecified, using default values
  8613                           ;	Configuration Register Write Protection bit
  8614                           ;	WRTC = 0x1, unprogrammed default
  8615                           ;	Boot Block Write Protection bit
  8616                           ;	WRTB = 0x1, unprogrammed default
  8617                           ;	Data EEPROM Write Protection bit
  8618                           ;	WRTD = 0x1, unprogrammed default
  8619   30000B                     	org	3145739
  8620   30000B  E0                 	db	224
  8621                           
  8622                           ;Config register CONFIG7L @ 0x30000C
  8623                           ;	unspecified, using default values
  8624                           ;	Table Read Protection bit
  8625                           ;	EBTR0 = 0x1, unprogrammed default
  8626                           ;	Table Read Protection bit
  8627                           ;	EBTR1 = 0x1, unprogrammed default
  8628                           ;	Table Read Protection bit
  8629                           ;	EBTR2 = 0x1, unprogrammed default
  8630                           ;	Table Read Protection bit
  8631                           ;	EBTR3 = 0x1, unprogrammed default
  8632   30000C                     	org	3145740
  8633   30000C  0F                 	db	15
  8634                           
  8635                           ;Config register CONFIG7H @ 0x30000D
  8636                           ;	unspecified, using default values
  8637                           ;	Boot Block Table Read Protection bit
  8638                           ;	EBTRB = 0x1, unprogrammed default
  8639   30000D                     	org	3145741
  8640   30000D  40                 	db	64
  8641                           tosu	equ	0xFFF
  8642                           tosh	equ	0xFFE
  8643                           tosl	equ	0xFFD
  8644                           stkptr	equ	0xFFC
  8645                           pclatu	equ	0xFFB
  8646                           pclath	equ	0xFFA
  8647                           pcl	equ	0xFF9
  8648                           tblptru	equ	0xFF8
  8649                           tblptrh	equ	0xFF7
  8650                           tblptrl	equ	0xFF6
  8651                           tablat	equ	0xFF5
  8652                           prodh	equ	0xFF4
  8653                           prodl	equ	0xFF3
  8654                           indf0	equ	0xFEF
  8655                           postinc0	equ	0xFEE
  8656                           postdec0	equ	0xFED
  8657                           preinc0	equ	0xFEC
  8658                           plusw0	equ	0xFEB
  8659                           fsr0h	equ	0xFEA
  8660                           fsr0l	equ	0xFE9
  8661                           wreg	equ	0xFE8
  8662                           indf1	equ	0xFE7
  8663                           postinc1	equ	0xFE6
  8664                           postdec1	equ	0xFE5
  8665                           preinc1	equ	0xFE4
  8666                           plusw1	equ	0xFE3
  8667                           fsr1h	equ	0xFE2
  8668                           fsr1l	equ	0xFE1
  8669                           bsr	equ	0xFE0
  8670                           indf2	equ	0xFDF
  8671                           postinc2	equ	0xFDE
  8672                           postdec2	equ	0xFDD
  8673                           preinc2	equ	0xFDC
  8674                           plusw2	equ	0xFDB
  8675                           fsr2h	equ	0xFDA
  8676                           fsr2l	equ	0xFD9
  8677                           status	equ	0xFD8

Data Sizes:
    Strings     342
    Constant    0
    Data        34
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     60      94
    BANK0           160      0      57
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcmp@r	PTR const unsigned char  size(2) Largest target is 5
		 -> change_pass@confirm_password(COMRAM[5]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 5
		 -> change_pass@new_password(COMRAM[5]), 

    gear	PTR unsigned char [7] size(2) Largest target is 3
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[23]), 

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_37(CODE[8]), STR_36(CODE[10]), STR_35(CODE[9]), STR_34(CODE[8]), 
		 -> STR_33(CODE[14]), STR_32(CODE[15]), STR_31(CODE[11]), STR_30(CODE[15]), 
		 -> STR_29(CODE[17]), STR_28(CODE[5]), STR_27(CODE[5]), STR_26(CODE[17]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[5]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[15]), STR_11(CODE[16]), 
		 -> STR_10(CODE[9]), STR_9(CODE[10]), STR_8(CODE[13]), STR_7(CODE[9]), 
		 -> STR_6(CODE[6]), STR_5(CODE[17]), STR_4(CODE[13]), STR_3(CODE[16]), 
		 -> STR_2(CODE[17]), STR_1(CODE[19]), time(COMRAM[9]), 

    vmenu	PTR unsigned char [5] size(2) Largest target is 16
		 -> STR_11(CODE[16]), STR_10(CODE[9]), STR_9(CODE[10]), STR_8(CODE[13]), 
		 -> STR_7(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_setpassword
    _view_log->_clcd_putch
    _settime->_store_event
    _save_time_to_RTC->_write_ds1307
    _setpassword->_clcd_putch
    ___awmod->___awdiv
    _menu->_clcd_putch
    _inti_config->_init_ds1307
    _init_ds1307->_read_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_clcd_write
    _download_log->_puts
    _download_log->_read_ext_eeprom
    _read_ext_eeprom->_i2c_write
    _puts->_putch
    _dashboard->_store_event
    _store_event->___almod
    _speed->___almod
    ___almod->___aldiv
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _display_time->_clcd_print
    _clear_log->_clcd_print
    _change_pass->_clcd_putch
    _write_ext_eeprom->_i2c_write
    _clcd_putch->___aldiv
    _clcd_putch->___awmod
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  131396
                                             58 COMRAM     2     2      0
                        _change_pass
                         _clcd_write
                          _clear_log
                          _dashboard
                       _download_log
                        _inti_config
                               _menu
                      _read_switches
                        _setpassword
                            _settime
                           _view_log
                   _write_ext_eeprom
 ---------------------------------------------------------------------------------
 (1) _view_log                                            20    20      0   17018
                                             16 COMRAM    18    18      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                    _read_ext_eeprom
                      _read_switches
 ---------------------------------------------------------------------------------
 (1) _settime                                             11    11      0   21510
                                             27 COMRAM    11    11      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                      _read_switches
                   _save_time_to_RTC
                        _store_event
 ---------------------------------------------------------------------------------
 (2) _save_time_to_RTC                                     1     1      0     653
                                              3 COMRAM     1     1      0
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (1) _setpassword                                         42    42      0   19660
                                             16 COMRAM    42    42      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                    _read_ext_eeprom
                      _read_switches
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1208
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _menu                                                10    10      0   17275
                                             16 COMRAM    10    10      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                      _read_switches
 ---------------------------------------------------------------------------------
 (1) _inti_config                                          0     0      0    2959
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                          _init_uart
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     559
                                              3 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     446
                                              1 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0    2400
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _download_log                                         5     5      0     542
                                              3 COMRAM     4     4      0
                              _putch
                               _puts
                    _read_ext_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_ext_eeprom                                      2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     295
                                              1 COMRAM     2     0      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _dashboard                                            1     1      0   25083
                                             27 COMRAM     1     1      0
                         _clcd_print
                       _display_time
                           _get_time
                      _read_switches
                              _speed
                        _store_event
 ---------------------------------------------------------------------------------
 (2) _store_event                                          4     4      0    1763
                                             24 COMRAM     3     3      0
                            ___aldiv
                            ___almod
                   _write_ext_eeprom
 ---------------------------------------------------------------------------------
 (2) _speed                                                2     2      0   10172
                                             24 COMRAM     2     2      0
                            ___aldiv
                            ___almod
                            ___awdiv
                         _clcd_putch
                           _read_adc
 ---------------------------------------------------------------------------------
 (3) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     752
                                             14 COMRAM    10     2      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (4) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_time                                         0     0      0    6419
                         _clcd_print
 ---------------------------------------------------------------------------------
 (1) _clear_log                                            5     5      0    6536
                                              5 COMRAM     5     5      0
                         _clcd_print
                      _read_switches
 ---------------------------------------------------------------------------------
 (1) _change_pass                                         33    33      0   17962
                                             16 COMRAM    33    33      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                      _read_switches
                             _strcmp
                   _write_ext_eeprom
 ---------------------------------------------------------------------------------
 (1) _write_ext_eeprom                                     4     3      1     317
                                              1 COMRAM     4     3      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               6     2      4     264
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _read_switches                                        1     1      0      44
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (3) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    7536
                                             14 COMRAM     2     1      1
                            ___aldiv (ARG)
                            ___awdiv (ARG)
                            ___awmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    6419
                                              2 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_write                                           2     1      1    2400
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _change_pass
     _clcd_print
       _clcd_write
     _clcd_putch
       ___aldiv (ARG)
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       _clcd_write (ARG)
     _clcd_write
     _read_switches
       _scan_key
     _strcmp
     _write_ext_eeprom
       _i2c_start
         _i2c_idle
       _i2c_stop
         _i2c_idle
       _i2c_write
         _i2c_idle
   _clcd_write
   _clear_log
     _clcd_print
     _read_switches
   _dashboard
     _clcd_print
     _display_time
       _clcd_print
     _get_time
       _read_ds1307
         _i2c_read
           _i2c_no_ack
           _i2c_rx_mode
             _i2c_idle
         _i2c_rep_start
           _i2c_idle
         _i2c_start
         _i2c_stop
         _i2c_write
     _read_switches
     _speed
       ___aldiv
       ___almod
         ___aldiv (ARG)
       ___awdiv
       _clcd_putch
       _read_adc
     _store_event
       ___aldiv
       ___almod
       _write_ext_eeprom
   _download_log
     _putch
     _puts
       _putch
     _read_ext_eeprom
       _i2c_read
       _i2c_rep_start
       _i2c_start
       _i2c_stop
       _i2c_write
   _inti_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
     _init_matrix_keypad
     _init_uart
   _menu
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_switches
   _read_switches
   _setpassword
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_ext_eeprom
     _read_switches
   _settime
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_switches
     _save_time_to_RTC
       _write_ds1307
     _store_event
   _view_log
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_ext_eeprom
     _read_switches
   _write_ext_eeprom

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      25        0.0%
BITBIGSFRlll       281      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      39       5       35.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3C      5E       1       98.9%
BITBIGSFRhhhlhh     27      0       0      17        0.0%
BITBIGSFRlhhhhh     10      0       0      18        0.0%
BITBIGSFRllh         F      0       0      22        0.0%
BITBIGSFRhhhh        E      0       0      16        0.0%
BITBIGSFRlhhhhl      9      0       0      19        0.0%
BITBIGSFRlhhl        7      0       0      21        0.0%
BITBIGSFRlhhhl       2      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      97      24        0.0%
DATA                 0      0      97       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jun 13 19:35:36 2024

                           _i 0049                clcd_print@addr 0005                clcd_print@data 0003  
                          l55 0A94                            l73 19E8                            _GO 7E11  
                          _h1 004E                            _m1 004D                  ___awdiv@sign 0006  
                          _s1 0098                  setpassword@i 0039                  setpassword@j 0037  
                setpassword@k 001E            _init_matrix_keypad 0A14             write_ext_eeprom@i 0003  
                         l120 0C9A                           l201 14A4                           l114 0AF0  
                         l203 14B8                           l204 14E0                           l205 14CC  
                         l117 0C6E                           l311 0BDA                           l320 0A7A  
                         l216 0EA6                           l400 09F0                           l402 09FE  
                         l410 09BE                           l170 2498                           l307 0C10  
                         l403 0A00                           l308 0C14                           l340 0AB2  
                         l317 0DC4                           l413 09C6                           l422 09CE  
                         l270 2014                           l191 141E                           l343 0B1A  
                         l183 0A24                           l512 0FC6                           l416 09D6  
                         l425 09B6                           l337 0B6E                           l194 144C  
                         l186 13F6                           l362 0B44                           l195 1488  
                         l187 14E2                           l419 09E2                           l196 1460  
                         l188 1432                           l428 09EE                           l189 140A  
                         l453 0A36                           l198 1474                           l702 2952  
                         l359 0C54                           l287 2038                           l560 1128  
                         l456 0A3A                           l465 0BA4                           l650 2EA6  
                         l730 1AC6                           l563 0A12                           l571 1720  
                         l459 0A4C                           l556 171E                           l493 13DA  
                         l397 0A62                           l629 2C64                           l583 1882  
                         l568 0F2C                           l841 12D8                           l746 0CF6  
                         l739 1BFA                           l828 15EE                           l685 294E  
                         _CKE 7E3E                           l980 11EC                           l993 1076  
                         _RC0 7C10                           _RC1 7C11                           _RC2 7C12  
                         _RD7 7C1F                           _PEN 7E2A                           _SEN 7E28  
                         _SMP 7E3F                 ?_display_time 0001                           _arr 0089  
                         _lap 005D                           _key 004F                clcd_putch@addr 000F  
              clcd_putch@data 0010                  ___awmod@sign 000E                           wreg 0FE8  
         ?_init_matrix_keypad 0001                          l3000 0A3A                          l3010 1506  
                        l3002 0A48                          l3020 153C                          l3012 150A  
                        l3004 14E4                          l3100 116A                          l3030 157E  
                        l3022 1552                          l3014 1518                          l3006 14E8  
                        l3110 11A0                          l3102 117C                          l3032 159C  
                        l3024 155A                          l3040 15BE                          l3016 1528  
                        l3008 14F6                          l3112 11B6                          l3104 1184  
                        l3120 11CC                          l4000 2E26                          l3202 0EA4  
                        l3210 0DD2                          l3042 15CE                          l3034 15AC  
                        l3026 1566                          l3018 152C                          l3050 11F2  
                        l3122 11DC                          l3114 11BE                          l3106 118C  
                        l3130 0AE6                          l4010 2E7E                          l4002 2E34  
                        l1428 0E30                          l3212 0DF4                          l4100 2312  
                        l4020 2054                          l3044 15DE                          l3036 15AE  
                        l3028 1574                          l3060 1232                          l3052 1200  
                        l3124 11E4                          l3116 11C0                          l3108 119A  
                        l3220 0B22                          l3132 0AEE                          l3140 0BB2  
                        l3300 0CBA                          l4012 2E92                          l4004 2E4E  
                        l3214 0E0C                          l3206 0DC6                          l4102 232E  
                        l4030 2082                          l4022 2054                          l3038 15B8  
                        l3070 1288                          l3062 1248                          l3054 1210  
                        l3118 11C6                          l3222 0B28                          l3142 0BBC  
                        l3134 0BA6                          l3150 0A1C                          l3310 0CE4  
                        l3302 0CBE                          l4006 2E6A                          l4014 2E9E  
                        l3208 0DCA                          l4120 23A8                          l4112 236A  
                        l4104 233C                          l4040 211A                          l4032 208A  
                        l4024 205C                          l4016 203A                          l3080 12C8  
                        l3072 1298                          l3064 1250                          l3056 1214  
                        l3048 11EE                          l3240 15F0                          l3400 1802  
                        l3232 0B70                          l3224 0B2E                          l3128 0AD2  
                        l3144 0BC6                          l3136 0BAA                          l3160 0A5C  
                        l3152 0A1E                          l3320 0FE2                          l3312 0CEC  
                        l3304 0CC6                          l4008 2E7A                          l4200 19DE  
                        l4130 23E2                          l4122 23A8                          l4114 2380  
                        l4106 2362                          l4050 2168                          l4042 212A  
                        l4034 20C6                          l4026 2066                          l4018 2044  
                        l3074 12A2                          l3066 125C                          l3058 1222  
                        l3090 1144                          l3242 1608                          l3410 184A  
                        l3402 180A                          l3234 0B74                          l3226 0B32  
                        l3218 0B1E                          l3146 0BD0                          l3138 0BB0  
                        l3170 0B5A                          l3162 0A5E                          l3154 0A4E  
                        l3330 1016                          l3322 0FE6                          l3314 0FC8  
                        l3306 0CD8                          l3180 0E44                          l4140 243A  
                        l4132 240E                          l4124 23B2                          l4116 2384  
                        l4052 2170                          l4044 213A                          l4036 20D6  
                        l4060 21A2                          l4028 2076                          l3068 126A  
                        l3076 12A8                          l3092 1148                          l3084 112A  
                        l3260 1706                          l3244 1658                          l3412 186C  
                        l3404 181E                          l3236 0B84                          l3228 0B3E  
                        l3164 0A60                          l3156 0A52                          l3148 0A14  
                        l3172 0A26                          l3340 1050                          l3332 101E  
                        l3324 0FF4                          l3316 0FCC                          l3500 2752  
                        l3420 24AC                          l3308 0CDC                          l3182 0E4A  
                        l4142 244A                          l4134 2412                          l4126 23C2  
                        l4118 23A0                          l4070 21F2                          l4062 21BE  
                        l4054 2182                          l4046 214C                          l4038 20F8  
                        l3078 12B8                          l3094 1156                          l3086 112E  
                        l3270 10AC                          l3262 1708                          l3254 16D8  
                        l3246 16A8                          l3414 187E                          l3406 1830  
                        l3238 0B88                          l3166 0B46                          l3158 0A5A  
                        l3174 0A30                          l3350 0A7C                          l3334 102C  
                        l3342 1056                          l3326 0FFC                          l3318 0FDA  
                        l3510 27CE                          l3502 2762                          l3430 250C  
                        l3422 24B4                          l4150 1888                          l3184 0E5A  
                        l3192 0E74                          l4144 245A                          l4128 23D2  
                        l4136 2420                          l4080 228A                          l4072 21FA  
                        l4064 21CC                          l4056 218E                          l4048 2158  
                        l3272 0A02                          l3280 0EEA                          l3096 115E  
                        l3088 113C                          l3264 171A                          l3256 16F4  
                        l3248 16D4                          l3408 1842                          l3360 1720  
                        l3168 0B4E                          l3176 0A34                          l3352 0A80  
                        l3600 1D72                          l3344 1066                          l3336 1042  
                        l3328 100E                          l3512 27D6                          l3504 2782  
                        l3520 2826                          l3440 257E                          l3432 2510  
                        l3424 24C4                          l3416 249A                          l4160 18AA  
                        l3194 0E84                          l3186 0E6A                          l3178 0E34  
                        l4138 242A                          l4146 2486                          l4090 22D8  
                        l4082 229A                          l4074 2236                          l4066 21D6  
                        l3290 0F28                          l3282 0EFC                          l3274 0EA8  
                        l3098 1162                          l3266 1078                          l3258 16F6  
                        l3370 1760                          l3362 1728                          l3354 0A84  
                        l3610 1DC6                          l3602 1D7C                          l3346 106E  
                        l3338 104A                          l3530 2880                          l3522 283A  
                        l3514 27DC                          l3506 2792                          l3450 25F2  
                        l3442 258E                          l3434 251E                          l3426 24D4  
                        l3418 24A4                          l4170 18F2                          l4162 18C6  
                        l2900 0D94                          l3196 0E8C                          l2820 09F0  
                        l4092 22E0                          l4084 22AA                          l4076 2246  
                        l4068 21E6                          l3284 0F00                          l3276 0EC6  
                        l3268 108A                          l3380 1796                          l3372 1764  
                        l3364 1738                          l3356 0A8C                          l3620 1E40  
                        l3612 1DDE                          l3604 1D80                          l3540 28FA  
                        l3532 28B4                          l3524 2844                          l3516 27EC  
                        l3508 27A2                          l3460 263A                          l3452 2604  
                        l3444 25B0                          l3436 2526                          l3428 24E4  
                        l3292 0C9C                          l3700 1A60                          l4180 194E  
                        l4172 1902                          l4164 18CE                          l4156 1890  
                        l4148 1884                          l2830 0BF0                          l2902 0A66  
                        l3198 0E9C                          l4094 22F2                          l4086 22BC  
                        l4078 2268                          l2822 09C8                          l3286 0F0A  
                        l3278 0ED4                          l3390 17CC                          l3374 1776  
                        l3382 179A                          l3366 1748                          l3358 0A90  
                        l3630 1EB6                          l3614 1DFA                          l3622 1E58  
                        l3606 1D9C                          l3550 1C1C                          l3534 28D4  
                        l3526 2850                          l3542 2926                          l3518 2818  
                        l3462 2646                          l3454 2610                          l3446 25D2  
                        l3438 2542                          l3294 0CA0                          l3710 1AA6  
                        l3702 1A68                          l4190 1994                          l4182 1960  
                        l4174 190C                          l4166 18DE                          l4158 18A6  
                        l2840 0BFC                          l2832 0BF4                          l2912 1404  
                        l2904 13DC                          l4096 22FE                          l4088 22C8  
                        l2824 09CA                          l3288 0F12                          l3392 17E2  
                        l3384 17AC                          l3376 177A                          l3368 1758  
                        l3800 1378                          l3640 1EF0                          l3632 1EC0  
                        l3616 1E16                          l3624 1E60                          l3608 1DAE  
                        l3560 1C46                          l3552 1C26                          l3544 2938  
                        l3536 28E4                          l3528 2860                          l3480 269E  
                        l3456 2620                          l3448 25E2                          l3296 0CA8  
                        l3704 1A84                          l3712 1AAE                          l4192 19A6  
                        l4184 1970                          l4176 191E                          l4168 18E8  
                        l2842 0BFE                          l2834 0BF6                          l2906 13F0  
                        l2850 09BA                          l2826 09B2                          l3386 17B0  
                        l3394 17E8                          l3378 1780                          l3810 13B0  
                        l3802 137E                          l3650 1F40                          l3642 1F02  
                        l3634 1EC4                          l3626 1E82                          l3618 1E28  
                        l3570 1CA2                          l3562 1C62                          l3554 1C2E  
                        l3546 2940                          l3538 28EA                          l3490 26F8  
                        l3482 26BA                          l3474 2670                          l3466 265A  
                        l3458 2628                          l3298 0CB0                          l3730 1B2C  
                        l3714 1ABE                          l3706 1A96                          l4194 19B0  
                        l4186 197A                          l4178 1944                          l2844 0C00  
                        l2836 0BF8                          l2828 0BDE                          l2940 146E  
                        l2924 142C                          l2852 09DA                          l3820 0F5A  
                        l2860 09D0                          l3396 17F8                          l3388 17B6  
                        l3812 13B4                          l3804 1386                          l3660 1F92  
                        l3652 1F52                          l3644 1F14                          l3636 1ED6  
                        l3628 1EA4                          l3580 1CDE                          l3572 1CAA  
                        l3564 1C6C                          l3556 1C3E                          l3548 1BFC  
                        l3492 2724                          l3484 26CE                          l3468 2668  
                        l3900 2B44                          l3740 1B60                          l3732 1B38  
                        l3724 1AF2                          l3716 1AD6                          l3708 1A9E  
                        l4196 19C2                          l4188 198A                          l2846 0C02  
                        l2838 0BFA                          l2950 149E                          l2934 145A  
                        l2918 1418                          l2854 09DE                          l2870 0C18  
                        l3822 0F62                          l3830 0F94                          l2862 09D2  
                        l3398 17FC                          l3814 13D0                          l3806 138E  
                        l3670 1FE6                          l3662 1FA6                          l3654 1F64  
                        l3646 1F26                          l3638 1EE8                          l3590 1D26  
                        l3582 1CEA                          l3574 1CB2                          l3558 1C42  
                        l3566 1C74                          l3486 26D8                          l3478 269A  
                        l3910 2B98                          l3902 2B58                          l3750 1B92  
                        l3742 1B6A                          l3734 1B42                          l3726 1B0C  
                        l3718 1AEA                          l4198 19CC                          l2928 1446  
                        l2848 09B8                          l2856 09C0                          l2880 0C32  
                        l2872 0C1C                          l3832 0FB0                          l3824 0F74  
                        l3816 0F2E                          l2864 09E4                          l3808 13A4  
                        l3680 2034                          l3672 1FFA                          l3664 1FB8  
                        l3656 1F78                          l3648 1F38                          l3592 1D38  
                        l3584 1D04                          l3568 1C90                          l3576 1CBA  
                        l3488 26E8                          l3496 272C                          l3912 2BA2  
                        l3904 2B70                          l3920 2BCA                          l3840 2964  
                        l3752 1B9C                          l3744 1B74                          l3736 1B4C  
                        l3728 1B10                          l3760 1BC4                          l2962 14C6  
                        l2946 1482                          l2858 09C2                          l2882 0C3A  
                        l2874 0C22                          l3834 0FC2                          l3826 0F7C  
                        l3818 0F4A                          l2866 09EC                          l2890 0C92  
                        l3770 12DA                          l3674 200C                          l3666 1FCC  
                        l3658 1F8A                          l3594 1D44                          l3586 1D0A  
                        l3578 1CCC                          l3498 2748                          l3930 2C08  
                        l3922 2BCE                          l3914 2BAC                          l3906 2B86  
                        l3850 29D8                          l3842 2984                          l3762 1BD6  
                        l3754 1BA6                          l3746 1B7E                          l3738 1B56  
                        l3690 1A22                          l3682 19F0                          l2972 14E0  
                        l2956 14B2                          l2876 0C28                          l3828 0F84  
                        l2980 0AFE                          l2884 0C58                          l3772 12F2  
                        l3668 1FDE                          l3676 2018                          l3596 1D52  
                        l3588 1D14                          l3940 2C50                          l3932 2C1C  
                        l3924 2BD6                          l3916 2BB6                          l3908 2B8E  
                        l3860 2A36                          l3852 29E8                          l3844 29A4  
                        l3764 1BDA                          l3756 1BB0                          l3748 1B88  
                        l3692 1A32                          l3684 1A00                          l2894 0D5A  
                        l2878 0C2E                          l2982 0B04                          l2886 0C6C  
                        l3790 133C                          l2990 0A98                          l3678 202A  
                        l3598 1D6E                          l3950 2C9E                          l3942 2C54  
                        l3934 2C2C                          l3926 2BE8                          l3918 2BC0  
                        l3870 2A72                          l3862 2A4C                          l3854 29F8  
                        l3846 29C4                          l3838 2954                          l3766 1BEC  
                        l3758 1BBA                          l3694 1A36                          l3686 1A0A  
                        l2896 0D68                          l2968 14DA                          l2984 0B08  
                        l2976 0AF4                          l2888 0C7C                          l3792 134C  
                        l3784 1302                          l2992 0A9C                          l3960 2CD8  
                        l3952 2CA6                          l3944 2C56                          l3936 2C46  
                        l3928 2BEC                          l3880 2ABA                          l3872 2A7C  
                        l3864 2A54                          l3856 2A0A                          l3848 29CE  
                        l3768 1BF6                          l3696 1A3A                          l3688 1A1A  
                        l2898 0D90                          l2986 0B14                          l2978 0AF8  
                        l3794 1352                          l3786 131C                          l3778 12FA  
                        l2994 0AA2                          l3970 2D3A                          l3962 2CF2  
                        l3954 2CB8                          l3938 2C4A                          l3946 2C68  
                        l3890 2B04                          l3882 2AD2                          l3874 2A86  
                        l3866 2A5E                          l3858 2A1E                          l3698 1A56  
                        l3796 135A                          l3788 1320                          l2996 0AA8  
                        l3980 2D92                          l3972 2D42                          l3956 2CBC  
                        l3964 2D10                          l3948 2C82                          l3892 2B0E  
                        l3884 2AE8                          l3868 2A68                          l3876 2A94  
                        l3798 1362                          l2998 0AAE                          l3982 2DA6  
                        l3974 2D5C                          l3966 2D22                          l3958 2CD0  
                        l3990 2DEE                          l3894 2B18                          l3886 2AF0  
                        l3878 2AA6                          l3992 2E00                          l3984 2DAE  
                        l3968 2D26                          l3976 2D7A                          l3896 2B22  
                        l3888 2AFA                          _ADFM 7E07                          l3994 2E04  
                        l3986 2DC8                          l3978 2D8E                          l3898 2B30  
                        l3996 2E20                          l3988 2DE6                          l3998 2E24  
                        _ADON 7E10                          STR_1 2EC0                          STR_2 2EF5  
                        STR_3 2F27                          STR_4 2F7F                          STR_5 2F06  
                        STR_6 2FD6                          STR_7 2FBD                          STR_8 2F72  
                        STR_9 2FA1                          _BRGH 7D62                          _CREN 7D5C  
                        u2000 1446                          u2001 1442                          u2010 145A  
                        u2011 1456                          u2020 146E                          u2100 1518  
                        u2021 146A                          u2101 1514                          u2030 1482  
                        u2110 1552                          u2031 147E                          u2111 154E  
                        u2040 149E                          u2120 1574                          u2200 12B8  
                        u3000 1FB8                          u2041 149A                          u2121 1570  
                        u2201 12B4                          u3001 1FB4                          u2050 14B2  
                        u2130 159C                          u2210 113C                          u3010 1FCC  
                        u2051 14AE                          u2131 1598                          u2211 1138  
                        u3011 1FC8                          u2060 14C6                          u2300 0E84  
                        u2140 15CE                          u2220 1156                          u3020 1FDE  
                        u3100 1ABE                          u2061 14C2                          u2301 0E80  
                        u2141 15CA                          u2221 1152                          u3021 1FDA  
                        u3101 1ABA                          u2070 14DA                          u2310 0E9C  
                        u2150 1200                          u2230 117C                          u3030 1FFA  
                        u3110 1AD6                          u2071 14D6                          u2311 0E98  
                        u2151 11FC                          u2231 1178                          u3031 1FF6  
                        u3111 1AD2                          u2320 0DF4                          u2160 1222  
                        u2240 119A                          u2080 0A48                          u3040 200C  
                        u2400 0FF4                          u3200 2A0A                          u3120 1B2C  
                        u2321 0DF0                          u2161 121E                          u2241 1196  
                        u2081 0A44                          u3041 2008                          u2401 0FF0  
                        u3201 2A06                          u3121 1B28                          u2330 0E0C  
                        u2090 14F6                          u2170 1248                          u2250 11B6  
                        u3050 202A                          u2410 100E                          u3210 2A1E  
                        u3130 1BD6                          u2331 0E08                          u2091 14F2  
                        u2171 1244                          u2251 11B2                          u3051 2026  
                        u2411 100A                          u3211 2A1A                          u3131 1BD2  
                        u2180 126A                          u2260 11DC                          u2500 17F8  
                        u2340 0BA4                          u2420 102C                          u3300 2C08  
                        u3220 2A4C                          u3140 1BEC                          u3060 1A32  
                        u2181 1266                          u2261 11D8                          u2501 17F4  
                        u2341 0BA0                          u2421 1028                          u3301 2C04  
                        u3221 2A48                          u3141 1BE8                          u3061 1A2E  
                        u2270 0E44                          u2190 1288                          u2350 1706  
                        u2510 181E                          u3150 133C                          u2430 1042  
                        u3310 2C46                          u3230 2AA6                          u3070 1A56  
                        u2271 0E40                          u2191 1284                          u2351 1702  
                        u2511 181A                          u3151 1338                          u2431 103E  
                        u3311 2C42                          u3231 2AA2                          u3071 1A52  
                        u2280 0E5A                          u2360 171A                          u2520 1830  
                        u3160 13D0                          u2440 1066                          u2600 2604  
                        u3400 2E00                          u3320 2C82                          u3240 2ABA  
                        u3080 1A84                          u2281 0E56                          u2361 1716  
                        u2521 182C                          u3161 13CC                          u2441 1062  
                        u2601 2600                          u3401 2DFC                          u3321 2C7E  
                        u3241 2AB6                          u3081 1A80                          u2290 0E6A  
                        u3170 0F74                          u2370 10AC                          u2530 1842  
                        u2450 1776                          u2610 263A                          u3410 2E20  
                        u3330 2C9E                          u3250 2AE8                          u3090 1A96  
                        u2291 0E66                          u3171 0F70                          u2371 10A8  
                        u2531 183E                          u2451 1772                          u2611 2636  
                        u3411 2E1C                          u3331 2C9A                          u3251 2AE4  
                        u3091 1A92                          u1900 0C10                          u3500 21BE  
                        u3180 0FB0                          u2380 0ED4                          u2540 187E  
                        u2460 1796                          u2700 2926                          u2620 2696  
                        u3420 2E4E                          u3340 2CB8                          u3260 2B44  
                        u1901 0C0C                          u3501 21BA                          u3181 0FAC  
                        u2381 0ED0                          u2541 187A                          u2461 1792  
                        u2701 2922                          u2621 2692                          u3421 2E4A  
                        u3341 2CB4                          u3261 2B40                          u1910 0C54  
                        u3510 2236                          u3190 0FC2                          u2470 17AC  
                        u2390 0FDA                          u2710 2938                          u2630 26BA  
                        u2550 250C                          u3430 2E6A                          u3350 2CD0  
                        u3270 2B58                          u1911 0C50                          u3511 2232  
                        u3191 0FBE                          u2471 17A8                          u2391 0FD6  
                        u2711 2934                          u2631 26B6                          u2551 2508  
                        u3431 2E66                          u3351 2CCC                          u3271 2B54  
                        u3600 2486                          u3520 2268                          u1920 0C7C  
                        u2480 17CC                          u2800 1D38                          u2720 1C3E  
                        u2640 26CE                          u2560 2542                          u3440 2E92  
                        u3360 2D22                          u3280 2B86                          u3601 2482  
                        u3521 2264                          u1921 0C78                          u2481 17C8  
                        u2801 1D34                          u2721 1C3A                          u2641 26CA  
                        u2561 253E                          u3441 2E8E                          u3361 2D1E  
                        u3281 2B82                          u1930 0D8C                          u3610 2498  
                        u3530 228A                          u3450 20C6                          u2490 17E2  
                        u2810 1D52                          u2730 1C62                          u2650 2724  
                        u2570 257E                          u3370 2D3A                          u3290 2BE8  
                        u3611 2494                          u3531 2286                          u3451 20C2  
                        u2491 17DE                          u2811 1D4E                          u2731 1C5E  
                        u2651 2720                          u2571 257A                          u3371 2D36  
                        u3291 2BE4                          u1940 0DB4                          u3540 22BC  
                        u3460 20F8                          u2900 1EE8                          u2820 1D6E  
                        u2740 1C90                          u2660 2748                          u2580 25B0  
                        u3380 2D8E                          u3700 19C2                          u3620 18C6  
                        u3541 22B8                          u3461 20F4                          u2901 1EE4  
                        u2821 1D6A                          u2741 1C8C                          u2661 2744  
                        u2581 25AC                          u3381 2D8A                          u3701 19BE  
                        u3621 18C2                          u1950 0DC4                          u1870 09FE  
                        u3550 22F2                          u3470 211A                          u2910 1F02  
                        u2830 1D9C                          u2750 1CA2                          u2670 27CE  
                        u2590 25D2                          u3390 2DA6                          u3710 19DE  
                        u3630 18DE                          u1951 0DC0                          u1871 09FA  
                        u3551 22EE                          u3471 2116                          u2911 1EFE  
                        u2831 1D98                          u2751 1C9E                          u2671 27CA  
                        u2591 25CE                          u3391 2DA2                          u3711 19DA  
                        u3631 18DA                          u1880 0BEE                          u1960 13F0  
                        u3560 232E                          u3480 214C                          u2920 1F14  
                        u2840 1DAE                          u2760 1CCC                          u2680 2818  
                        u3640 1902                          u1881 0BE8                          u1937 0D82  
                        u1961 13EC                          u3561 232A                          u3481 2148  
                        u2921 1F10                          u2841 1DAA                          u2761 1CC8  
                        u2681 2814                          u3641 18FE                          u1970 1404  
                        u3570 2362                          u3490 2182                          u2930 1F26  
                        u2850 1DFA                          u2770 1CDE                          u2690 283A  
                        u3650 191E                          u1947 0DAA                          u1971 1400  
                        u3571 235E                          u3491 217E                          u2931 1F22  
                        u2851 1DF6                          u2771 1CDA                          u2691 2836  
                        u3651 191A                          u1980 1418                          u3580 23A0  
                        u2940 1F38                          u2860 1E16                          u2780 1D04  
                        u3660 1960                          u1981 1414                          u3581 239C  
                        u2941 1F34                          u2861 1E12                          u2781 1D00  
                        u3661 195C                          u1990 142C                          u3590 240E  
                        u2950 1F52                          u2870 1E28                          u2790 1D26  
                        u3670 1970                          u1895 0BF0                          u1991 1428  
                        u3591 240A                          u2951 1F4E                          u2871 1E24  
                        u2791 1D22                          u3671 196C                          u2960 1F64  
                        u2880 1EB6                          u3680 198A                          u2961 1F60  
                        u2881 1EB2                          u3681 1986                          u2970 1F78  
                        u2890 1ED6                          u3690 19A6                          u2971 1F74  
                        u2891 1ED2                          u3691 19A2                          _RCIE 7CED  
                        u2980 1F8A                          _RCEN 7E2B                          _RCIF 7CF5  
                        u2981 1F86                          u2990 1FA6                          u2991 1FA2  
                        _RBPU 7F8F                          _SPEN 7D5F                          _RSEN 7E29  
                        _TXIF 7CF4                 settime@minute 0023                 settime@second 0025  
              setpassword@key 002E                setpassword@sec 0035                          _arr1 007E  
                        _gear 0060                          _main 1884                          _axis 005C  
                        _menu 1BFC                          _time 0052                          fsr0h 0FEA  
                        fsr1h 0FE2                          indf0 0FEF                          fsr2h 0FDA  
                        fsr0l 0FE9                          indf2 0FDF                          fsr1l 0FE1  
                        fsr2l 0FD9                          _puts 0B70                          prodh 0FF4  
                        prodl 0FF3                          start 0000          ??_init_matrix_keypad 0001  
                ___param_bank 0000                clcd_write@byte 0002                   _store_event 15F0  
               _i2c_rep_start 09D0                 ??_i2c_rx_mode 0001                  ?_init_ds1307 0001  
             __end_of___aldiv 15F0               __end_of___almod 12DA                         _ADCS0 7E00  
                       _ADCS1 7E01                         _ADCS2 7E02                         ?_main 0001  
                ?_read_ds1307 0001                         _ACKEN 7E2C                         _ACKDT 7E2D  
              ??_display_time 0006                         ?_menu 0001                         _BCLIF 7D0B  
                       _ACQT0 7E03                         _ACQT1 7E04                         _ACQT2 7E05  
             __end_of___awdiv 11EE                         STR_10 2FB4                         STR_11 2F17  
                       STR_12 2EA9                         STR_20 2FE4                         STR_13 2FFC  
                       STR_21 2FE7                         STR_14 2FFC                         STR_30 2F37  
                       STR_22 2FEA                         STR_23 2FDC                         STR_31 2F8C  
                       STR_15 2F55                         STR_24 2FF9                         STR_32 2F46  
                       STR_16 2FF0                         STR_25 2FF3                         STR_33 2F64  
                       STR_17 2FF6                         STR_34 2FCE                         STR_26 2EE4  
                       STR_18 2FED                         STR_27 2EDF                         STR_35 2FAB  
                       STR_19 2FE1                         STR_28 2EDF                         STR_36 2F97  
             __end_of___awmod 1078                         STR_37 2FC6                         STR_29 2ED3  
                       ?_puts 0002               ___awdiv@divisor 0003               ___awdiv@counter 0005  
                       _VCFG0 7E0C                         _VCFG1 7E0D                         _RCREG 0FAE  
                       _SPBRG 0FAF                         _PORTB 0F81                         _PORTD 0F83  
                       _TRISB 0F93                         _TRISC 0F94                         _TRISD 0F95  
                       _SSPIF 7CF3                         _TXREG 0FAD                         _adc_v 003D  
             setpassword@wait 0031                         _flick 0041                         _count 005B  
                       _value 0096                         _speed 1078                         _putch 0A38  
                       _vmenu 006E                         main@i 003B                         menu@i 0019  
                       menu@s 0017                  ?_inti_config 0001                         tablat 0FF5  
             __end_of_settime 2EA8                         puts@s 0002                         status 0FD8  
            init_ds1307@dummy 0004                    _i2c_no_ack 09B2               __initialization 0CF8  
              ?_i2c_rep_start 0001                  __end_of_main 19F0                  __end_of_menu 203A  
                __end_of_puts 0BA6              __end_of_i2c_idle 0A02              __end_of_i2c_read 09F0  
            __end_of_i2c_stop 09C8             ??_read_ext_eeprom 0002                 ?_download_log 0001  
                      ??_main 003B                        ??_menu 0011                        ??_puts 0004  
               __activetblptr 0002           __end_of_i2c_rx_mode 09D0          write_ext_eeprom@data 0002  
                      _ADCON0 0FC2                        _ADCON1 0FC1              read_switches@key 004B  
                      _ADRESH 0FC4                        _ADRESL 0FC3              ___awdiv@dividend 0001  
            _write_ext_eeprom 0C16                        ?_speed 0001                        ?_putch 0001  
                      _GODONE 7E11                  _write_ds1307 0A96                        _SSPADD 0FC8  
                      _TRISC3 7CA3                        _TRISC4 7CA4                        _TRISC6 7CA6  
                      _TRISC7 7CA7                        _TRISD7 7CAF                        _SSPBUF 0FC9  
            setpassword@i_523 0022              setpassword@i_528 002A              setpassword@delay 0026  
            __end_of_get_time 0F2E              setpassword@count 001A                     ??___aldiv 0009  
                   ??___almod 0017              setpassword@trail 0015                     ??___awdiv 0005  
                   ??___awmod 000D                        _main_f 0051              __end_of_init_i2c 0A64  
            __end_of_init_adc 0AF2                        _menu_f 0050              __end_of_read_adc 0C9C  
                      clear_0 0D3E                        clear_1 0D4A                ??_download_log 0004  
            ___awdiv@quotient 0007                 view_log@delay 001E       change_pass@new_password 0022  
             ___awmod@divisor 000B                        isa$std 0001              __end_of_scan_key 14E4  
             ___awmod@counter 000D                        _strcmp 0DC6                  __pdataCOMRAM 005B  
                __mediumconst 2EA8                        tblptrh 0FF7                        tblptrl 0FF6  
                      tblptru 0FF8                        speed@r 0019              __end_of_view_log 1BFC  
                ?_setpassword 0001                     ??_settime 001C                    __accesstop 0060  
     __end_of__initialization 0D50          __end_of_display_time 0A14                 ___rparam_used 0001  
             ??_i2c_rep_start 0001              _save_time_to_RTC 0C9C                   ?_i2c_no_ack 0001  
              __pcstackCOMRAM 0001                  __pidataBANK0 0AB4                   _i2c_rx_mode 09C8  
               __end_of_speed 112A                 __end_of_putch 0A4E               change_pass@wait 002C  
           __end_of_i2c_start 09C0             __end_of_i2c_write 09E4                       ??_speed 0019  
                     ??_putch 0001       write_ext_eeprom@address 0005                    __pbssBANK0 007E  
                   ?_i2c_idle 0001                     ?_i2c_read 0001                     ?_i2c_stop 0001  
                  _clcd_print 0D5A                    _clcd_putch 0A64                    _clcd_write 0BDC  
                ?_store_event 0001               read_ds1307@data 0003             read_switches@once 005E  
                     _ACKSTAT 7E2E                    _field_flag 0047                       ?_strcmp 0001  
                     _SSPCON1 0FC6                     ?_get_time 0001                 _read_switches 0E32  
                  ??_i2c_idle 0001                    ??_i2c_read 0001             __end_of_dashboard 1884  
                  ??_i2c_stop 0001                     ?_init_i2c 0001          __end_of_download_log 13DC  
                   ?_init_adc 0001                     ?_read_adc 0001             __end_of_clear_log 0FC8  
                   ?_scan_key 0001                  menu@prev_key 0011               _read_ext_eeprom 0B1C  
                     __Hparam 0000                       __Lparam 0000                       ___aldiv 14E4  
                     ___almod 11EE                       ___awdiv 112A                       ___awmod 0FC8  
                   ?_view_log 0001      __end_of_write_ext_eeprom 0C56                  store_event@i 001B  
                     __pcinit 0CF8                       _clear_f 004C                       __ramtop 0600  
                     __ptext0 1884                       __ptext1 19F0                       __ptext2 2954  
                     __ptext3 0C9C                       __ptext4 249A                       __ptext5 0FC8  
                     __ptext6 1BFC                       __ptext7 0A7C                       __ptext8 0A26  
                     __ptext9 0A14             __end_of_init_clcd 0BDC             __end_of_init_uart 0A38  
            ___awmod@dividend 0009                 ??_change_pass 0011              ___aldiv@dividend 0001  
                     _settime 2954                ?_read_switches 0001  clear_log@long_press_detected 0009  
                  ??_get_time 0004          end_of_initialization 0D50                       menu@key 0016  
                  clear_log@t 0007                    ??_init_i2c 0001                    ??_init_adc 0001  
               __Lmediumconst 2EA8                    ??_read_adc 0003                    ??_scan_key 0001  
                 ?_clcd_print 0003                   ?_clcd_putch 000F                   ?_clcd_write 0001  
            ___aldiv@quotient 000B                       postdec1 0FE5                       postdec2 0FDD  
                     postinc0 0FEE                       postinc1 0FE6                       postinc2 0FDE  
                  ??_view_log 0011                       strcmp@l 0001                       strcmp@r 0003  
                   _PORTBbits 0F81               read_adc@channel 0007                  _display_time 0A02  
    __end_of_save_time_to_RTC 0CF8                 i2c_write@data 0001               read_adc@reg_val 0005  
     __end_of_read_ext_eeprom 0B46                   settime@hour 0021                   settime@wait 001E  
         __end_of_change_pass 249A                  ??_i2c_no_ack 0001                 _long_press_S5 0045  
               _long_press_S6 0043                  ?_i2c_rx_mode 0001                 __pidataCOMRAM 09AE  
                 view_log@key 0022                __end_of_strcmp 0E32           start_initialization 0CF8  
            change_pass@k_176 001E               ??_read_switches 0001                     _i2c_start 09B8  
                   _i2c_write 09D8            __end_of_i2c_no_ack 09B8           change_pass@pwd_flag 0027  
       __end_of_i2c_rep_start 09D8                 ??_init_ds1307 0004                   __pdataBANK0 0060  
               ??_read_ds1307 0002                  _download_log 12DA                      ??_strcmp 0005  
 read_switches@detection_type 0001                   __pbssCOMRAM 003D                   _change_pass 203A  
                  ?_i2c_start 0001                    ?_i2c_write 0001                store_event@key 0001  
              change_pass@key 002B              ?_read_ext_eeprom 0001                 ??_inti_config 0005  
                change_pass@i 0030                  change_pass@k 001A                  change_pass@p 0029  
                   _dashboard 1720                     _clear_log 0F2E                 __pmediumconst 2EA8  
                    ?___aldiv 0001                      ?___almod 000F                      ?___awdiv 0001  
                    ?___awmod 0009            read_ds1307@address 0002                     _clock_reg 0093  
           ?_write_ext_eeprom 0002              ___almod@dividend 000F            ??_write_ext_eeprom 0003  
         __end_of_init_ds1307 0B70                      ?_settime 0001           __end_of_read_ds1307 0B1C  
                   _init_clcd 0BA6                     _init_uart 0A26                 ?_write_ds1307 0002  
             ___aldiv@divisor 0005               ___aldiv@counter 0009                  ??_clcd_print 0006  
                ??_clcd_putch 0010    __end_of_init_matrix_keypad 0A26                  ??_clcd_write 0002  
                  ?_dashboard 0001           __end_of_inti_config 0A96                    ?_clear_log 0001  
                dashboard@key 001C              view_log@readdata 0013                 download_log@j 0004  
               download_log@k 0006         clcd_write@control_bit 0001                    settime@key 0020  
            view_log@prev_key 001D             ?_save_time_to_RTC 0001                 ??_setpassword 0011  
                 ??_i2c_start 0001            __end_of_clcd_print 0DC6                   ??_i2c_write 0001  
          __end_of_clcd_putch 0A7C            __end_of_clcd_write 0C16                    ?_init_clcd 0001  
          ??_save_time_to_RTC 0004                    ?_init_uart 0001                     copy_data0 0D0C  
                   copy_data1 0D2C                ??_write_ds1307 0003                      _i2c_idle 09F0  
                    _i2c_read 09E4                      _i2c_stop 09C0                     menu@delay 0014  
                   menu@blink 0012                      __Hrparam 0000                  clear_log@key 0006  
                    __Lrparam 0000            setpassword@attempt 002F                   _init_ds1307 0B46  
      read_ext_eeprom@address 0002                   _read_ds1307 0AF2           write_ds1307@address 0003  
                    __ptext10 0A4E                      __ptext11 0B46                      __ptext20 15F0  
                    __ptext12 0A96                      __ptext21 1078                      __ptext13 0BA6  
                    __ptext30 09C8                      __ptext22 0C56                      __ptext14 0AD2  
                    __ptext31 09B2                      __ptext23 112A                      __ptext15 12DA  
                    __ptext40 0DC6                      __ptext32 0A02                      __ptext24 11EE  
                    __ptext16 0B1C                      __ptext41 0E32                      __ptext33 0F2E  
                    __ptext25 14E4                      __ptext17 0B70                      __ptext42 13DC  
                    __ptext34 203A                      __ptext26 0EA8                      __ptext18 0A38  
                    __ptext43 0A64                      __ptext35 0C16                      __ptext27 0AF2  
                    __ptext19 1720                      __ptext44 0D5A                      __ptext36 09D8  
                    __ptext28 09D0                      __ptext45 0BDC                      __ptext37 09C0  
                    __ptext29 09E4                      __ptext38 09B8                      __ptext39 09F0  
                    _get_time 0EA8               ___almod@divisor 0013               ___almod@counter 0017  
                 _inti_config 0A7C                      _init_i2c 0A4E           __end_of_setpassword 2954  
         read_ext_eeprom@data 0003                      _init_adc 0AD2                      _read_adc 0C56  
                    _scan_key 13DC                   ??_dashboard 001C                   ??_clear_log 0006  
               ??_store_event 0019                      _original 0078                      isa$xinst 0000  
                    _view_log 19F0                     view_log@k 0020                     view_log@s 0011  
 change_pass@confirm_password 0015                     putch@byte 0001                  ?_change_pass 0001  
                 ??_init_clcd 0003         __end_of_read_switches 0EA8                   ??_init_uart 0001  
        save_time_to_RTC@temp 0004          __end_of_write_ds1307 0AB4           __end_of_store_event 1720  
                ___aldiv@sign 000A                   _setpassword 249A              write_ds1307@data 0002  
                ___almod@sign 0018             download_log@index 007D               download_log@key 0001  
